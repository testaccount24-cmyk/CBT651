//*********************************************************************
//*                                                                   *
//*  STEP010   PGM=ASMA90                                             *
//*                                                                   *
//*********************************************************************
//STEP010 EXEC PGM=ASMA90,
//             PARM='BATCH,USING(WARN(9))'
//SYSUT1   DD  DSN=&&SYSUT1,
//             SPACE=(4096,(120,120),,,ROUND),
//             UNIT=SYSALLDA,
//             DCB=BUFNO=1
//SYSLIB   DD  DSN=SYS1.MACLIB,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSLIN  DD   DSN=&&OBJ(GDERLSBT),
//             SPACE=(CYL,(3,5,5)),
//             DISP=(NEW,PASS,DELETE),
//             UNIT=3390,
//             RECFM=FB,
//             LRECL=80,
//             BLKSIZE=3200
//SYSIN    DD  *
* ------------------------------------------------------------------- *
*                                                                     *
* SHOW RLS STATUS OF A DATASET IN BATCH                               *
*                                                                     *
* CONTROL CARDS                                                       *
*   SHOW=<DSNAME>      ASK THE STATUS OF THE RLS STATUS AND SHOW      *
*                      VALUES IN THE OUTPUT REPORT                    *
*   LEVEL=<CATALOG FILTER> LOOK IN THE CATALOG FOR ALL CLUSTERS THAT  *
*                      MATCH THE FILTER                               *
* DDNAMES                                                             *
*   GDERLSA            INPUT CONTROL CARDS                            *
*   GDERLS01           STATUS REPORT OF CONTROL CARDS <OPTIONAL>      *
*   GDERLS02           OUTPUT FROM THE CALL           <OPTIONAL>      *
*   GDERLS03           TRACE OF CALL TO ROUTINES      <OPTIONAL>      *
*                                                                     *
* EXAMPLE JCL                                                         *
*   //GDERLSA  DD  *                                                  *
*   SHOW=MY.BWO.DATASET                                               *
*   LEVEL=MY.BWO.**                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   GDEDDN   &DDN,                                                X
               &DDNLOC=,       OR DDNLOCATION                          X
               &FOUND=,        LABEL                                   X
               &NOTFOUND=      LABEL
         LCLB  &ERRORS
&ERRORS  SETB  0
         GBLB  &GDEDDNSTORAGEDEFINED
         AIF   ('&DDNLOC' NE '').A0010
         AIF   ('&DDN' NE '').A0010
&ERRORS  SETB  1
         MNOTE 8,'DDN OR DDNLOC MUST BE DEFINED'
.A0010   AIF   ('&FOUND' NE '').A0020
&ERRORS  SETB  1
         MNOTE 8,'LABEL FOUND MUST BE DEFINED'
.A0020   AIF   ('&NOTFOUND' NE '').A0030
&ERRORS  SETB  1
         MNOTE 8,'LABEL NOTFOUND MUST BE DEFINED'
.A0030   ANOP
         AIF   (&ERRORS).Z0010
.**********************************************************************
.*                                                                    *
.* THIS MACRO IS USED TO CHECK THE TIOT FOR A DDNAME                  *
.*                                                                    *
.**********************************************************************
&LABEL   L     R14,=A(GDEDDN_RETURN_TIOT)
         EXTRACT (R14),FIELDS=TIOT GET TIOT ADDRESS
         L     R14,=A(GDEDDN_RETURN_TIOT)
         L     R14,0(R14)        GET TIOT ADDRESS
         LA    R15,24(R14)       MOVE TO FIRST DDNAME ENTRY IN TIOT
         XR    R14,R14           CLEAR R14
         ICM   R14,B'0001',0(R15) MOVE IN LENGTH
         LTR   R14,R14           END OF TIOT?
         BZ    &NOTFOUND         YES-BRANCH (RETURN CODE) MUST FIND
         CH    R14,=H'20'        IS THIS THE LENGTH WE EXPECT?
         BNE   *+4+6+4           NO-BRANCH (LOOP AGAIN)   MUST BE 20
         AIF   ('&DDNLOC' NE '').B0010
         CLC   4(8,R15),=CL8'&DDN' IS THIS THE DDNAME?
         AGO   .B0020
.B0010   ANOP
         CLC   4(8,R15),&DDNLOC    IS THIS THE DDNAME?
.B0020   ANOP
         BE    &FOUND            YES-BRANCH (FIND UCB)
         AR    R15,R14           MOVE TO NEXT TABLE ENTRY
         B     *-2-4-6-4-4-4-2-4 LOOP AGAIN
         AIF   (&GDEDDNSTORAGEDEFINED).Z0010
&GDEDDNSTORAGEDEFINED   SETB   1
GDEDDN_RETURN_TIOT      DS     F
.Z0010   ANOP
         MEND
         MACRO
&NAME    GDEH2E   &SOURCE,&TARGET,&LENGTH,&WORKR1=14,&WORKR2=15,       X
               &WORKR3=R2,&WORKR4=R3,&WORKR5=R1,&SAVE=NO
         LCLC  &GDEH2ELABEL1
&GDEH2ELABEL1 SETC 'GDEH2E_'.'&SYSNDX'
.*
.*  SET UP STORAGE AS NEEDED
.*
         AIF  ('&SAVE' EQ 'NO').A0010
         CNOP  0,4
         B     *+28
&GDEH2ELABEL1 DS    6F
.A0010   ANOP
.*
.*  SAVE REGS IF ASKED TO DO SO
.*
         AIF   ('&SAVE' EQ 'NO').A0020
&NAME    STM   14,3,&GDEH2ELABEL1
         AGO   .A0030
.A0020   ANOP
         AIF   (K'&NAME EQ 0).A0030
&NAME    EQU   *
.A0030   ANOP
         L     &WORKR5,=A(&LENGTH)
         LA    &WORKR3,&SOURCE
         LA    &WORKR4,&TARGET
         ICM   &WORKR2,B'1000',0(&WORKR3)
         SLL   &WORKR1,4
         SLDL  &WORKR1,4
         SLL   &WORKR1,4
         SLDL  &WORKR1,4
         STCM  &WORKR1,B'0011',0(&WORKR4)
         TR    0(2,&WORKR4),=C'0123456789ABCDEF'
         LA    &WORKR3,1(&WORKR3)
         LA    &WORKR4,2(&WORKR4)
         BCT   &WORKR5,*-38
.*
.*  RESTORE REGS IF ASKED TO DO SO
.*
         AIF   ('&SAVE' EQ 'NO').A0040
         LM    14,3,&GDEH2ELABEL1
.A0040   ANOP
         MEND
         MACRO
&LABEL   GDEPRINT &DATA,&TYPE=WRITE,                                   X
               &OK=,           LABEL                                   X
               &NOTOK=,        LABEL                                   X
               &HEADINGS=,     (HEAD1,HEAD2,....HEAD12)                X
               &TITLE=,        TITLE OR 'CENTER THIS STUFF'            X
               &BREAKS=, NORMAL,  FORCE, SUBHEADING                    X
               &BREAKTYPE=, ALLOW, PROHIBIT, NOHEADINGS                X
               &RESETPAGENUMBER=, NO, YES                              X
               &TABLELEN=, 80,                                         X
               &TABLEENTRYLEN=, 80,                                    X
               &LINESPERPAGE=, 60,                                     X
               &REPORTDD=,                                             X
               &NAME=,                                                 X
               &REPORTID=01,                                           X
               &CHECK=,                                                X
               &PARMLIST=
.**********************************************************************
.*                                                                    *
.* THIS MACRO IS USED TO CALL THE PRINT DRIVER ROUTINES               *
.* INTERFACE BY USING THE TYPE KEYWORK                                *
.*                                                                    *
.* TYPE=OPEN        = INITIALIZE AND OPEN THE PRINTER           .C    *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=WRITE       = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=1)  .D    *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=CHARZONENUM = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=2)  .E    *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=DUMP        = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=3)  .F    *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=TABLE       = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=4) .G     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=HEX         = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=5) .H     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=TABLEORHEX  = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=6) .I     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=STORAGE     = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=7) .J     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=TABLEORHEXWITHTIME = WRITE OUTPUT2PRINTER  (SUBTYPE=8) .K     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=DUMPSTORAGEANDTIME = WRITE OUTPUT2PRINTER  (SUBTYPE=9) .L     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=TRACE       = PRINT THE SAVE AREA FROM THE (SUBTYPE=T) .M     *
.*                    LAST CALL TO EXAMINE FOR ERRORS                 *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=CLOSE       = CLOSE THE PRINTER                        .N     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                             .O     *
.* TYPE=CHECK       = CHECK FOR A SET OF LINES TO PRINT AS A BLOCK, IF*
.*                    SPACE IS NOT AVAILABLE, PERFORM A PAGE BREAK NOW*
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=PAGENUM     = RETURN CURRENT PAGE NUMBER                      *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=PARMLIST DECLARES STORAGE TO BE USED BY PARMLIST              *
.*                                                                    *
.* TYPE=DSECT DECLARES DSECT TO MAP THE STORAGE SET ASIDE BY          *
.*            PARMLIST                                                *
.*                                                                    *
.* SAMPLE USAGE                                                       *
.*   IN DSECT SECTION DECLARE                                         *
.*            GDEPRINT TYPE=DSECT,REPORTDD=CSD020,NAME=PARMDP,        *
.*                  REPORTID=05                                       *
.*   IN OPEN SECTION SPECIFY                                          *
.*            GDEPRINT TYPE=OPEN,NAME=PARMDP,                         *
.*                  TITLE='USERPROGRAM TRACING FOR DFHCSDUP',         *
.*                  HEADINGS=(HEAD1)                                  *
.*       GDEPRINT TYPE=OPEN,NAME=PARMDP,                              *
.*             TITLE='USERPROGRAM TRACING FOR DFHCSDUP',              *
.*             HEADINGS=(HEAD1,HEAD2)                                 *
.*   IN OUTPUT SECTION USE                                            *
.*            GDEPRINT LABEL,NAME=PARMDP                              *
.*            GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,NAME=PARMDP,     *
.*                  TABLELEN=40,TABLEENTRYLEN=4                       *
.*   IN CLOSE SECTION DO                                              *
.*            GDEPRINT TYPE=CLOSE,NAME=PARMDP                         *
.*   IN STORAGE SECTION RESERVE STORAGE BY                            *
.*            GDEPRINT TYPE=PARMLIST,NAME=PARMDP                      *
.*                                                                    *
.**********************************************************************
         GBLC  &GDEPRINTCSECTDEFINED(32)
         GBLC  &GDEPRINTDSECTDEFINED(32)
         GBLC  &GDEPRINTREPORTDD(32)
         GBLC  &GDEPRINTREPORTID(32)
         LCLA  &CNTA,&CNTB,&CNTC,&CNTD
         LCLC  &ROUT01,&ROUT01ID
         LCLC  &CMD,&SUBCMD
         LCLC  &REPORT,&ZREPORTDD
         LCLC  &ZBREAKS,&ZBREAKTYPE,&ZRESETPAGENUMBER,
         LCLC  &ZTABLELEN,&ZTABLEENTRYLEN,&ZLINESPERPAGE
         LCLC  &LBL
&ZBREAKS                SETC  '&BREAKS'
&ZBREAKTYPE             SETC  '&BREAKTYPE'
&ZRESETPAGENUMBER       SETC  '&RESETPAGENUMBER'
&ZTABLELEN              SETC  '&TABLELEN'
&ZTABLEENTRYLEN         SETC  '&TABLEENTRYLEN'
&ZLINESPERPAGE          SETC  '&LINESPERPAGE'
.**********************************************************************
.*
.*     KEEP A REPORTDD AND REPORT ID IN A LISTING KEYED BY &NAME
.*
.**********************************************************************
         AIF   ('&NAME' NE '').AA000
         MNOTE 8,'NAME MUST BE SPECIFIED'
         AGO   .Z0010
.AA000   ANOP
.*
.*     SEARCH TABLE
.*
&CNTA    SETA  1
&REPORT  SETC  '&NAME'.'$$$$$$'
&REPORT  SETC  '&REPORT'(1,6)
.AA010   ANOP
         AIF   ('&GDEPRINTCSECTDEFINED(&CNTA)' EQ '').AA020
         AIF   ('&GDEPRINTCSECTDEFINED(&CNTA)' EQ '&REPORT').AA030
&CNTA    SETA  &CNTA+1
         AIF   (&CNTA LE 32).AA010
         MNOTE 8,'MORE THAN 32 PRINTOUTS DEFINED - LIMIT REACHED'
         AGO   .Z0010
.*
.*     NOT FOUND SO ADD TO TABLE
.*
.AA020   ANOP
&ZREPORTDD     SETC  '&REPORTDD'
         AIF   ('&ZREPORTDD' NE '').AA021
&ZREPORTDD     SETC  '&SYSECT'.'$$$$$$'
&ZREPORTDD     SETC  '&ZREPORTDD'(1,6)
.AA021   ANOP
         AIF   ('&REPORTID' NE '').AA022
         MNOTE 8,'REPORTID MUST BE SPECIFIED ON THIS CALL'
         AGO   .Z0010
.AA022   ANOP
&CNTB    SETA  K'&REPORTID
         AIF   (&CNTB EQ 2).AA023
         MNOTE 8,'REPORTID MUST BE TWO CHARACTERS '
         AGO   .Z0010
.AA023   ANOP
&REPORT  SETC  '&NAME'.'$$$$$$'
&REPORT  SETC  '&REPORT'(1,6)
&GDEPRINTCSECTDEFINED(&CNTA) SETC  '&REPORT'
&GDEPRINTREPORTDD(&CNTA)     SETC  '&ZREPORTDD'
&GDEPRINTREPORTID(&CNTA)     SETC  '&REPORTID'
.*
.*     FOUND IN TABLE TO SET PARMS
.*
.AA030     ANOP
&REPORT    SETC  '&GDEPRINTCSECTDEFINED(&CNTA)'
&ZREPORTDD SETC '&GDEPRINTREPORTDD(&CNTA)'
&ROUT01    SETC  '&ZREPORTDD'.'&GDEPRINTREPORTID(&CNTA)'(1,2)
&ROUT01ID  SETC  '&ZREPORTDD'.'.R'.'&GDEPRINTREPORTID(&CNTA)'(1,2)
&LBL       SETC  'GDEPRINT_'.'&REPORT'(1,6).'_'
.**********************************************************************
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE
.*
.**********************************************************************
.*
.*     TYPE=PARMLIST
.*
.A0010   AIF   ('&TYPE' NE 'PARMLIST').B0010
         AIF   ('&PARMLIST' EQ '').A0020
&PARMLIST DS  0D       PROGRAMS WORKAREA
         DS    CL(&LBL.DSECT_LENGTH)
         AGO   .Z0010
.A0020   ANOP
&LBL.DATAAREA DS  0D    PROGRAMS WORKAREA
         DS    CL(&LBL.DSECT_LENGTH)
         AGO   .Z0010
.*
.*     TYPE=DSECT
.*
.B0010   AIF   ('&TYPE' NE 'DSECT').C0010
&CNTA    SETA  1
.B0020   ANOP
         AIF   ('&GDEPRINTDSECTDEFINED(&CNTA)' EQ '').B0030
         AIF   ('&GDEPRINTDSECTDEFINED(&CNTA)' EQ '&NAME').Z0010
&CNTA    SETA  &CNTA+1
         AIF   (&CNTA LE 32).B0020
         MNOTE 8,'MORE THAN 32 PRINTOUTS DEFINED - LIMIT REACHED'
         AGO   .B0020
.B0030   ANOP
&GDEPRINTDSECTDEFINED(&CNTA) SETC '&NAME'
&LBL.DSECT          DSECT        PRINT PARMLIST DSECT
&LBL.COMMAND        DS   CL1     CURRENT COMMAND
&LBL.SUBCOMMAND     DS   CL1     SUBCOMMAND
&LBL.DDNAME         DS   CL8     DDNAME FOR OUTPUT
&LBL.LENGTH         DS   AL2     TOTAL LENGTH OF A BLOCK TO PRINT
&LBL.SUBLENGTH      DS   AL2     SUB AREA LENTGTH IN A BLOCK
&LBL.REPORTID       DS   CL10    ID TO PUT ON REPORT
&LBL.LINESPERPAGE   DS   PL2     LINE OF OUTPUT BEFORE PAGE BREAK
&LBL.FORCENEWPAGE   DS   CL1     FORCE A NEW PAGE NOW
&LBL.NEWPAGEALLOWED DS   CL1     IS A NEW PAGE ALLOWED
&LBL.RESETPAGENUMBER DS  CL1     RESET THE PAGE NUMBER TO 1
&LBL.RETURNCODE     DS   CL2     RETURN CODE FROM THE ROUTINE
&LBL.CHECKCOUNT     DS   PL2     COUNT OF LINE FOR TYPE=CHECK
                    DS  0F
&LBL.ROUTINEADDRESS DS   CL4     ADDRESS OF PRINT PROGRAM
&LBL.PARMADDRESS    DS   CL4     ADDRESS PARM AREA
&LBL.USERDATAAREA   DS   CL4     ADDRESS USERDATAAREA
&LBL.HEADERADDRESS  DS   CL4     ADDRESS HEADERS
                    DS   11AL4   UP TO 12 HEADERS ALLOWED
&LBL.HEADING        DS   CL133   CENTER HEADING AREA
&LBL.DSECT_LENGTH   EQU  *-&LBL.DSECT
         AGO   .Z0010
.*
.*     TYPE=OPEN
.*
.C0010   AIF   ('&TYPE' NE 'OPEN').D0010
         AIF   ('&PARMLIST' EQ '').C0020
&LABEL   LA    R1,&PARMLIST
         AGO   .C0030
.C0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.C0030   ANOP
         USING &LBL.DSECT,R1
         L     R15,=V(GDEPRINT)
         ST    R15,&LBL.ROUTINEADDRESS
         AIF      ('&ZBREAKS' NE '').C0040
&ZBREAKS          SETC  'NORMAL'
.C0040   ANOP
         AIF      ('&ZBREAKTYPE' NE '').C0050
&ZBREAKTYPE       SETC  'ALLOW'
.C0050   ANOP
         AIF      ('&ZRESETPAGENUMBER' NE '').C0060
&ZRESETPAGENUMBER SETC  'NO'
.C0060   ANOP
         AIF      ('&ZTABLELEN' NE '').C0070
&ZTABLELEN        SETC  '80'
.C0070   ANOP
         AIF      ('&ZTABLEENTRYLEN' NE '').C0080
&ZTABLEENTRYLEN   SETC  '80'
.C0080   ANOP
         AIF      ('&ZLINESPERPAGE' NE '').C0090
&ZLINESPERPAGE    SETC  '60'
.C0090   ANOP
&CMD     SETC  '1'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=WRITE
.*
.D0010   AIF   ('&TYPE' NE 'WRITE').E0010
         AIF   ('&PARMLIST' EQ '').D0020
&LABEL   LA    R1,&PARMLIST
         AGO   .D0030
.D0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.D0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=CHARZONENUM
.*
.E0010   AIF   ('&TYPE' NE 'CHARZONENUM').F0010
         AIF   ('&PARMLIST' EQ '').E0020
&LABEL   LA    R1,&PARMLIST
         AGO   .E0030
.E0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.E0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '2'
         AGO   .P0010
.*
.*     TYPE=DUMP
.*
.F0010   AIF   ('&TYPE' NE 'DUMP').G0010
         AIF   ('&PARMLIST' EQ '').F0020
&LABEL   LA    R1,&PARMLIST
         AGO   .F0030
.F0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.F0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '3'
         AGO   .P0010
.*
.*     TYPE=TABLE
.*
.G0010   AIF   ('&TYPE' NE 'TABLE').H0010
         AIF   ('&PARMLIST' EQ '').G0020
&LABEL   LA    R1,&PARMLIST
         AGO   .G0030
.G0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.G0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '4'
         AGO   .P0010
.*
.*     TYPE=HEX
.*
.H0010   AIF   ('&TYPE' NE 'HEX').I0010
         AIF   ('&PARMLIST' EQ '').H0020
&LABEL   LA    R1,&PARMLIST
         AGO   .H0030
.H0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.H0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '5'
         AGO   .P0010
.*
.*     TYPE=TABLEORHEX
.*
.I0010   AIF   ('&TYPE' NE 'TABLEORHEX').J0010
         AIF   ('&PARMLIST' EQ '').I0020
&LABEL   LA    R1,&PARMLIST
         AGO   .I0030
.I0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.I0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '6'
         AGO   .P0010
.*
.*     TYPE=STORAGE
.*
.J0010   AIF   ('&TYPE' NE 'STORAGE').K0010
         AIF   ('&PARMLIST' EQ '').J0020
&LABEL   LA    R1,&PARMLIST
         AGO   .J0030
.J0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.J0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=TABLEORHEXWITHTIME
.*
.K0010   AIF   ('&TYPE' NE 'TABLEORHEXWITHTIME').L0010
         AIF   ('&PARMLIST' EQ '').K0020
&LABEL   LA    R1,&PARMLIST
         AGO   .K0030
.K0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.K0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '8'
         AGO   .P0010
.*
.*     TYPE=DUMPSTORAGEANDTIME
.*
.L0010   AIF   ('&TYPE' NE 'DUMPSTORAGEANDTIME').M0010
         AIF   ('&PARMLIST' EQ '').L0020
&LABEL   LA    R1,&PARMLIST
         AGO   .L0030
.L0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.L0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '9'
         AGO   .P0010
.*
.*     TYPE=TRACE
.*
.M0010   AIF   ('&TYPE' NE 'TRACE').N0010
         AIF   ('&PARMLIST' EQ '').M0020
&LABEL   LA    R1,&PARMLIST
         AGO   .M0030
.M0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.M0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  'T'
         AGO   .P0010
.*
.*     TYPE=CLOSE
.*
.N0010   AIF   ('&TYPE' NE 'CLOSE').O0010
         AIF   ('&PARMLIST' EQ '').N0020
&LABEL   LA    R1,&PARMLIST
         AGO   .N0030
.N0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.N0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '3'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=CHECK
.*
.O0010   AIF   ('&TYPE' NE 'CHECK').Q0010
         AIF   ('&PARMLIST' EQ '').O0020
&LABEL   LA    R1,&PARMLIST
         AGO   .O0030
.O0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.O0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '4'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=PAGENUM
.*
.Q0010   AIF   ('&TYPE' NE 'PAGENUM').Z0020
         AIF   ('&PARMLIST' EQ '').Q0020
&LABEL   LA    R1,&PARMLIST
         AGO   .Q0030
.Q0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.Q0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '5'
&SUBCMD  SETC  '1'
         AGO   .P0010
.**********************************************************************
.*
.*     ALL THE PARMS ARE SET UP TO BUILD STATEMENTS SO BUILD STATEMENTS
.*
.**********************************************************************
.P0010   ANOP
.*
.*     DO COMMAND AND SUBCOMMAND
.*
         MVI   &LBL.COMMAND,C'&CMD'
         MVI   &LBL.SUBCOMMAND,C'&SUBCMD'
.*
.*     DO REPORT DD
.*
         AIF   ('&TYPE' EQ 'OPEN').P0010A
         AIF   ('&REPORTDD' EQ '').P0011
.P0010A  ANOP
         MVC   &LBL.DDNAME,=CL8'&ROUT01'
.*
.*     DO TABLE LENGTH AND ENTRY LENGTH
.*
.P0011   AIF   ('&ZTABLELEN' EQ '').P0012
         AIF   ('&ZTABLELEN'(1,1) EQ '(').P0011A
         MVC   &LBL.LENGTH,=AL2(&ZTABLELEN)
         AGO   .P0012
.P0011A  STCM  &ZTABLELEN,B'0011',&LBL.LENGTH
.P0012   AIF   ('&ZTABLEENTRYLEN' EQ '').P0013
         AIF   ('&ZTABLEENTRYLEN'(1,1) EQ '(').P0012A
         MVC   &LBL.SUBLENGTH,=AL2(&ZTABLEENTRYLEN)
         AGO   .P0013
.P0012A  STCM  &ZTABLEENTRYLEN,B'0011',&LBL.SUBLENGTH
.*
.*     DO REPORT ID
.*
.P0013   AIF   ('&ROUT01ID' EQ '').P0014
         MVC   &LBL.REPORTID,=CL10'&ROUT01ID'
.*
.*     DO LINES PER PAGE
.*
.P0014   AIF   ('&ZLINESPERPAGE' EQ '').P0015
         ZAP   &LBL.LINESPERPAGE,=P'&ZLINESPERPAGE'
.*
.*     DO BREAKS
.*
.P0015   AIF   ('&ZBREAKS' EQ '').P0020
         AIF   ('&ZBREAKS' EQ 'NORMAL').P0016
         AIF   ('&ZBREAKS' EQ 'FORCE').P0017
         AIF   ('&ZBREAKS' EQ 'SUBHEADING').P0018
 MNOTE *,'INVALID BREAKS PARAMETER. USE NORMAL, FORCE, OR SUBHEADING'
.P0016   ANOP
         MVI   &LBL.FORCENEWPAGE,C'1'
         AGO   .P0020
.P0017   ANOP
         MVI   &LBL.FORCENEWPAGE,C'2'
         AGO   .P0020
.P0018   ANOP
         MVI   &LBL.FORCENEWPAGE,C'3'
         AGO   .P0020
.*
.*     DO BREAK TYPE
.*
.P0020   AIF   ('&ZBREAKTYPE' EQ '').P0030
         AIF   ('&ZBREAKTYPE' EQ 'ALLOW').P0021
         AIF   ('&ZBREAKTYPE' EQ 'PROHIBIT').P0022
         AIF   ('&ZBREAKTYPE' EQ 'NOHEADINGS').P0023
     MNOTE *,'BREAKTYPE IS INVALID. USE ALLOW, PROHIBIT, OR NOHEADINGS'
.P0021   ANOP
         MVI   &LBL.NEWPAGEALLOWED,C'1'
         AGO   .P0030
.P0022   ANOP
         MVI   &LBL.NEWPAGEALLOWED,C'2'
         AGO   .P0030
.P0023   ANOP
         MVI   &LBL.NEWPAGEALLOWED,C'3'
         AGO   .P0030
.*
.*     DO LINE NO RESET
.*
.P0030   AIF   ('&ZRESETPAGENUMBER' EQ '').P0040
         AIF   ('&ZRESETPAGENUMBER' EQ 'YES').P0031
         AIF   ('&ZRESETPAGENUMBER' EQ 'NO').P0032
     MNOTE *,'RESETPAGENUMBER IS INVALID. USE YES OR NO'
.P0031   ANOP
         MVI   &LBL.RESETPAGENUMBER,C'2'
         AGO   .P0040
.P0032   ANOP
         MVI   &LBL.RESETPAGENUMBER,C'1'
         AGO   .P0040
.*
.*     DO RETURN CODE
.*
.P0040   ANOP
         MVC   &LBL.RETURNCODE,=CL2'00'
.**********************************************************************
.*
.*     BUILD PARM LIST
.*
.**********************************************************************
.*
.*     FIRST PARM
.*
         LA    R14,&LBL.COMMAND
         ST    R14,&LBL.PARMADDRESS
.*
.*     SECOND PARM
.*
         AIF   ('&CHECK' EQ '').P0060
         ZAP   &LBL.CHECKCOUNT,=P'&CHECK'
         LA    R14,&LBL.CHECKCOUNT
         ST    R14,&LBL.USERDATAAREA
         AGO   .P0070
.P0060   ANOP
         AIF   ('&DATA' EQ '').P0065
         LA    R14,&DATA
         ST    R14,&LBL.USERDATAAREA
         AGO   .P0070
.P0065   ANOP
         LA    R14,0
         ST    R14,&LBL.USERDATAAREA
.P0070   ANOP
.*
.*     THIRD PARM
.*
&CNTA    SETA  1
&CNTB    SETA  1
         AIF   ('&TITLE' EQ '').P0080
         AIF   ('&TITLE'(1,1) EQ '''').P0075
&CNTB    SETA  2
&CNTC    SETA  L'&TITLE
&CNTD    SETA  (133-&CNTC)/2
         MVC   &LBL.HEADING,=CL133' '
         MVC   &LBL.HEADING+&CNTD.(&CNTC),&TITLE
         LA    R14,&LBL.HEADING
         ST    R14,&LBL.HEADERADDRESS
         AGO   .P0080
.P0075   ANOP
&CNTB    SETA  2
&CNTC    SETA  K'&TITLE-2
&CNTD    SETA  (133-&CNTC)/2
         MVC   &LBL.HEADING,=CL133' '
         MVC   &LBL.HEADING+&CNTD.(&CNTC),=C&TITLE
         LA    R14,&LBL.HEADING
         ST    R14,&LBL.HEADERADDRESS
         AGO   .P0080
.*
.*     FOURTH THRU FIFTEENTH PARMS
.*
.P0080   ANOP
&CNTC    SETA  N'&HEADINGS
         AIF   (&CNTC EQ 0).P0090
.P0081   AIF   (&CNTA GT &CNTC).P0086
         AIF   (&CNTB GT 12).P0084
&CNTD    SETA  4*(&CNTB-1)
         LA    R14,&HEADINGS(&CNTA)
         ST    R14,&LBL.HEADERADDRESS+&CNTD
&CNTA    SETA &CNTA+1
&CNTB    SETA &CNTB+1
         AGO   .P0081
.P0084   MNOTE 8,'MAXUMIM OF HEADING LINES EXCEEDED.'
         AGO   .P0090
.P0086   ANOP
&CNTD    SETA  4*(&CNTB-2)
         OI    &LBL.HEADERADDRESS+&CNTD,X'80'
.P0090   ANOP
.**********************************************************************
.*
.*     CALL THE ROUTINE
.*
.**********************************************************************
         L     R15,&LBL.ROUTINEADDRESS
         LA    1,&LBL.PARMADDRESS
         CALL  (15)
.**********************************************************************
.*
.*     CHECK RETURN CODES
.*
.**********************************************************************
         AIF   ('&OK' NE '').P0099
         AIF   ('&NOTOK' NE '').P0099
         AIF   ('&ZBREAKS' EQ 'FORCE').P0099
         DROP  R1
         AGO   .Z0010
.P0099   AIF   ('&PARMLIST' EQ '').P0100
         LA    R1,&PARMLIST
         AGO   .P0110
.P0100   ANOP
         LA    R1,&LBL.DATAAREA
.P0110   ANOP
         AIF   ('&ZBREAKS' NE 'FORCE').P0120
         MVI   &LBL.FORCENEWPAGE,C'1'
.P0120   ANOP
         AIF   ('&TYPE' EQ 'CHECK').P0150
.*
.*     RETURN CODE CHECKING FOR ALL BUT TYPE=CHECK
.*
         AIF   ('&OK' EQ '').P0130
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.P0130   AIF   ('&NOTOK' EQ '').P0140
         CLI   &LBL.RETCODE,C'0'
         BNE   &NOTOK
.P0140   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     RETURN CODE CHECKING FOR TYPE=CHECK
.*
.P0150   ANOP
         AIF   ('&OK' EQ '').P0160
         CP    &LBL.CHECKCOUNT,=P'0'
         BNE   &OK
.P0160   AIF   ('&NOTOK' EQ '').P0170
         CP    &LBL.CHECKCOUNT,=P'0'
         BE    &NOTOK
.P0170   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE
.*
.**********************************************************************
.Z0010   ANOP
         MEXIT
.Z0020   ANOP
         MNOTE 8,'*** TYPE VALUE UNKNOWN, CHECK TYPE KEYWORD ***'
         MEND
         MACRO
&TAG     GDESUBEN
         GBLC  &TAGNAME,&TAGREGS
.**********************************************************************
.*                                                                    *
.*  IF RENT SUPPLIED, THEN USE AS DSECT TO SAVE STORAGE AREA          *
.*                                                                    *
.**********************************************************************
         AIF   ('&TAGREGS' EQ 'NO').B1000
.A1000   ANOP
&TAG     L     R14,&TAGREGS
         LM    R2,R12,&TAGREGS+16
         BR    R14
         SPACE
         DC    C'LTORG START &TAGNAME'
         LTORG
         DC    C'END LTORG &TAGNAME'
         AGO   .Z1000
.**********************************************************************
.*                                                                    *
.*  IF RENT NOT SUPPLIED, THEN USE LOCAL SAVE AREA                    *
.*                                                                    *
.**********************************************************************
.B1000   ANOP
&TAG     L     R14,&TAGNAME+8
         LM    R2,R12,&TAGNAME+24
         BR    R14
         SPACE
         DC    C'LTORG START &TAGNAME'
         LTORG
         DC    C'END LTORG &TAGNAME'
         AGO   .Z1000
.**********************************************************************
.*                                                                    *
.*  GLOBALS ARE SET, CODE IS GENERATED, SO GET OUT OF HERE ALIVE.     *
.*                                                                    *
.**********************************************************************
.Z1000   ANOP
         MEND
         MACRO
&TAG     GDESUBST &RENT=NO
         GBLC  &TAGNAME,&TAGREGS
         LCLC  &SAREA
.**********************************************************************
&TAGNAME SETC  '&TAG'
&TAGREGS SETC  '&TAG'(1,3).'&SYSNDX'
&SAREA   SETC  '&RENT'
.**********************************************************************
.*                                                                    *
.*  IF RENT SUPPLIED, THEN USE AS DSECT TO SAVE STORAGE AREA          *
.*                                                                    *
.**********************************************************************
         AIF   ('&RENT' EQ 'NO').B1000
.A1000   ANOP
&SAREA   DSECT
&TAGREGS DS  15F
&SYSECT  CSECT
         DROP  R12
         CNOP  0,4
&TAGNAME STM   R14,R12,&TAGREGS
         LR    R12,R15
         USING &TAGNAME,R12
         AGO   .Z1000
.**********************************************************************
.*                                                                    *
.*  IF RENT NOT SUPPLIED, THEN USE LOCAL SAVE AREA                    *
.*                                                                    *
.**********************************************************************
.B1000   ANOP
&TAGREGS SETC  'NO'
         DROP  R12
         CNOP  0,4
&TAGNAME STM   R14,R12,8(R15)
         B     68(R15)
         DC    15F'-1'
         LR    R12,R15
         USING &TAGNAME,R12
         AGO   .Z1000
.**********************************************************************
.*                                                                    *
.*  GLOBALS ARE SET, CODE IS GENERATED, SO GET OUT OF HERE ALIVE.     *
.*                                                                    *
.**********************************************************************
.Z1000   ANOP
         MEND
         MACRO
&TAG     GDEGOSUB &ROUTINE,&PARM
         AIF   (T'&PARM EQ 'O').A2000
&TAG     BAL   R1,*+8
         DC    AL4(&PARM)
         L     R15,=A(&ROUTINE)
         BALR  R14,R15
         LTR   R15,R15
         MEXIT
.A2000   ANOP
&TAG     L     R15,=A(&ROUTINE)
         BALR  R14,R15
         LTR   R15,R15
         MEND
         MACRO
&TAG     GDEEXIT
         GBLB  &GDESAVE
         GBLB  &GDERENT
         GBLB  &GDEREGS
         GBLB  &GDEMODE
         GBLC  &GDESANM
.**********************************************************************
.*  ASSIGN DEFAULTS                                                   *
.**********************************************************************
&TAG     DS   0H
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0100 AIF   (&GDEMODE).GDE0400
         AIF   (&GDESAVE).GDE0110
         AGO   .GDE0300
.GDE0110 AIF   (&GDERENT).GDE0200
         LR    R1,R13
         L     R13,4(R1)
         XC    8(4,R13),8(R13)
         XC    4(4,R1),4(R1)
         L     R14,12(R13)
         LM    R2,R12,28(R13)
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0200 ANOP
         LR    R1,R13
         L     R13,4(R1)
         XC    8(4,R13),8(R13)
         XC    4(4,R1),4(R1)
         STORAGE RELEASE,ADDR=(1),LENGTH=72
         L     R14,12(R13)
         LM    R2,R12,28(R13)
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  RETURN R14                                                        *
.**********************************************************************
.GDE0300 ANOP
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0400 AIF   (&GDESAVE).GDE0410
         AGO   .GDE0600
.GDE0410 AIF   (&GDERENT).GDE0500
         PR
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0500 ANOP
         LAE   R1,0(R13)
         STORAGE RELEASE,ADDR=(1),LENGTH=72
         PR
         AGO   .GDE0900
.**********************************************************************
.*  RETURN PR                                                         *
.**********************************************************************
.GDE0600 ANOP
         PR
.GDE0900 ANOP
         LTORG
         MEND
         MACRO
&TAG     GDESTART &BR0,&BR1,&BR2,&BR3,&BR4,&BR5,&BR6,                  C
               &SAVEAREA=NO,&RENT=NO,&ARMODE=NO
         GBLB  &GDESAVE
         GBLB  &GDEMODE
         GBLB  &GDERENT
         GBLB  &GDEREGS
         GBLC  &GDESANM
         LCLC  &TAGNAME,&C
         LCLC  &DBR0,&DBR1,&DBR2,&DBR3,&DBR4,&DBR5,&DBR6
.**********************************************************************
.*  ASSIGN DEFAULTS                                                   *
.**********************************************************************
&GDESANM SETC  '$GDE'.'&SYSNDX'        POSSIBLE SAVE AREA NAME
&C       SETC  ','                     COMMA FOR USING
&TAGNAME SETC  'GDENONAME'             POSSIBLE DEFAULT PGM NAME
         AIF   ('&TAG' EQ '').GDE0010
&TAGNAME SETC  '&TAG'
.GDE0010 ANOP
&DBR0    SETC  '&BR0'
&DBR1    SETC  '&BR1'
&DBR2    SETC  '&BR2'
&DBR3    SETC  '&BR3'
&DBR4    SETC  '&BR4'
&DBR5    SETC  '&BR5'
&DBR6    SETC  '&BR6'
         AIF   ('&DBR0' NE '').GDE0020
&DBR0    SETC  'R12'                   DEFAULT BASE REG
.GDE0020 ANOP
&GDESAVE SETB  1
         AIF   (T'&SAVEAREA NE 'O').GDE0030
&GDESAVE SETB  0
.GDE0030 ANOP
&GDERENT SETB  0
         AIF   ('&RENT' EQ 'NO').GDE0040
         AIF   ('&RENT' NE 'YES').GDE0035
&GDERENT SETB  1
         AGO   .GDE0040
.GDE0035 MNOTE 8,'INVALID RENT, MUST BE YES OR NO'
.GDE0040 ANOP
         AIF   ('&ARMODE' EQ 'NO').GDE0050
         AIF   ('&ARMODE' NE 'YES').GDE0045
&GDEMODE SETB  1
         AGO   .GDE0050
.GDE0045 MNOTE 8,'INVALID ARMODE, MUST BE YES OR NO'
.GDE0050 ANOP
.**********************************************************************
.*  GENERATE CSECT ENTRY CODE AND ID LITERALS                         *
.**********************************************************************
&TAGNAME CSECT
         B     48(15)
         PUSH  PRINT
         PRINT ON,GEN
         DC    FL1'44'
         DC    CL9'&TAGNAME'
         DC    CL9'&SYSDATE'
         DC    CL5'&SYSTIME'
         DC    CL20'COPYRIGHT GDE, INC.'
.**********************************************************************
.*  GENERATE REGISTER ASSIGNMENTS                                     *
.**********************************************************************
         AIF   (&GDEREGS).GDE0060
&GDEREGS SETB   1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
AR0      EQU   0
AR1      EQU   1
AR2      EQU   2
AR3      EQU   3
AR4      EQU   4
AR5      EQU   5
AR6      EQU   6
AR7      EQU   7
AR8      EQU   8
AR9      EQU   9
AR10     EQU   10
AR11     EQU   11
AR12     EQU   12
AR13     EQU   13
AR14     EQU   14
AR15     EQU   15
.GDE0060 ANOP
         POP   PRINT
.**********************************************************************
.*  SAVE INCOMING REGISTERS                                           *
.**********************************************************************
         AIF   (&GDEMODE).GDE0400
         STM   14,12,12(13)
.**********************************************************************
.*  GENERATE BASE REGISTER ASSIGNMENTS                                *
.**********************************************************************
.GDE0100 ANOP
         AIF   ('&DBR1' NE '').GDE0110
         AIF   ('&DBR0' EQ 'R15').GDE0101
         LR    &DBR0,R15
.GDE0101 ANOP
         USING &TAGNAME&C&DBR0
         AGO   .GDE0200
.GDE0110 AIF   ('&DBR2' NE '').GDE0120
         AIF   ('&DBR0' EQ 'R15').GDE0111
         LR    &DBR0,R15
.GDE0111 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         USING &TAGNAME&C&DBR0&C&DBR1
         AGO   .GDE0200
.GDE0120 AIF   ('&DBR3' NE '').GDE0130
         AIF   ('&DBR0' EQ 'R15').GDE0121
         LR    &DBR0,R15
.GDE0121 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2
         AGO   .GDE0200
.GDE0130 AIF   ('&DBR4' NE '').GDE0140
         AIF   ('&DBR0' EQ 'R15').GDE0131
         LR    &DBR0,R15
.GDE0131 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3
.GDE0140 AIF   ('&DBR5' NE '').GDE0150
         AIF   ('&DBR0' EQ 'R15').GDE0141
         LR    &DBR0,R15
.GDE0141 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4
         AGO   .GDE0200
.GDE0150 AIF   ('&DBR6' NE '').GDE0160
         AIF   ('&DBR0' EQ 'R15').GDE0151
         LR    &DBR0,R15
.GDE0151 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         LA    &DBR5,2048(&DBR4)
         LA    &DBR5,2048(&DBR5)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5
         AGO   .GDE0200
.GDE0160 ANOP
         AIF   ('&DBR0' EQ 'R15').GDE0161
         LR    &DBR0,R15
.GDE0161 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         LA    &DBR5,2048(&DBR4)
         LA    &DBR5,2048(&DBR5)
         LA    &DBR6,2048(&DBR5)
         LA    &DBR6,2048(&DBR6)
        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0200 ANOP
         AIF   (&GDESAVE).GDE0210
         AGO   .GDE0900
.GDE0210 AIF   (&GDERENT).GDE0300
         B     &GDESANM+72
&GDESANM DC    3F'0',15F'-1'
         LA    R1,&GDESANM
         ST    R1,8(R13)
         ST    R13,4(R1)
         L     R1,24(R13)
         L     R13,8(R13)
         XC    0(4,R13),0(R13)
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0300 ANOP
         STORAGE OBTAIN,LENGTH=72
         ST    R1,8(R13)
         ST    R13,4(R1)
         LM    R0,R1,20(R13)
         L     R13,8(R13)
         XC    0(4,R13),0(R13)
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE BASE REGISTER ASSIGNMENTS                                *
.**********************************************************************
.GDE0400 ANOP
         BAKR  14,0
         SAC   512
         SYSSTATE ASCENV=AR
         AIF   ('&DBR1' NE '').GDE0410
         AIF   ('&DBR0' EQ 'R15').GDE0401
         LAE   &DBR0,0(R15,0)
.GDE0401 ANOP
         USING &TAGNAME&C&DBR0
         AGO   .GDE0500
.GDE0410 AIF   ('&DBR2' NE '').GDE0420
         AIF   ('&DBR0' EQ 'R15').GDE0411
         LAE   &DBR0,0(R15,0)
.GDE0411 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         USING &TAGNAME&C&DBR0&C&DBR1
         AGO   .GDE0500
.GDE0420 AIF   ('&DBR3' NE '').GDE0430
         AIF   ('&DBR0' EQ 'R15').GDE0421
         LAE   &DBR0,0(R15,0)
.GDE0421 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2
         AGO   .GDE0500
.GDE0430 AIF   ('&DBR4' NE '').GDE0440
         AIF   ('&DBR0' EQ 'R15').GDE0431
         LAE   &DBR0,0(R15,0)
.GDE0431 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3
.GDE0440 AIF   ('&DBR5' NE '').GDE0450
         AIF   ('&DBR0' EQ 'R15').GDE0441
         LAE   &DBR0,0(R15,0)
.GDE0441 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4
         AGO   .GDE0500
.GDE0450 AIF   ('&DBR6' NE '').GDE0460
         AIF   ('&DBR0' EQ 'R15').GDE0451
         LAE   &DBR0,0(R15,0)
.GDE0451 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         LAE   &DBR5,2048(&DBR4)
         LAE   &DBR5,2048(&DBR5)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5
         AGO   .GDE0500
.GDE0460 ANOP
         AIF   ('&DBR0' EQ 'R15').GDE0461
         LAE   &DBR0,0(R15,0)
.GDE0461 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         LAE   &DBR5,2048(&DBR4)
         LAE   &DBR5,2048(&DBR5)
         LAE   &DBR6,2048(&DBR5)
         LAE   &DBR6,2048(&DBR6)
        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0500 ANOP
         AIF   (&GDESAVE).GDE0510
         AGO   .GDE0900
.GDE0510 AIF   (&GDERENT).GDE0600
         B     &GDESANM+72
&GDESANM DC    3F'0',15F'-1'
         LAE   R13,&GDESANM
         MVC   4(4,R13),=C'F1SA'
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0600 ANOP
         STORAGE OBTAIN,LENGTH=72
         LAE   R13,0(R1)
         MVC   4(4,R13),=C'F1SA'
.GDE0900 ANOP
         MEND
         MACRO
&LABEL   GDETABLE &DATA,&TYPE=INSERT,                                  X
               &OK=,                                                   X
               &NOTOK=,                                                X
               &NOCORE=,                                               X
               &NAME=TABLEA,                                           X
               &KEYLNG=,                                               X
               &KEYOFF=,                                               X
               &TABLNG=,                                               X
               &TRACE=NO,                                              X
               &PROGRAM=GDE000,                                        X
               &PROGRAMID=CA,                                          X
               &STATID=01,                                             X
               &TRACEID=02,                                            X
               &TRACEMAXCNT=50,                                        X
               &PARMLIST=
.**********************************************************************
.*
.*
.*
.*
.**********************************************************************
         GBLB  &GDETABLE
         GBLC  &GDETABLEDSECTDEFINED(32)
         GBLC  &GDETABLECSECTDEFINED(32)
         GBLC  &GDETABLEPROGRAM(32)
         GBLC  &GDETABLEPROGRAMID(32)
         GBLC  &GDETABLESTATID(32)
         GBLC  &GDETABLETRACEID(32)
         GBLC  &GKEYLNG(256),&GKEYOFF(256)
         GBLC  &LBL
         GBLC  &ROUTCA
         LCLA  &CNTA,&CNTB
         LCLA  &CNT,&LCNT,&GETCNT
         LCLB  &ERROR,&N1,&N2
         LCLC  &ROUT01,&ROUT01ID
         LCLC  &ROUT02,&ROUT02ID
         LCLC  &PROGNAME
         LCLC  &LABEL1,&LABEL2
&CNTA    SETA  1
.AA010   ANOP
         AIF   ('&GDETABLECSECTDEFINED(&CNTA)' EQ '').AA020
         AIF   ('&GDETABLECSECTDEFINED(&CNTA)' EQ '&NAME').AA030
&CNTA    SETA  &CNTA+1
         AIF   (&CNTA LE 32).AA010
         MNOTE 8,'MORE THAN 32 TABLES DEFINED - LIMIT REACHED'
         AGO   .Z0010
.AA020   ANOP
&GDETABLECSECTDEFINED(&CNTA) SETC '&NAME'
&GDETABLEPROGRAM(&CNTA)     SETC  '&PROGRAM'
&GDETABLEPROGRAMID(&CNTA)   SETC  '&PROGRAMID'
&GDETABLESTATID(&CNTA)      SETC  '&STATID'
&GDETABLETRACEID(&CNTA)     SETC  '&TRACEID'
.AA030   ANOP
&PROGNAME SETC  '&GDETABLEPROGRAM(&CNTA)'(1,6)
&ROUTCA   SETC  '&PROGNAME'.'&GDETABLEPROGRAMID(&CNTA)'(1,2)
&ROUT01   SETC  '&PROGNAME'.'&GDETABLESTATID(&CNTA)'(1,2)
&ROUT01ID SETC  '&PROGNAME'.'.R'.'&GDETABLESTATID(&CNTA)'(1,2)
&ROUT02   SETC  '&PROGNAME'.'&GDETABLETRACEID(&CNTA)'(1,2)
&ROUT02ID SETC  '&PROGNAME'.'.R'.'&GDETABLETRACEID(&CNTA)'(1,2)
&LBL     SETC  'GDETABLE_'.'&NAME'(1,6).'_'
.**********************************************************************
.*
.* THIS MACRO IS USED TO GENERATE BINARY BALANCED TREES
.* INTERFACE BY USING THE TYPE KEYWORK
.*
.* TYPE=INSERT      = INSERTS RECORD INTO THE TREE
.*     RETURN CODES - 0 ALL OK
.*                    1 RECORD FOUND
.*                    4 INVALID PARMS
.*                    5 GETMAIN ERROR
.*
.* TYPE=REPLACE     = USING THE KEY, REPLACE THE RECORD IN THE TABLE
.*     RETURN CODES - 0 ALL OK
.*                    2 KEY NOT FOUND
.*                    4 INVALID PARMS
.*
.* TYPE=FIND        = FIND THE RECORD IN THE TABLE WITH A KEY
.*     RETURN CODES - 0 ALL OK
.*                    2 NOT FOUND
.*                    4 PARM INVALID
.*
.* TYPE=FIRST       = RETURN THE FIRST NODE IN THE TREE
.*     RETURN CODES - 0 ALL OK
.*                    3 END OF TREE
.*                    4 INVALID PARMS
.*
.* TYPE=NEXT        = USING THE CURRENT KEY, FIND THE NEXT LARGEST RECD
.*     RETURN CODES - 0 ALL OK
.*                    3 END OF TREE
.*                    4 INVALID PARMS
.*
.* TYPE=DELETE      = DELETE THE CURRENT TABLE AND FREE STORAGE
.*     RETURN CODES - 0 ALL OK
.*                    4 INVALID PARMS
.*
.* TYPE=REPORT      = PRINT THE STATISTICS FROM THE FILE OPERATION
.*     RETURN CODES - 0 ALL OK
.*                    4 LOGIC ERROR
.*
.* TYPE=IOROUTINE BUILDS ALL THE SUBROUTINE CODE TO SUPPORT THE
.*            REQUESTS
.*
.* TYPE=PARMLIST DECLARES STORAGE TO BE USED BY PARMLIST
.*
.* TYPE=DSECT DECLARES DSECT TO MAP THE STORAGE SET ASIDE BY
.*            PARMLIST
.*
.* THE PARAMATER LIST MADE AVAILABLE TO THE PROGRAM CALLING THIS
.*    ROUTINE IS DEFINED AS FOLLOWS
.*
.* PARAMETER LIST
.*
.*     GDETABLE_DSECT        DS 0C       TABLE PARMLIST
.*     GDETABLE_COMMAND      DS  CL1     CURRENT COMMAND
.*        1 - TYPE=INSERT
.*        2 - TYPE=REPLACE
.*        3 - TYPE=FIND
.*        4 - TYPE=FIRST
.*        5 - TYPE=NEXT
.*        6 - TYPE=DELETE
.*        7 - TYPE=REPORT
.*     GDETABLE_RETCODE      DS  CL1     RETURN CODE
.*                           DS  CL2     RESERVED
.*     GDETABLE_USERDATAAREA DS CL4   PARAMETER CONTAINING PGM STG
.*
.**********************************************************************
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE
.*
.*     TYPE=PARMLIST
.*
.A0010   AIF   ('&TYPE' NE 'PARMLIST').B0010
         AIF   ('&PARMLIST' EQ '').A0020
&PARMLIST DS  0D       PROGRAMS WORKAREA
         DS    CL(&LBL.DSECT_LENGTH)
         AGO   .Z0010
.A0020   ANOP
&LBL.DATAAREA DS  0D    PROGRAMS WORKAREA
         DS    CL(&LBL.DSECT_LENGTH)
         ORG   *-&LBL.DSECT_LENGTH+&LBL.TRACEMAXCNT-&LBL.DSECT
         DC    PL4'&TRACEMAXCNT'
         ORG
         AGO   .Z0010
.*
.*     TYPE=DSECT
.*
.B0010   AIF   ('&TYPE' NE 'DSECT').C0010
&CNTA    SETA  1
.B0020   ANOP
         AIF   ('&GDETABLEDSECTDEFINED(&CNTA)' EQ '').B0030
         AIF   ('&GDETABLEDSECTDEFINED(&CNTA)' EQ '&NAME').Z0010
&CNTA    SETA  &CNTA+1
         AIF   (&CNTA LE 32).B0020
         MNOTE 8,'MORE THAN 32 TABLES DEFINED - LIMIT REACHED'
         AGO   .B0020
.B0030   ANOP
&GDETABLEDSECTDEFINED(&CNTA) SETC '&NAME'
&LBL.DSECT          DSECT        CSI PARMLIST DSECT
&LBL.COMMAND        DS   CL1     CURRENT COMMAND
&LBL.RETCODE        DS   CL1     RETURN CODE
&LBL.TRACE          DS   CL1     TRACE SWITCH
                    DS   XL1     RESERVED
&LBL.TRACEMAXCNT    DS   CL4     MAXIMUM TRACE COUNT
&LBL.USERDATAAREA   DS   CL4     ADDRESS OF TABLE RECORD
&LBL.DSECT_LENGTH   EQU  *-&LBL.DSECT
         AGO   .Z0010
.*
.*     TYPE=INSERT
.*
.C0010   AIF   ('&TYPE' NE 'INSERT').D0010
         AIF   ('&PARMLIST' EQ '').C0020
&LABEL   LA    R1,&PARMLIST
         AGO   .C0030
.C0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.C0030   ANOP
         USING &LBL.DSECT,R1
         MVI   &LBL.COMMAND,C'1'
         MVI   &LBL.RETCODE,C'0'
         AIF   ('&TRACE' EQ 'YES').C0040
         AIF   ('&TRACE' EQ 'ERROR').C0041
         AIF   ('&TRACE' EQ 'NO').C0042
         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'
         AGO   .C0042
.C0040   ANOP
         MVI   &LBL.TRACE,C'1'
         AGO   .C0043
.C0041   ANOP
         MVI   &LBL.TRACE,C'2'
         AGO   .C0043
.C0042   ANOP
         MVI   &LBL.TRACE,C'0'
         AGO   .C0043
.C0043   ANOP
         AIF   ('&DATA'(1,1) EQ '(').C0031
         LA    R14,&DATA
         ST    R14,&LBL.USERDATAAREA
         AGO   .C0032
.C0031   ST    &DATA,&LBL.USERDATAAREA
         AGO   .C0032
.C0032   ANOP
         CALL  &ROUTCA,((1)),VL
         AIF   ('&PARMLIST' EQ '').C0033
         LA    R1,&PARMLIST
         AGO   .C0034
.C0033   ANOP
         LA    R1,&LBL.DATAAREA
.C0034   ANOP
         AIF   ('&OK' EQ '').C0035
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.C0035   AIF   ('&NOTOK' EQ '').C0036
         CLI   &LBL.RETCODE,C'1'
         BE    &NOTOK
.C0036   AIF   ('&NOCORE' EQ '').C0037
         CLI   &LBL.RETCODE,C'5'
         BE    &NOCORE
.C0037   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     TYPE=REPLACE
.*
.D0010   AIF   ('&TYPE' NE 'REPLACE').E0010
         AIF   ('&PARMLIST' EQ '').D0020
&LABEL   LA    R1,&PARMLIST
         AGO   .D0030
.D0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.D0030   ANOP
         USING &LBL.DSECT,R1
         MVI   &LBL.COMMAND,C'2'
         MVI   &LBL.RETCODE,C'0'
         AIF   ('&TRACE' EQ 'YES').D0040
         AIF   ('&TRACE' EQ 'ERROR').D0041
         AIF   ('&TRACE' EQ 'NO').D0042
         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'
         AGO   .D0042
.D0040   ANOP
         MVI   &LBL.TRACE,C'1'
         AGO   .D0043
.D0041   ANOP
         MVI   &LBL.TRACE,C'2'
         AGO   .D0043
.D0042   ANOP
         MVI   &LBL.TRACE,C'0'
         AGO   .D0043
.D0043   ANOP
         AIF   ('&DATA'(1,1) EQ '(').D0031
         LA    R14,&DATA
         ST    R14,&LBL.USERDATAAREA
         AGO   .D0032
.D0031   ST    &DATA,&LBL.USERDATAAREA
         AGO   .D0032
.D0032   ANOP
         CALL  &ROUTCA,((1)),VL
         AIF   ('&PARMLIST' EQ '').D0033
         LA    R1,&PARMLIST
         AGO   .D0034
.D0033   ANOP
         LA    R1,&LBL.DATAAREA
.D0034   ANOP
         AIF   ('&OK' EQ '').D0035
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.D0035   AIF   ('&NOTOK' EQ '').D0036
         CLI   &LBL.RETCODE,C'2'
         BE    &NOTOK
.D0036   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     TYPE=FIND
.*
.E0010   AIF   ('&TYPE' NE 'FIND').F0010
         AIF   ('&PARMLIST' EQ '').E0020
&LABEL   LA    R1,&PARMLIST
         AGO   .E0030
.E0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.E0030   ANOP
         USING &LBL.DSECT,R1
         MVI   &LBL.COMMAND,C'3'
         MVI   &LBL.RETCODE,C'0'
         AIF   ('&TRACE' EQ 'YES').E0040
         AIF   ('&TRACE' EQ 'ERROR').E0041
         AIF   ('&TRACE' EQ 'NO').E0042
         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'
         AGO   .E0042
.E0040   ANOP
         MVI   &LBL.TRACE,C'1'
         AGO   .E0043
.E0041   ANOP
         MVI   &LBL.TRACE,C'2'
         AGO   .E0043
.E0042   ANOP
         MVI   &LBL.TRACE,C'0'
         AGO   .E0043
.E0043   ANOP
         AIF   ('&DATA'(1,1) EQ '(').E0031
         LA    R14,&DATA
         ST    R14,&LBL.USERDATAAREA
         AGO   .E0032
.E0031   ST    &DATA,&LBL.USERDATAAREA
         AGO   .E0032
.E0032   ANOP
         CALL  &ROUTCA,((1)),VL
         AIF   ('&PARMLIST' EQ '').E0033
         LA    R1,&PARMLIST
         AGO   .E0034
.E0033   ANOP
         LA    R1,&LBL.DATAAREA
.E0034   ANOP
         AIF   ('&OK' EQ '').E0035
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.E0035   AIF   ('&NOTOK' EQ '').E0036
         CLI   &LBL.RETCODE,C'2'
         BE    &NOTOK
.E0036   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     TYPE=FIRST
.*
.F0010   AIF   ('&TYPE' NE 'FIRST').G0010
         AIF   ('&PARMLIST' EQ '').F0020
&LABEL   LA    R1,&PARMLIST
         AGO   .F0030
.F0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.F0030   ANOP
         USING &LBL.DSECT,R1
         MVI   &LBL.COMMAND,C'4'
         MVI   &LBL.RETCODE,C'0'
         AIF   ('&TRACE' EQ 'YES').F0040
         AIF   ('&TRACE' EQ 'ERROR').F0041
         AIF   ('&TRACE' EQ 'NO').F0042
         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'
         AGO   .F0042
.F0040   ANOP
         MVI   &LBL.TRACE,C'1'
         AGO   .F0043
.F0041   ANOP
         MVI   &LBL.TRACE,C'2'
         AGO   .F0043
.F0042   ANOP
         MVI   &LBL.TRACE,C'0'
         AGO   .F0043
.F0043   ANOP
         AIF   ('&DATA'(1,1) EQ '(').F0031
         LA    R14,&DATA
         ST    R14,&LBL.USERDATAAREA
         AGO   .F0032
.F0031   ST    &DATA,&LBL.USERDATAAREA
         AGO   .F0032
.F0032   ANOP
         CALL  &ROUTCA,((1)),VL
         AIF   ('&PARMLIST' EQ '').F0033
         LA    R1,&PARMLIST
         AGO   .F0034
.F0033   ANOP
         LA    R1,&LBL.DATAAREA
.F0034   ANOP
         AIF   ('&OK' EQ '').F0035
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.F0035   AIF   ('&NOTOK' EQ '').F0036
         CLI   &LBL.RETCODE,C'3'
         BE    &NOTOK
.F0036   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     TYPE=NEXT
.*
.G0010   AIF   ('&TYPE' NE 'NEXT').H0010
         AIF   ('&PARMLIST' EQ '').G0020
&LABEL   LA    R1,&PARMLIST
         AGO   .G0030
.G0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.G0030   ANOP
         USING &LBL.DSECT,R1
         MVI   &LBL.COMMAND,C'5'
         MVI   &LBL.RETCODE,C'0'
         AIF   ('&TRACE' EQ 'YES').G0040
         AIF   ('&TRACE' EQ 'ERROR').G0041
         AIF   ('&TRACE' EQ 'NO').G0042
         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'
         AGO   .G0042
.G0040   ANOP
         MVI   &LBL.TRACE,C'1'
         AGO   .G0043
.G0041   ANOP
         MVI   &LBL.TRACE,C'2'
         AGO   .G0043
.G0042   ANOP
         MVI   &LBL.TRACE,C'0'
         AGO   .G0043
.G0043   ANOP
         AIF   ('&DATA'(1,1) EQ '(').G0031
         LA    R14,&DATA
         ST    R14,&LBL.USERDATAAREA
         AGO   .G0032
.G0031   ST    &DATA,&LBL.USERDATAAREA
         AGO   .G0032
.G0032   ANOP
         CALL  &ROUTCA,((1)),VL
         AIF   ('&PARMLIST' EQ '').G0033
         LA    R1,&PARMLIST
         AGO   .G0034
.G0033   ANOP
         LA    R1,&LBL.DATAAREA
.G0034   ANOP
         AIF   ('&OK' EQ '').G0035
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.G0035   AIF   ('&NOTOK' EQ '').G0036
         CLI   &LBL.RETCODE,C'3'
         BE    &NOTOK
.G0036   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     TYPE=DELETE
.*
.H0010   AIF   ('&TYPE' NE 'DELETE').I0010
         AIF   ('&PARMLIST' EQ '').H0020
&LABEL   LA    R1,&PARMLIST
         AGO   .H0030
.H0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.H0030   ANOP
         USING &LBL.DSECT,R1
         MVI   &LBL.COMMAND,C'6'
         MVI   &LBL.RETCODE,C'0'
         AIF   ('&TRACE' EQ 'YES').H0040
         AIF   ('&TRACE' EQ 'ERROR').H0041
         AIF   ('&TRACE' EQ 'NO').H0042
         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'
         AGO   .H0042
.H0040   ANOP
         MVI   &LBL.TRACE,C'1'
         AGO   .H0043
.H0041   ANOP
         MVI   &LBL.TRACE,C'2'
         AGO   .H0043
.H0042   ANOP
         MVI   &LBL.TRACE,C'0'
         AGO   .H0043
.H0043   ANOP
         XC    &LBL.USERDATAAREA,&LBL.USERDATAAREA
         CALL  &ROUTCA,((1)),VL
         AIF   ('&PARMLIST' EQ '').H0033
         LA    R1,&PARMLIST
         AGO   .H0034
.H0033   ANOP
         LA    R1,&LBL.DATAAREA
.H0034   ANOP
         AIF   ('&OK' EQ '').H0035
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.H0035   AIF   ('&NOTOK' EQ '').H0036
         CLI   &LBL.RETCODE,C'0'
         BNE   &NOTOK
.H0036   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     TYPE=REPORT
.*
.I0010   AIF   ('&TYPE' NE 'REPORT').J0010
         AIF   ('&PARMLIST' EQ '').I0020
&LABEL   LA    R1,&PARMLIST
         AGO   .I0030
.I0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.I0030   ANOP
         USING &LBL.DSECT,R1
         MVI   &LBL.COMMAND,C'7'
         MVI   &LBL.RETCODE,C'0'
         MVI   &LBL.TRACE,C'0'
         XC    &LBL.USERDATAAREA,&LBL.USERDATAAREA
         CALL  &ROUTCA,((1)),VL
         AIF   ('&PARMLIST' EQ '').I0033
         LA    R1,&PARMLIST
         AGO   .I0034
.I0033   ANOP
         LA    R1,&LBL.DATAAREA
.I0034   ANOP
         AIF   ('&OK' EQ '').I0035
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.I0035   AIF   ('&NOTOK' EQ '').I0036
         CLI   &LBL.RETCODE,C'0'
         BNE   &NOTOK
.I0036   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE
.*
.**********************************************************************
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR SUPPORT ROUTINES
.*
.*     TYPE=IOROUTINE
.*
.J0010   AIF   ('&TYPE' NE 'IOROUTINE').Z0020
.**********************************************************************
.*
.* EDIT OF PARMS
.*
&GETCNT  SETA  ((4096-8)/(&TABLNG+9))
         AIF   (&TABLNG NE 0).J0020
&ERROR   SETB  1
         MNOTE *,'LENGTH OF TABLE ELEMENT MUST BE SPECIFIED'
.J0020   ANOP
&CNT     SETA  1                   SET LOOP START COUNT
.J0025   ANOP
         AIF   (&N1 OR &N2).J0045
         AIF   ('&KEYLNG(&CNT)' NE '').J0030
&N1      SETB  1
.J0030   AIF   ('&KEYOFF(&CNT)' NE '').J0040
&N2      SETB  1
.J0040   ANOP
&CNT     SETA  &CNT+1
         AGO   .J0025
.J0045   ANOP
         AIF   (&N1 AND &N2).J0050
         MNOTE *,'NUMBER OF KEYS MUST BE THE SAME IN ALL ARRAYS'
&ERROR   SETB  1
.J0050   ANOP
         AIF   ('&KEYLNG(1)' NE '').J0060
         MNOTE *,'AT LEAST ONE KEY MUST BE SPECIFIEC'
&ERROR   SETB  1
.J0060   AIF   (NOT &ERROR).J0070
         MNOTE 8,'ERRORS FOUND-GDE TABLE EXPANSION CANCELED'
         MEXIT
.*
.* END OF EDIT OF PARMS
.*
.**********************************************************************
.*
.* SET UP GLOBAL PARMS
.*
.J0070   ANOP
&CNT     SETA  1
.J0080   ANOP
         AIF   ('&KEYLNG(&CNT)' EQ '').J0090
&GKEYLNG(&CNT) SETC '&KEYLNG(&CNT)'
&GKEYOFF(&CNT) SETC '&KEYOFF(&CNT)'
&CNT     SETA  &CNT+1
         AGO   .J0080
.J0090   ANOP
.*
.* END OF SET UP GLOBAL PARMS
.*
.**********************************************************************
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*                                                                     *
* GDETABLE DOES TABLE WORK FOR THE USER                               *
*                                                                     *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         GDETABLE TYPE=DSECT,NAME=&NAME
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&ROUTCA  GDESTART R12
         L     R10,0(1)
         USING &LBL.DSECT,R10
         LA    R2,&LBL.COMMAND
         LA    R3,&LBL.RETCODE
         L     R4,&LBL.USERDATAAREA
         LA    R11,&LBL.GDEDSECT
         USING &LBL.GDEDSECT,R11
         CLI   &LBL.GDEINITSTATUS,C'C'
         BE    &LBL.MAIN0000
         GDEGOSUB &LBL.GDE00000
&LBL.MAIN0000 CLI &LBL.TRACE,C'1'
         BNE   &LBL.MAIN0009
         GDEGOSUB &LBL.GDE08000,&LBL.GDEMAINBEFORE
&LBL.MAIN0009 CLI &LBL.COMMAND,C'1'
         BNE   &LBL.MAIN0010
         GDEGOSUB &LBL.GDE01000
         B     &LBL.MAIN0080
&LBL.MAIN0010 CLI &LBL.COMMAND,C'2'
         BNE   &LBL.MAIN0020
         GDEGOSUB &LBL.GDE02000
         B     &LBL.MAIN0080
&LBL.MAIN0020 CLI &LBL.COMMAND,C'3'
         BNE   &LBL.MAIN0030
         GDEGOSUB &LBL.GDE03000
         B     &LBL.MAIN0080
&LBL.MAIN0030 CLI &LBL.COMMAND,C'4'
         BNE   &LBL.MAIN0040
         GDEGOSUB &LBL.GDE04000
         B     &LBL.MAIN0080
&LBL.MAIN0040 CLI &LBL.COMMAND,C'5'
         BNE   &LBL.MAIN0050
         GDEGOSUB &LBL.GDE05000
         B     &LBL.MAIN0080
&LBL.MAIN0050 CLI &LBL.COMMAND,C'6'
         BNE   &LBL.MAIN0060
         GDEGOSUB &LBL.GDE06000
         B     &LBL.MAIN0080
&LBL.MAIN0060 CLI &LBL.COMMAND,C'7'
         BNE   &LBL.MAIN0070
         GDEGOSUB &LBL.GDE07000
         B     &LBL.MAIN0080
&LBL.MAIN0070 MVI &LBL.RETCODE,C'4'
         B     &LBL.MAIN0080
&LBL.MAIN0080 CLI &LBL.TRACE,C'1'
         BL    &LBL.MAIN0900
         BE    &LBL.MAIN0090
         CLI  &LBL.RETCODE,C'0'
         BE    &LBL.MAIN0900
&LBL.MAIN0090  EQU *
         GDEGOSUB &LBL.GDE08000,&LBL.GDEMAINAFTER
         B     &LBL.MAIN0900
&LBL.MAIN0900 GDEEXIT
&LBL.GDEDSECT         DS     0D
&LBL.GDETRACESTART    DS     0D
&LBL.GDEROOT          DC     F'0'       ROOT NODE ADDRESS
&LBL.GDESIZE          DC     F'&TABLNG' NODE SIZE WITHOUT POINTERS
&LBL.GDELINK          DC     F'0'       POINTERS TO TABLES GETMAINS
&LBL.GDEUSED          DC     F'0'       AMOUNT OF LAST GETMAIN USED
&LBL.GDEPNTR          DC     F'0'       POINTER INTO GETMAIN OF AV NODE
&LBL.PTRA             DS    F
&LBL.PTRB             DS    F
&LBL.PTRC             DS    F
&LBL.PTRF             DS    F
&LBL.PTRP             DS    F
&LBL.PTRQ             DS    F
&LBL.PTRT             DS    F
&LBL.PTRX             DS    F
&LBL.PTRY             DS    F
&LBL.PTRNEW           DS    F
&LBL.CURMAX           DC    H'&GETCNT'
&LBL.NULL             DC    F'0'
&LBL.TEST             DC    X'FF'
&LBL.P1               DC    X'01'
&LBL.M1               DC    X'FF'
&LBL.D                DS    XL1
&LBL.GDEINSERTCNT     DS    PL6 COUNT OF INSERTS
&LBL.GDEINSERTCNTERR  DS    PL6 COUNT OF INSERTS
&LBL.GDENOCORECNTERR  DS    PL6 COUNT OF INSERTS
&LBL.GDEREPLACECNT    DS    PL6 COUNT OF REPLACES
&LBL.GDEREPLACECNTERR DS    PL6  COUNT OF REPLACES
&LBL.GDEFINDCNT       DS    PL6 COUNT OF FINDS
&LBL.GDEFINDCNTERR    DS    PL6 COUNT OF FINDS
&LBL.GDEFIRSTCNT      DS    PL6 COUNT OF FIRSTS
&LBL.GDEFIRSTCNTERR   DS    PL6 COUNT OF FIRSTS
&LBL.GDENEXTCNT       DS    PL6 COUNT OF NEXTS
&LBL.GDENEXTCNTERR    DS    PL6 COUNT OF NEXTS
&LBL.GDEDELETECNT     DS    PL6 COUNT OF DELETES
&LBL.GDEDELETECNTERR  DS    PL6 COUNT OF DELETES
&LBL.GDETRACEEND      DS     0D
&LBL.GDEINITSTATUS    DC    C'I'    I=INIT, O=OPEN, C=CLOSED
&LBL.GDEMAINBEFORE    DC    C'B'
&LBL.GDEMAINAFTER     DC    C'A'
&LBL.GDECAP1ROUT      DC    F'-1'
&LBL.GDECAP1          DS   0F
&LBL.GDECAP1FUNC      DC    CL1' '
&LBL.GDECAP1HEX       DC    CL1' '
&LBL.GDECAP1DDN       DC    CL8' '
&LBL.GDECAP1LEN       DC    CL2' '
&LBL.GDECAP1LNBK      DC    CL2' '
&LBL.GDECAP1ID        DC    CL10' '
&LBL.GDECAP1LPP       DC    CL2' '
&LBL.GDECAP1NP        DC    CL1' '
&LBL.GDECAP1DNP       DC    CL1' '
&LBL.GDECAP1RNP       DC    CL1' '
&LBL.GDECAP1RTCD      DC    CL2' '
&LBL.GDECAP2          DC    CL133' '
&LBL.GDECAH1          DC    CL133' '
&LBL.GDECBP1ROUT      DC    F'-1'
&LBL.GDECBP1          DS   0F
&LBL.GDECBP1FUNC      DC    CL1' '
&LBL.GDECBP1HEX       DC    CL1' '
&LBL.GDECBP1DDN       DC    CL8' '
&LBL.GDECBP1LEN       DC    CL2' '
&LBL.GDECBP1LNBK      DC    CL2' '
&LBL.GDECBP1ID        DC    CL10' '
&LBL.GDECBP1LPP       DC    CL2' '
&LBL.GDECBP1NP        DC    CL1' '
&LBL.GDECBP1DNP       DC    CL1' '
&LBL.GDECBP1RNP       DC    CL1' '
&LBL.GDECBP1RTCD      DC    CL2' '
&LBL.GDECBP2          DC    CL133' '
&LBL.GDECBH1          DC    CL133' '
         LTORG
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE00000 INITIALIZE THE PARMS                                       *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE00000 GDESUBST
         CLI   &LBL.GDEINITSTATUS,C'I'     STATUS INIT?
         BNE   &LBL.GDE00900               YES: BRANCH
&LBL.GDE00010  EQU  *
         MVI   &LBL.GDEINITSTATUS,C'O'     OPEN FOR BUSINESS
         ZAP   &LBL.GDEINSERTCNT,=P'0' COUNT OF INSERTS
         ZAP   &LBL.GDEINSERTCNTERR,=P'0' COUNT OF INSERTS
         ZAP   &LBL.GDENOCORECNTERR,=P'0' COUNT OF INSERTS
         ZAP   &LBL.GDEREPLACECNT,=P'0' COUNT OF REPLACES
         ZAP   &LBL.GDEREPLACECNTERR,=P'0' COUNT OF REPLACES
         ZAP   &LBL.GDEFINDCNT,=P'0' COUNT OF FINDS
         ZAP   &LBL.GDEFINDCNTERR,=P'0' COUNT OF FINDS
         ZAP   &LBL.GDEFIRSTCNT,=P'0' COUNT OF FIRSTS
         ZAP   &LBL.GDEFIRSTCNTERR,=P'0' COUNT OF FIRSTS
         ZAP   &LBL.GDENEXTCNT,=P'0' COUNT OF NEXTS
         ZAP   &LBL.GDENEXTCNTERR,=P'0' COUNT OF NEXTS
         ZAP   &LBL.GDEDELETECNT,=P'0' COUNT OF DELETES
         ZAP   &LBL.GDEDELETECNTERR,=P'0' COUNT OF DELETES
         LOAD  EP=GDE001CA
         ST    R0,&LBL.GDECAP1ROUT
         B     &LBL.GDE00900
&LBL.GDE00900 XR R15,R15
         B     &LBL.GDE00920
&LBL.GDE00910 LA R15,4
         B     &LBL.GDE00920
&LBL.GDE00920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE01000 INSERT                                                     *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE01000 GDESUBST
         CLC   &LBL.GDEROOT,&LBL.NULL
         BNE   &LBL.GDE01200
&LBL.GDE01100 EQU *
         MVC   &LBL.GDELINK,&LBL.NULL
         MVC   &LBL.GDEUSED,&LBL.NULL
         GDEGOSUB &LBL.GDE0A000        GET NEW NODE
         BNZ   &LBL.GDE01820
         MVC   &LBL.PTRT,&LBL.PTRNEW   GET NEW NODE
         XR    R3,R3
         MVC   &LBL.GDEROOT,&LBL.PTRT
         GDETIDNT &LBL.PTRT
         L     R6,&LBL.USERDATAAREA    MOVE
         L     R7,&LBL.GDESIZE
         LR    R3,R7                     DATA TO NODE
         MVCL  R2,R6
         GDETBLFT &LBL.PTRT            SET
         MVC   0(1,R2),&LBL.NULL         BALANCE FACTOR TO 0
         GDETLCHD &LBL.PTRT            SET
         MVC   0(4,R2),&LBL.NULL         LEFT CHLD TO &LBL.NULL
         GDETRCHD &LBL.PTRT            SET
         MVC   0(4,R2),&LBL.NULL         RIGHT CHLD TO &LBL.NULL
         B     &LBL.GDE01900               AND &LBL.GDE01900
         SPACE
&LBL.GDE01200 MVC &LBL.PTRT,&LBL.GDEROOT SET
         MVC   &LBL.PTRF,&LBL.NULL       UP FOR SEARCH OF TABLE
         MVC   &LBL.PTRA,&LBL.PTRT
         MVC   &LBL.PTRP,&LBL.PTRT
         MVC   &LBL.PTRQ,&LBL.NULL
&LBL.GDE01210 CLC &LBL.PTRP,&LBL.NULL  END OF TABLE?
         BE    &LBL.GDE01300               YES-BRANCH
         GDETBLFT &LBL.PTRP            MAKE
         BZ    &LBL.GDE01220           DO TEST
         MVC   &LBL.PTRA,&LBL.PTRP
         MVC   &LBL.PTRF,&LBL.PTRQ
&LBL.GDE01220 GDETCOMP &LBL.PTRP,&LBL.GDE01250,&LBL.GDE01240,          X
               &LBL.GDE01810,&LBL
&LBL.GDE01240 MVC &LBL.PTRQ,&LBL.PTRP MOVE RIGHT BRANCH
         GDETRCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE01210
&LBL.GDE01250 MVC &LBL.PTRQ,&LBL.PTRP MOVE LEFT BRANCH
         GDETLCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE01210
**********************************************************************
* INSERT THE NODE INTO THE TABLE CAUSE NOT FOUND AND TEST ROTATION.   *
**********************************************************************
&LBL.GDE01300 EQU *
         GDEGOSUB &LBL.GDE0A000        GET NEW NODE
         BNZ   &LBL.GDE01820
         MVC   &LBL.PTRY,&LBL.PTRNEW
         XR    R3,R3
         GDETIDNT &LBL.PTRY
         L     R3,&LBL.GDESIZE
         LR    R7,R3
         L     R6,&LBL.USERDATAAREA    MOVE
         MVCL  R2,R6
         GDETLCHD &LBL.PTRY
         MVC   0(4,R2),&LBL.NULL
         GDETRCHD &LBL.PTRY
         MVC   0(4,R2),&LBL.NULL
         GDETBLFT &LBL.PTRY
         MVC   0(1,R2),&LBL.NULL
   GDETCOMP &LBL.PTRQ,&LBL.GDE01320,&LBL.GDE01310,&LBL.GDE01310,&LBL
&LBL.GDE01310 GDETRCHD &LBL.PTRQ
         MVC   0(4,R2),&LBL.PTRY
         B     &LBL.GDE01330
&LBL.GDE01320 GDETLCHD &LBL.PTRQ
         MVC   0(4,R2),&LBL.PTRY
&LBL.GDE01330 EQU *
   GDETCOMP &LBL.PTRA,&LBL.GDE01350,&LBL.GDE01340,&LBL.GDE01340,&LBL
&LBL.GDE01340 GDETRCHD &LBL.PTRA
         STCM  R3,15,&LBL.PTRP
         MVC   &LBL.PTRB,&LBL.PTRP
         MVC   &LBL.D,&LBL.M1
         B     &LBL.GDE01360
&LBL.GDE01350 GDETLCHD &LBL.PTRA
         STCM  R3,15,&LBL.PTRP
         MVC   &LBL.PTRB,&LBL.PTRP
         MVC   &LBL.D,&LBL.P1
&LBL.GDE01360 CLC &LBL.PTRP,&LBL.PTRY END OF BALANCE ADJUST?
         BE    &LBL.GDE01400             YES-BRANCH
   GDETCOMP &LBL.PTRP,&LBL.GDE01380,&LBL.GDE01370,&LBL.GDE01370,&LBL
&LBL.GDE01370 GDETBLFT &LBL.PTRP
         MVC   0(1,R2),&LBL.M1
         GDETRCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE01360
&LBL.GDE01380 GDETBLFT &LBL.PTRP
         MVC   0(1,R2),&LBL.P1
         GDETLCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE01360
         SPACE
**********************************************************************
* BALANCES THE TABLE AND DOES ROTATION IF NEED BE.                    *
**********************************************************************
&LBL.GDE01400 EQU *
         GDETBLFT &LBL.PTRA
         BNZ   &LBL.GDE01410
         MVC   0(1,R2),&LBL.D
         B     &LBL.GDE01900
&LBL.GDE01410 XR R5,R5
         ICM   R5,1,&LBL.D
         AR    R5,R3
         STCM  R5,1,&LBL.TEST
         ICM   R5,1,&LBL.TEST
         BNZ   &LBL.GDE01420
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01900
&LBL.GDE01420 CLC &LBL.D,&LBL.P1
         BNE   &LBL.GDE01440
         GDETBLFT &LBL.PTRB
         BNH   &LBL.GDE01430
         GDETLCHD &LBL.PTRA
         LR    R5,R2
         GDETRCHD &LBL.PTRB
         STCM  R3,15,0(R5)
         MVC   0(4,R2),&LBL.PTRA
         GDETBLFT &LBL.PTRA
         MVC   0(1,R2),&LBL.NULL
         GDETBLFT &LBL.PTRB
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01500
&LBL.GDE01430 GDETRCHD &LBL.PTRB
         STCM  R3,15,&LBL.PTRC
         LTR   R3,R3
         BNZ   &LBL.GDE01431
         GDETRCHD &LBL.PTRB
         MVC   0(4,R2),&LBL.NULL
         GDETLCHD &LBL.PTRA
         MVC   0(4,R2),&LBL.NULL
         B     &LBL.GDE01432
&LBL.GDE01431 GDETLCHD &LBL.PTRC
         LR    R5,R3
         GDETRCHD &LBL.PTRB
         STCM  R5,15,0(R2)
         GDETRCHD &LBL.PTRC
         LR    R5,R3
         GDETLCHD &LBL.PTRA
         STCM  R5,15,0(R2)
         GDETLCHD &LBL.PTRC
         MVC   0(4,R2),&LBL.PTRB
         GDETRCHD &LBL.PTRC
         MVC   0(4,R2),&LBL.PTRA
&LBL.GDE01432 GDETBLFT &LBL.PTRC
         BL    &LBL.GDE01433
         BH    &LBL.GDE01434
         GDETBLFT &LBL.PTRB
         MVC   0(1,R2),&LBL.NULL
         GDETBLFT &LBL.PTRA
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01435
&LBL.GDE01433 GDETBLFT &LBL.PTRB
         MVC   0(1,R2),&LBL.P1
         GDETBLFT &LBL.PTRA
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01435
&LBL.GDE01434 GDETBLFT &LBL.PTRA
         MVC   0(1,R2),&LBL.M1
         GDETBLFT &LBL.PTRB
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01435
&LBL.GDE01435 GDETBLFT &LBL.PTRC
         MVC   0(1,R2),&LBL.NULL
         MVC   &LBL.PTRB,&LBL.PTRC
         B     &LBL.GDE01500
&LBL.GDE01440 GDETBLFT &LBL.PTRB
         BNL   &LBL.GDE01442
&LBL.GDE01441 GDETRCHD &LBL.PTRA
         LR     R5,R2
         GDETLCHD &LBL.PTRB
         STCM  R3,15,0(R5)
         MVC   0(4,R2),&LBL.PTRA
         GDETBLFT &LBL.PTRA
         MVC   0(1,R2),&LBL.NULL
         GDETBLFT &LBL.PTRB
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01500
&LBL.GDE01442 GDETLCHD &LBL.PTRB
         STCM  R3,15,&LBL.PTRC
         LTR   R3,R3
         BNZ   &LBL.GDE01443
         GDETLCHD &LBL.PTRB
         MVC   0(4,R2),&LBL.NULL
         GDETRCHD &LBL.PTRA
         MVC   0(4,R2),&LBL.NULL
         B     &LBL.GDE01444
&LBL.GDE01443 GDETRCHD &LBL.PTRC
         LR    R5,R3
         GDETLCHD &LBL.PTRB
         STCM  R5,15,0(R2)
         GDETLCHD &LBL.PTRC
         LR    R5,R3
         GDETRCHD &LBL.PTRA
         STCM  R5,15,0(R2)
         GDETRCHD &LBL.PTRC
         MVC   0(4,R2),&LBL.PTRB
         GDETLCHD &LBL.PTRC
         MVC   0(4,R2),&LBL.PTRA
&LBL.GDE01444 GDETBLFT &LBL.PTRC
         BL    &LBL.GDE01445
         BH    &LBL.GDE01446
         GDETBLFT &LBL.PTRB
         MVC   0(1,R2),&LBL.NULL
         GDETBLFT &LBL.PTRA
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01447
&LBL.GDE01445 GDETBLFT &LBL.PTRA
         MVC   0(1,R2),&LBL.P1
         GDETBLFT &LBL.PTRB
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01447
&LBL.GDE01446 GDETBLFT &LBL.PTRB
         MVC   0(1,R2),&LBL.M1
         GDETBLFT &LBL.PTRA
         MVC   0(1,R2),&LBL.NULL
         B     &LBL.GDE01447
&LBL.GDE01447 GDETBLFT &LBL.PTRC
         MVC   0(1,R2),&LBL.NULL
         MVC   &LBL.PTRB,&LBL.PTRC
         B     &LBL.GDE01500
         SPACE
**********************************************************************
* RESETS THE HEAD POINTER FOR THE TABLE IF NEED BE.                   *
**********************************************************************
&LBL.GDE01500 CLC &LBL.PTRF,&LBL.NULL
         BNE   &LBL.GDE01510
         MVC   &LBL.GDEROOT,&LBL.PTRB
         B     &LBL.GDE01900
&LBL.GDE01510 GDETLCHD &LBL.PTRF
         CLC   0(4,R2),&LBL.PTRA
         BNE   &LBL.GDE01520
         MVC   0(4,R2),&LBL.PTRB
         B     &LBL.GDE01900
&LBL.GDE01520 GDETRCHD &LBL.PTRF
         CLC   0(4,R2),&LBL.PTRA
         BNE   &LBL.GDE01900
         MVC   0(4,R2),&LBL.PTRB
         B     &LBL.GDE01900
&LBL.GDE01810 MVI &LBL.RETCODE,C'1'
         AP    &LBL.GDEINSERTCNTERR,=P'1' COUNT OF INSERTS
         B     &LBL.GDE01910
&LBL.GDE01820 MVI &LBL.RETCODE,C'5'
         AP    &LBL.GDENOCORECNTERR,=P'1' COUNT OF INSERTS
         B     &LBL.GDE01910
&LBL.GDE01900 XR R15,R15
         AP    &LBL.GDEINSERTCNT,=P'1' COUNT OF INSERTS
         B     &LBL.GDE01920
&LBL.GDE01910 LA R15,4
         B     &LBL.GDE01920
&LBL.GDE01920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE02000 REPLACE                                                    *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE02000 GDESUBST
         CLC   &LBL.GDEROOT,&LBL.NULL
         BE    &LBL.GDE02810
         MVC   &LBL.PTRP,&LBL.GDEROOT SET
&LBL.GDE02100 CLC &LBL.PTRP,&LBL.NULL  END OF TABLE?
         BE    &LBL.GDE02810               YES-BRANCH
&LBL.GDE02200 GDETCOMP &LBL.PTRP,&LBL.GDE02500,&LBL.GDE02400,          X
               &LBL.GDE02600,&LBL
&LBL.GDE02400 EQU *                    MOVE RIGHT BRANCH
         GDETRCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE02100
&LBL.GDE02500 EQU *                    MOVE LEFT BRANCH
         GDETLCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE02100
**********************************************************************
* REPLACE THE NODE IN TABLE CAUSE FOUND.                              *
**********************************************************************
&LBL.GDE02600 EQU *
         L     R3,&LBL.GDESIZE
         LR    R7,R3
         L     R6,&LBL.USERDATAAREA    MOVE
         MVCL  R2,R6
         B     &LBL.GDE02900
&LBL.GDE02810 MVI &LBL.RETCODE,C'1'
         AP    &LBL.GDEREPLACECNTERR,=P'1' COUNT OF REPLACES
         B     &LBL.GDE02910
&LBL.GDE02900 XR R15,R15
         AP    &LBL.GDEREPLACECNT,=P'1' COUNT OF REPLACES
         B     &LBL.GDE02920
&LBL.GDE02910 LA R15,4
         B     &LBL.GDE02920
&LBL.GDE02920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE03000 FIND                                                       *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE03000 GDESUBST
         CLC   &LBL.GDEROOT,&LBL.NULL
         BE    &LBL.GDE03810
         MVC   &LBL.PTRP,&LBL.GDEROOT SET
&LBL.GDE03100 CLC &LBL.PTRP,&LBL.NULL  END OF TABLE?
         BE    &LBL.GDE03810               YES-BRANCH
         GDETBLFT &LBL.PTRP            MAKE
&LBL.GDE03200 GDETCOMP &LBL.PTRP,&LBL.GDE03500,&LBL.GDE03400,          X
               &LBL.GDE03600,&LBL
&LBL.GDE03400 EQU *                    MOVE RIGHT BRANCH
         GDETRCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE03100
&LBL.GDE03500 EQU *                    MOVE LEFT BRANCH
         GDETLCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE03100
**********************************************************************
* RETURN THE NODE IN TABLE PER REQUEST.                               *
**********************************************************************
&LBL.GDE03600 EQU *
         L     R3,&LBL.GDESIZE
         LR    R7,R3
         L     R6,&LBL.USERDATAAREA    MOVE
         MVCL  R6,R2
         B     &LBL.GDE03900
&LBL.GDE03810 MVI &LBL.RETCODE,C'2'
         AP    &LBL.GDEFINDCNTERR,=P'1' COUNT OF FINDS
         B     &LBL.GDE03910
&LBL.GDE03900 XR R15,R15
         AP    &LBL.GDEFINDCNT,=P'1' COUNT OF FINDS
         B     &LBL.GDE03920
&LBL.GDE03910 LA R15,4
         B     &LBL.GDE03920
&LBL.GDE03920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE04000 FIRST                                                      *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE04000 GDESUBST
         CLC   &LBL.GDEROOT,&LBL.NULL
         BE    &LBL.GDE04810
         MVC   &LBL.PTRT,&LBL.GDEROOT
         MVC   &LBL.PTRQ,&LBL.PTRT
&LBL.GDE04100 CLC &LBL.PTRT,&LBL.NULL
         BE    &LBL.GDE04200
         MVC   &LBL.PTRQ,&LBL.PTRT
         GDETLCHD &LBL.PTRT
         STCM  R3,15,&LBL.PTRT
         B     &LBL.GDE04100
&LBL.GDE04200 GDETIDNT &LBL.PTRQ
         L     R3,&LBL.GDESIZE
         LR    R7,R3
         L     R6,&LBL.USERDATAAREA    MOVE
         MVCL  R6,R2
         B     &LBL.GDE04900
&LBL.GDE04810 MVI &LBL.RETCODE,C'3'
         AP    &LBL.GDEFIRSTCNTERR,=P'1' COUNT OF FIRSTS
         B     &LBL.GDE04910
&LBL.GDE04900 XR R15,R15
         AP    &LBL.GDEFIRSTCNT,=P'1' COUNT OF FIRSTS
         B     &LBL.GDE04920
&LBL.GDE04910 LA R15,4
         B     &LBL.GDE04920
&LBL.GDE04920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE05000 NEXT                                                      *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE05000 GDESUBST
         CLC   &LBL.GDEROOT,&LBL.NULL
         BE    &LBL.GDE05810
         MVC   &LBL.PTRP,&LBL.GDEROOT SET
         MVC   &LBL.PTRQ,&LBL.NULL
&LBL.GDE05100 CLC &LBL.PTRP,&LBL.NULL  END OF TABLE?
         BE    &LBL.GDE05430               YES-BRANCH
         GDETCOMP &LBL.PTRP,&LBL.GDE05200,&LBL.GDE05300,               X
               &LBL.GDE05400,&LBL
&LBL.GDE05200 EQU *
         MVC   &LBL.PTRQ,&LBL.PTRP MOVE LEFT BRANCH
         GDETLCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE05100
&LBL.GDE05300 EQU *
         GDETRCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE05100
&LBL.GDE05400 EQU *
         GDETRCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         CLC   &LBL.PTRP,&LBL.NULL
         BE    &LBL.GDE05430
&LBL.GDE05410 CLC &LBL.PTRP,&LBL.NULL
         BE    &LBL.GDE05420
         MVC   &LBL.PTRQ,&LBL.PTRP
         GDETLCHD &LBL.PTRP
         STCM  R3,15,&LBL.PTRP
         B     &LBL.GDE05410
&LBL.GDE05420 GDETIDNT &LBL.PTRQ
         B     &LBL.GDE05500
&LBL.GDE05430 CLC &LBL.PTRQ,&LBL.NULL
         BE    &LBL.GDE05810
         B     &LBL.GDE05420
**********************************************************************
* RETURN THE NODE FROM TABLE PRE REQUEST.                             *
**********************************************************************
&LBL.GDE05500 EQU *
         L     R3,&LBL.GDESIZE
         LR    R7,R3
         L     R6,&LBL.USERDATAAREA    MOVE
         MVCL  R6,R2
         B     &LBL.GDE05900
&LBL.GDE05810  MVI &LBL.RETCODE,C'3'
         AP    &LBL.GDENEXTCNTERR,=P'1' COUNT OF NEXTS
         B     &LBL.GDE05910
&LBL.GDE05900 XR R15,R15
         AP    &LBL.GDENEXTCNT,=P'1' COUNT OF NEXTS
         B     &LBL.GDE05920
&LBL.GDE05910 LA R15,4
         B     &LBL.GDE05920
&LBL.GDE05920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE06000 DELETE                                                     *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE06000 GDESUBST
         MVI   &LBL.GDEINITSTATUS,C'C'    CLOSE UP SHOP TIME TO GO HOME
**********************************************************************
* FREE ALL ACQURED CORE FOR A TABLE.                                  *
*        FIRST 4 BYTES OF GETMAIN CORE IS LINK-LIST POINTERS.         *
*        SECOND 4 BYTES OF GETMAIN CORE IS THE SIZE OF AREA.          *
**********************************************************************
         L     R5,&LBL.GDELINK
         MVC   &LBL.GDEROOT,&LBL.NULL
         MVC   &LBL.GDELINK,&LBL.NULL
         MVC   &LBL.GDEUSED,&LBL.NULL
         MVC   &LBL.GDEPNTR,&LBL.NULL
         MVC   &LBL.PTRA,&LBL.NULL
         MVC   &LBL.PTRB,&LBL.NULL
         MVC   &LBL.PTRC,&LBL.NULL
         MVC   &LBL.PTRF,&LBL.NULL
         MVC   &LBL.PTRP,&LBL.NULL
         MVC   &LBL.PTRQ,&LBL.NULL
         MVC   &LBL.PTRT,&LBL.NULL
         MVC   &LBL.PTRX,&LBL.NULL
         MVC   &LBL.PTRY,&LBL.NULL
&LBL.GDE06100 LTR R5,R5
         BZ    &LBL.GDE06900
         ICM   R6,15,0(R5)
         L     R7,4(R5)
         FREEMAIN RU,LV=(R7),A=(R5),SP=0
         LR    R5,R6
         B     &LBL.GDE06100
&LBL.GDE06900 XR R15,R15
         AP    &LBL.GDEDELETECNT,=P'1' COUNT OF DELETES
         B     &LBL.GDE06920
&LBL.GDE06910 LA R15,4
         AP    &LBL.GDEDELETECNTERR,=P'1' COUNT OF DELETES
         B     &LBL.GDE06920
&LBL.GDE06920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE07000 REPORT                                                    *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE07000 GDESUBST
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07OPEN
         MVC   &LBL.GDECAP2(133),=CL133'0'
         MVC   &LBL.GDECAP2+5(5),=C'NAME:'
         MVC   &LBL.GDECAP2+10(8),=CL8'&NAME'
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVC   &LBL.GDECAP2(133),=CL133'-'
         MVC   &LBL.GDECAP2+19(97),=99C'.'
         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07INSERT),&LBL.GDE07INSERT
         MVC   &LBL.GDECAP2+51(2),=CL2'OK'
         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK
         OI    &LBL.GDEINSERTCNT+5,X'0F'
         ED    &LBL.GDECAP2+53(12),&LBL.GDEINSERTCNT
         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'
         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK
         OI    &LBL.GDEINSERTCNTERR+5,X'0F'
         ED    &LBL.GDECAP2+76(12),&LBL.GDEINSERTCNTERR
         MVC   &LBL.GDECAP2+94(20),=CL20'NO STORAGE AVAILABLE'
         MVC   &LBL.GDECAP2+114(12),&LBL.GDE07MASK
         OI    &LBL.GDENOCORECNTERR+5,X'0F'
         ED    &LBL.GDECAP2+114(12),&LBL.GDENOCORECNTERR
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVC   &LBL.GDECAP2(133),=CL133'-'
         MVC   &LBL.GDECAP2+13(59),=59C'.'
         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07REPLACE),&LBL.GDE07REPLACE
         MVC   &LBL.GDECAP2+51(2),=CL2'OK'
         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK
         OI    &LBL.GDEREPLACECNT+5,X'0F'
         ED    &LBL.GDECAP2+53(12),&LBL.GDEREPLACECNT
         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'
         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK
         OI    &LBL.GDEREPLACECNTERR+5,X'0F'
         ED    &LBL.GDECAP2+76(12),&LBL.GDEREPLACECNTERR
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVC   &LBL.GDECAP2(133),=CL133'-'
         MVC   &LBL.GDECAP2+13(59),=59C'.'
         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07FIND),&LBL.GDE07FIND
         MVC   &LBL.GDECAP2+51(2),=CL2'OK'
         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK
         OI    &LBL.GDEFINDCNT+5,X'0F'
         ED    &LBL.GDECAP2+53(12),&LBL.GDEFINDCNT
         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'
         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK
         OI    &LBL.GDEFINDCNTERR+5,X'0F'
         ED    &LBL.GDECAP2+76(12),&LBL.GDEFINDCNTERR
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVC   &LBL.GDECAP2(133),=CL133'-'
         MVC   &LBL.GDECAP2+13(59),=59C'.'
         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07FIRST),&LBL.GDE07FIRST
         MVC   &LBL.GDECAP2+51(2),=CL2'OK'
         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK
         OI    &LBL.GDEFIRSTCNT+5,X'0F'
         ED    &LBL.GDECAP2+53(12),&LBL.GDEFIRSTCNT
         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'
         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK
         OI    &LBL.GDEFIRSTCNTERR+5,X'0F'
         ED    &LBL.GDECAP2+76(12),&LBL.GDEFIRSTCNTERR
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVC   &LBL.GDECAP2(133),=CL133'-'
         MVC   &LBL.GDECAP2+13(59),=59C'.'
         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07NEXT),&LBL.GDE07NEXT
         MVC   &LBL.GDECAP2+51(2),=CL2'OK'
         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK
         OI    &LBL.GDENEXTCNT+5,X'0F'
         ED    &LBL.GDECAP2+53(12),&LBL.GDENEXTCNT
         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'
         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK
         OI    &LBL.GDENEXTCNTERR+5,X'0F'
         ED    &LBL.GDECAP2+76(12),&LBL.GDENEXTCNTERR
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVC   &LBL.GDECAP2(133),=CL133'-'
         MVC   &LBL.GDECAP2+13(59),=59C'.'
         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07DELETE),&LBL.GDE07DELETE
         MVC   &LBL.GDECAP2+51(2),=CL2'OK'
         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK
         OI    &LBL.GDEDELETECNT+5,X'0F'
         ED    &LBL.GDECAP2+53(12),&LBL.GDEDELETECNT
         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'
         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK
         OI    &LBL.GDEDELETECNTERR+5,X'0F'
         ED    &LBL.GDECAP2+76(12),&LBL.GDEDELETECNTERR
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         GDEGOSUB &LBL.GDE09000,&LBL.GDE07CLOSE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         ZAP   &LBL.GDEINSERTCNT,=P'0' COUNT OF INSERTS
         ZAP   &LBL.GDEINSERTCNTERR,=P'0' COUNT OF INSERTS
         ZAP   &LBL.GDENOCORECNTERR,=P'0' COUNT OF INSERTS
         ZAP   &LBL.GDEREPLACECNT,=P'0' COUNT OF REPLACES
         ZAP   &LBL.GDEREPLACECNTERR,=P'0' COUNT OF REPLACES
         ZAP   &LBL.GDEFINDCNT,=P'0' COUNT OF FINDS
         ZAP   &LBL.GDEFINDCNTERR,=P'0' COUNT OF FINDS
         ZAP   &LBL.GDEFIRSTCNT,=P'0' COUNT OF FIRSTS
         ZAP   &LBL.GDEFIRSTCNTERR,=P'0' COUNT OF FIRSTS
         ZAP   &LBL.GDENEXTCNT,=P'0' COUNT OF NEXTS
         ZAP   &LBL.GDENEXTCNTERR,=P'0' COUNT OF NEXTS
         ZAP   &LBL.GDEDELETECNT,=P'0' COUNT OF DELETES
         ZAP   &LBL.GDEDELETECNTERR,=P'0' COUNT OF DELETES
&LBL.GDE07900 XR R15,R15
         B     &LBL.GDE07920
&LBL.GDE07910 LA R15,4
         B     &LBL.GDE07920
&LBL.GDE07920 GDESUBEN
&LBL.GDE07OPEN  DC   C'0'
&LBL.GDE07WRITE DC   C'1'
&LBL.GDE07CLOSE DC   C'7'
&LBL.GDE07MASK  DC   XL12'4B2020202020202020202120'
&LBL.GDE07INSERT DC  C'RECORDS INSERTED'
&LBL.GDE07REPLACE DC C'RECORDS REPLACED'
&LBL.GDE07FIND  DC   C'RECORDS SOUGHT BY KEY'
&LBL.GDE07FIRST DC   C'RETURN FIRST REQUESTS'
&LBL.GDE07NEXT  DC   C'RETURN NEXT REQUESTS'
&LBL.GDE07DELETE DC  C'TABLE DELETE REQUESTS'
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE08000 PROCESS TRACING DISPLAY                                    *
* LOGIC OF THIS ROUTINE IS                                            *
*   IF FIRST CALL                                                     *
*      IF BEFORE PICTURE                                              *
*         OPEN PRINT FILE                                             *
*      END                                                            *
*   END                                                               *
*   PRINT DATA AREA                                                   *
*   IF REPORT CALL                                                    *
*      IF AFTER CALL                                                  *
*         CLOSE PRINT FILE                                            *
*      END                                                            *
*   END                                                               *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE08000 GDESUBST
*  SAVE CALLING REGISTER
         L     R2,0(R1)
*  START US OUT
         CLI   &LBL.GDE08FST,C'C'
         BE    &LBL.GDE08010
         CP    &LBL.GDE08TRACECNT,&LBL.TRACEMAXCNT
         BH    &LBL.GDE08040 ... CLOSE TRACING
         B     &LBL.GDE08020 ... TRACE
&LBL.GDE08010  EQU   *
*  OPEN TRACE FILE
         ZAP   &LBL.GDECBP1LPP,=P'53'
         MVI   &LBL.GDECBP1NP,C'1'
         MVI   &LBL.GDECBP1DNP,C'1'
         MVI   &LBL.GDECBP1RNP,C'1'
         MVI   &LBL.GDECBP1FUNC,C'1'
         MVI   &LBL.GDECBP1HEX,C'8'
         MVC   &LBL.GDECBP1LEN,=H'512'
         MVC   &LBL.GDECBP1LNBK,=H'512'
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'
         LOAD  EP=GDE001CA
         ST    R0,&LBL.GDECBP1ROUT
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2),VL
         MVI   &LBL.GDE08FST,C'O'
* PRINT THE DATA AREA
&LBL.GDE08020  EQU   *
         MVI   &LBL.GDECBP1FUNC,C'2'
         MVC   &LBL.GDECBP2(45),=CL45'         INTERNAL TRACE AREA'
         MVC   &LBL.GDECBP2+29(16),=CL16'- BEFORE DISPLAY'
         CLI   0(R2),C'B'
         BE    *+10
         MVC   &LBL.GDECBP2+29(16),=CL16'- AFTER DISPLAY'
         MVC   &LBL.GDECBP2+0(8),=CL8'&NAME'
         MVI   &LBL.GDECBP1HEX,C'8'
         MVC   &LBL.GDECBP1LEN,=AL2(45)
         MVC   &LBL.GDECBP1LNBK,=AL2(45)
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL
         MVI   &LBL.GDECBP1HEX,C'1'
         MVC   &LBL.GDECBP2(133),=CL133'            CALLING PARMS'
         MVC   &LBL.GDECBP2+3(8),=CL8'&NAME'
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL
         MVC   &LBL.GDECBP1LEN,=AL2(&LBL.DSECT_LENGTH)
         MVC   &LBL.GDECBP1LNBK,=AL2(&LBL.DSECT_LENGTH)
         MVI   &LBL.GDECBP1HEX,C'7'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,(R10),&LBL.GDECBH1),VL
         MVI   &LBL.GDECBP1HEX,C'1'
         MVC   &LBL.GDECBP2(133),=CL133'            PASSED RECORD'
         MVC   &LBL.GDECBP2+3(8),=CL8'&NAME'
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL
         L     R2,&LBL.USERDATAAREA
         LH    R7,=AL2(&TABLNG)
         STCM  R7,B'0011',&LBL.GDECBP1LEN
         STCM  R7,B'0011',&LBL.GDECBP1LNBK
         LTR   R2,R2
         BH    *+16
         MVC   &LBL.GDECBP1LEN,=XL2'00'
         MVC   &LBL.GDECBP1LNBK,=XL2'00'
         MVI   &LBL.GDECBP1HEX,C'7'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,(R2),&LBL.GDECBH1),VL
         MVI   &LBL.GDECBP1HEX,C'1'
         MVC   &LBL.GDECBP2(133),=CL133'            INTERNAL WORKAREA'
         MVC   &LBL.GDECBP2+3(8),=CL8'&NAME'
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL
         L     R3,=AL4(&LBL.GDETRACEEND-&LBL.GDETRACESTART)
         STH   R3,&LBL.GDECBP1LEN
         STH   R3,&LBL.GDECBP1LNBK
         MVI   &LBL.GDECBP1HEX,C'7'
         LA    R9,&LBL.GDEDSECT     SET ARG ADDRESS
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,(R9),&LBL.GDECBH1),VL
         MVI   &LBL.GDECBP1HEX,C'1'
         MVC   &LBL.GDECBP2(133),=CL133'            TABLE STORAGE'
         MVC   &LBL.GDECBP2+3(8),=CL8'&NAME'
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL
*** DISPLAY TABLE STORAGE
         L     R5,&LBL.GDELINK
&LBL.GDE08030 LTR R5,R5
         BZ    &LBL.GDE08039
         LR    R6,R5
         L     R7,4(R5)
*** R6 POINT TO STORAGE R7 CONTAINS THE LENGTH
*** FIRST PRINT 8 BYTE HEADER STUFF
         MVC   &LBL.GDECBP1LEN,=AL2(8)
         MVC   &LBL.GDECBP1LNBK,=AL2(8)
         MVI   &LBL.GDECBP1HEX,C'7'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,(R6),&LBL.GDECBH1),VL
*** NOW PRINT THE STORAGE
         LA    R6,8(R6)
         SH    R7,=AL2(8)
         STCM  R7,B'0011',&LBL.GDECBP1LEN
         LH    R7,=AL2(&TABLNG+9)
         STCM  R7,B'0011',&LBL.GDECBP1LNBK
         MVI   &LBL.GDECBP1HEX,C'7'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,(R6),&LBL.GDECBH1),VL
*  DONE WITH THIS BLOCK NOW DO THE NEXT BLOCK
         ICM   R5,15,0(R5)
         B     &LBL.GDE08030
&LBL.GDE08039  EQU   *
*  TEST IF WE SHOULD CLOSE THE TRACE FILE
         CLI   0(R2),C'B'
         BE    &LBL.GDE08900
         CLI   &LBL.COMMAND,C'7'
         BE    &LBL.GDE08040
         B     &LBL.GDE08900
*  CLOSE THE PRINTER FILE
&LBL.GDE08040  EQU   *
         MVI   &LBL.GDECBP1FUNC,C'3'
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2),VL
         MVI   &LBL.GDE08FST,C'C'
         B     &LBL.GDE08900
&LBL.GDE08900 LA    R15,0
         B     &LBL.GDE08920
&LBL.GDE08910 LA    R15,4
         B     &LBL.GDE08920
&LBL.GDE08920 GDESUBEN
&LBL.GDE08FST DC  C'C'
&LBL.GDE08TRACECNT DC  PL6'0'
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE09000 PROCESS STATISTICAL REPORT                                 *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE09000 GDESUBST
         L     R2,0(R1)
         CLI   0(R2),C'0'
         BE    &LBL.GDE09010
         CLI   0(R2),C'7'
         BE    &LBL.GDE09030
         B     &LBL.GDE09020
&LBL.GDE09010 ZAP   &LBL.GDECAP1LPP,=P'53'
         MVI   &LBL.GDECAP1NP,C'1'
         MVI   &LBL.GDECAP1DNP,C'1'
         MVI   &LBL.GDECAP1RNP,C'1'
         MVI   &LBL.GDECAP1FUNC,C'1'
         MVI   &LBL.GDECAP1HEX,C'8'
         MVC   &LBL.GDECAP1LEN,=H'512'
         MVC   &LBL.GDECAP1LNBK,=H'512'
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT01ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT01'
         LOAD  EP=GDE001CA
         ST    R0,&LBL.GDECAP1ROUT
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2),VL
         B     &LBL.GDE09900
&LBL.GDE09020 MVI   &LBL.GDECAP1FUNC,C'2'
         MVI   &LBL.GDECAP1HEX,C'1'
         MVC   &LBL.GDECAP1LEN,=AL2(133)
         MVC   &LBL.GDECAP1LNBK,=AL2(133)
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT01ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT01'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL
         B     &LBL.GDE09900
&LBL.GDE09030 MVI   &LBL.GDECAP1FUNC,C'3'
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT01ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT01'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2),VL
         B     &LBL.GDE09900
&LBL.GDE09900 LA    R15,0
         B     &LBL.GDE09920
&LBL.GDE09910 LA    R15,4
         B     &LBL.GDE09920
&LBL.GDE09920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE0A000 GET STORAGE ROUTINE                                        *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE0A000 GDESUBST
         L     R2,&LBL.GDESIZE
         AH    R2,=H'9'
         C     R2,&LBL.GDEUSED
         BNH   &LBL.GDE0A100
         ICM   R2,15,&LBL.GDELINK
         LA    R3,&LBL.GDELINK
&LBL.GDE0A010 LTR R2,R2
         BZ    &LBL.GDE0A020
         LR    R3,R2
         ICM   R2,15,0(R2)
         B     &LBL.GDE0A010
&LBL.GDE0A020 L R6,&LBL.GDESIZE
         AH    R6,=H'9'
         MH    R6,&LBL.CURMAX
         AH    R6,=H'8'
         GETMAIN RC,LV=(6)
         LTR   R15,R15
         BNZ   &LBL.GDE0A810
         STCM  R6,15,4(R1)
         STCM  R1,15,0(R3)
         MVC   0(4,R1),&LBL.NULL
         SH    R6,=H'8'
         STCM  R6,15,&LBL.GDEUSED
         AH    R1,=H'8'
         STCM  R1,15,&LBL.GDEPNTR
&LBL.GDE0A100 L R2,&LBL.GDEPNTR
         LR    R3,R2
         AH    R3,=H'9'
         A     R3,&LBL.GDESIZE
         STCM  R3,15,&LBL.GDEPNTR
         XR    R3,R3
         ICM   R3,15,&LBL.GDEUSED
         S     R3,&LBL.GDESIZE
         SH    R3,=H'9'
         STCM  R3,15,&LBL.GDEUSED
         ST    R2,&LBL.PTRNEW
         B     &LBL.GDE0A900
&LBL.GDE0A810  MVI &LBL.RETCODE,C'5'
         B     &LBL.GDE0A910
&LBL.GDE0A900 XR R15,R15
         B     &LBL.GDE0A920
&LBL.GDE0A910 LA R15,4
         B     &LBL.GDE0A920
&LBL.GDE0A920 GDESUBEN
         LTORG
         DROP  R10,R11
         AIF   (&GDETABLE).Z0010
&GDETABLE SETB 1
GDETABLE CSECT
         DC    C'GDETABLE -02.01 '
.*
.*     TYPE=IOROUTINE
.*
.**********************************************************************
         AGO    .Z0010
.Z0010   ANOP
         MEXIT
.Z0020   ANOP
         MNOTE 8,'*** TYPE VALUE UNKNOWN, CHECK TYPE KEYWORK ***'
         MEND
         MACRO
&NAME    GDETIDNT &A
.*       THIS RETURNS POINTER TO THE DATA OF THE NODE A
&NAME    L     R2,&A
         LA    R2,9(R2)
         XR    R3,R3
         MEND
         MACRO
&NAME    GDETBLFT &A
.********GDETBLFT &A   ***********************************************
.*       THIS RETURNS POINTER TO THE BALANCE FACTOR OF THE NODE A
&NAME    L     R2,&A
         LA    R2,8(R2)
         XR    R3,R3
         ICM   R3,1,0(R2)
         MEND
         MACRO
&NAME    GDETLCHD &A
.*       THIS RETURNS THE LEFT CHLD OF THE NODE A
&NAME    L     R2,&A
         LA    R2,0(R2)
         ICM   R3,15,0(R2)
         MEND
         MACRO
&NAME    GDETRCHD &A
.*       THIS RETURNS POINTER TO THE RIGHT CHLD OF THE NODE A
&NAME    L     R2,&A
         LA    R2,4(R2)
         ICM   R3,15,0(R2)
         MEND
         MACRO
&NAME    GDETCOMP &A,&LEFT,&RIGHT,&EQUAL,&LBL
.********GDETCOMP &A   ***********************************************
         LCLA  &CNT
         GBLC  &GKEYLNG(256),&GKEYOFF(256)
&NAME    GDEIDENT &A
         L     R3,&LBL.USERDATAAREA
&CNT     SETA  1
.COMPLOP ANOP
         AIF   ('&GKEYLNG(&CNT)' EQ '').COMPEND
         CLC   &GKEYOFF(&CNT).(&GKEYLNG(&CNT),R3),&GKEYOFF(&CNT).(R2)
         BL    &LEFT
         BH    &RIGHT
&CNT     SETA  &CNT+1
         AGO   .COMPLOP
.COMPEND ANOP
         B     &EQUAL
         MEND
         MACRO
&LABEL   GDECSI &TYPE=INITIALIZE,                                      X
               &OK=,                                                   X
               &NOTOK=,                                                X
               &EODAD=,                                                X
               &FILTER='**',                                           X
               &CATALOG='SYS1.MASTERCAT',                              X
               &RETCATALOG=,                                           X
               &RETENTRY=,                                             X
               &ENTRYTYPES='                ',                         X
               &FIELDS=,                                               X
               &TRACE=NO,                                              X
               &NAME=CSI1,                                             X
               &ERRORMAX=050,                                          X
               &MAXSTORAGE=64*1024,                                    X
               &PROGRAM=SYSUT1,                                        X
               &PROGRAMID=CA,                                          X
               &STATID=01,                                             X
               &TRACEID=02,                                            X
               &PARMLIST=
.**********************************************************************
.*
.*
.*
.*
.**********************************************************************
         GBLB  &GDECSI
         GBLC  &GDECSIDSECTDEFINED(16)
         GBLC  &GDECSICSECTDEFINED(16)
         GBLC  &GDECSIPROGRAM(16)
         GBLC  &GDECSIPROGRAMID(16)
         GBLC  &GDECSISTATID(16)
         GBLC  &GDECSITRACEID(16)
         GBLC  &LBL
         GBLC  &ROUTCA
         LCLA  &CNTA,&CNTB
         LCLC  &ROUT01,&ROUT01ID
         LCLC  &ROUT02,&ROUT02ID
         LCLC  &PROGNAME
         LCLC  &LABEL1,&LABEL2
&CNTA    SETA  1
.AA010   ANOP
         AIF   ('&GDECSICSECTDEFINED(&CNTA)' EQ '').AA020
         AIF   ('&GDECSICSECTDEFINED(&CNTA)' EQ '&NAME').AA030
&CNTA    SETA  &CNTA+1
         AIF   (&CNTA LE 16).AA010
         MNOTE 8,'MORE THAN 16 VSAM FILE DEFINE - LIMIT REACHED'
         AGO   .Z0010
.AA020   ANOP
&GDECSICSECTDEFINED(&CNTA)  SETC  '&NAME'
&GDECSIPROGRAM(&CNTA)       SETC  '&PROGRAM'
&GDECSIPROGRAMID(&CNTA)     SETC  '&PROGRAMID'
&GDECSISTATID(&CNTA)        SETC  '&STATID'
&GDECSITRACEID(&CNTA)       SETC  '&TRACEID'
.AA030   ANOP
&PROGNAME SETC  '&GDECSIPROGRAM(&CNTA)'(1,6)
&ROUTCA   SETC  '&PROGNAME'.'&GDECSIPROGRAMID(&CNTA)'(1,2)
&ROUT01   SETC  '&PROGNAME'.'&GDECSISTATID(&CNTA)'(1,2)
&ROUT01ID SETC  '&PROGNAME'.'.R'.'&GDECSISTATID(&CNTA)'(1,2)
&ROUT02   SETC  '&PROGNAME'.'&GDECSITRACEID(&CNTA)'(1,2)
&ROUT02ID SETC  '&PROGNAME'.'.R'.'&GDECSITRACEID(&CNTA)'(1,2)
&LBL     SETC  'GDECSI_'.'&NAME'(1,6).'_'
.**********************************************************************
.*
.* THIS MACRO IS USED TO GENERATE CALL TO THE DFSMS CATALOG SEARCH
.* INTERFACE BY USING THE TYPE KEYWORD
.*
.* TYPE=INITIALIZE  = CREATES ALL OF THE POINTERS AND WORKAREAS
.*     REQUIRED BY THIS FACILITY
.*     RETURN CODES - 00 ALL OK
.*                    04 GETMAIN ERROR
.*                    08 LOGIC ERROR - CLEAN UP NOT DONE LAST TIME?
.*                    XY - X IS FUNCTION PROCESSING
.*                         Y IS SEQUENTIAL ERROR CODE
.*
.* TYPE=NEXTITEM    = READ THE NEXT CATALOG RECORD AND INITIALIZE
.*                    FIELDS
.*     RETURN CODES - 00 ALL OK
.*                    04 END OF DATA
.*                    08 LOGIC ERROR
.*                    XY - X IS FUNCTION PROCESSING
.*                         Y IS SEQUENTIAL ERROR CODE
.*
.* TYPE=CLEANUP     = DEACTIVE INTERFACE, FREE STORAGE
.*     RETURN CODES - 00 ALL OK
.*                    08 LOGIC ERROR
.*                    XY - X IS FUNCTION PROCESSING
.*                         Y IS SEQUENTIAL ERROR CODE
.*
.* TYPE=SEARCH      = EXECUTE THE SEARCH BASED ON CURRENT SETTINGS
.*     RETURN CODES - 00 ALL OK
.*                    08 LOGIC ERROR
.*                    XY - X IS FUNCTION PROCESSING
.*                         Y IS SEQUENTIAL ERROR CODE
.*
.* TYPE=SETUP       = ESTABILISHED NEW CATALOG, FILTER, AND
.*     KEYWORDS IN THE CALLING PARMS FOR THE NEXT CALL
.*     RETURN CODES - 00 ALL OK
.*                    08 INITIALIZE MUST BE PERFORMED
.*                    XY - X IS FUNCTION PROCESSING
.*                         Y IS SEQUENTIAL ERROR CODE
.*
.* TYPE=REPORT      = PRINT THE STATISTICS FROM THE FILE OPERATION
.*     RETURN CODES - 00 ALL OK
.*                    08 LOGIC ERROR
.*                    XY - X IS FUNCTION PROCESSING
.*                         Y IS SEQUENTIAL ERROR CODE
.*
.* TYPE=IOROUTINE BUILDS ALL THE SUBROUTINE CODE TO SUPPORT THE
.*            REQUESTS
.*
.* TYPE=PARMLIST DECLARES STORAGE TO BE USED BY PARMLIST
.*
.* TYPE=DSECT DECLARES DSECT TO MAP THE STORAGE SET ASIDE BY
.*            PARMLIST
.*
.* THE PARAMATER LIST MADE AVAILABLE TO THE PROGRAM CALLING THIS
.*    ROUTINE IS DEFINED AS FOLLOWS
.*
.* PARAMETER LIST
.*
.*     GDECSI_DSECT       DS 0C       VSAM PARMLIST
.*     GDECSI_COMMAND     DS  CL2     CURRENT COMMAND
.*        00- TYPE=INITIALIZE
.*        10- TYPE=NEXTITEM
.*        20- TYPE=CLEANUP
.*        30- TYPE=SEARCH
.*        40- TYPE=SETUP
.*        50- TYPE=REPORT
.*     GDECSI_RETCODE     DS  CL2     RETURN CODE
.*     GDECSI_TRACE       DS  CL1     TURN ON TRACE
.*                        DS  CL3     RESERVED
.*     GDECSI_ERRORCNTMAX DS  PL6     COUNT OF ERRORS
.*     GDECSI_MAXSTORAGE  DS  AL4     MAX STORAGE TO USE IN CALLS
.*     GDECSI_RETR15      DS  CL4     REGISTER 15 IF ERROR OCCURED
.*     GDECSI_RETREASON   DS  CL4     REASON CODE FROM SHOWCB
.*
.*        OPTIONS ARE IN THE FORMAT DESCRIBED IN
.*          DFSMS/DFP MANAGING CATALOGUES APPENDIX D.
.*          THIS AREA IS MAPPED BY IGGCSINA
.*
.*        THIS IS MAINTAINED BY THE TYPE=SETUP CALL
.*          CALLING SETUP CANCELS ANY ABILITY TO USE RESUME
.*
.**********************************************************************
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE
.*
.*     TYPE=PARMLIST
.*
.A0010   AIF   ('&TYPE' NE 'PARMLIST').B0010
         AIF   ('&PARMLIST' EQ '').A0020
&PARMLIST DS  0D       PROGRAMS WORKAREA
         DS    CL(&LBL.DSECT_LENGTH)
         AGO   .Z0010
.A0020   ANOP
&LBL.DATAAREA DS  0D    PROGRAMS WORKAREA
         DS    CL(&LBL.DSECT_LENGTH)
         AGO   .Z0010
.*
.*     TYPE=DSECT
.*
.B0010   AIF   ('&TYPE' NE 'DSECT').C0010
&CNTA    SETA  1
.B0020   ANOP
         AIF   ('&GDECSIDSECTDEFINED(&CNTA)' EQ '').B0030
         AIF   ('&GDECSIDSECTDEFINED(&CNTA)' EQ '&NAME').Z0010
&CNTA    SETA  &CNTA+1
         AIF   (&CNTA LE 16).B0020
         MNOTE 8,'MORE THAN 16 VSAM FILE DEFINE - LIMIT REACHED'
         AGO   .B0020
.B0030   ANOP
&GDECSIDSECTDEFINED(&CNTA) SETC   '&NAME'
&LBL.DSECT          DSECT        CSI PARMLIST DSECT
&LBL.COMMAND        DS   CL2     CURRENT COMMAND
&LBL.RETCODE        DS   CL2     RETURN CODE
&LBL.TRACE          DS   CL1     TRACE THIS RECORD
                    DS   XL3     RESERVED
&LBL.MAXSTORAGE     DS   CL4     BINARY FULLWORD OF MAX WORKAREA LENGTH
&LBL.RETR15         DS   CL4     REGISTER 15 IF ERROR OCCURED
&LBL.RETREASON      DS   CL4     REASON CODE FROM SHOWCB
&LBL.SETUPDATA      DS   CL4     DATA FOR SETUP
&LBL.ERRORCNTMAX    DS   PL6     MAX ENTRIES TO TRACE IN ERROR
&LBL.DSECT_LENGTH   EQU  *-&LBL.DSECT
         AGO   .Z0010
.*
.*     TYPE=INITIALIZE
.*
.C0010   AIF   ('&TYPE' NE 'INITIALIZE').D0010
         AIF   ('&PARMLIST' EQ '').C0020
&LABEL   LA    R1,&PARMLIST
         AGO   .C0030
.C0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.C0030   ANOP
         USING &LBL.DSECT,R1
         MVC   &LBL.COMMAND,=CL2'00'
         ZAP   &LBL.ERRORCNTMAX,=P'&ERRORMAX'
         MVC   &LBL.MAXSTORAGE,=AL4(&MAXSTORAGE)
         GDECSIA TRACE=&TRACE
         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X
               PARMLIST=&PARMLIST
         AGO   .Z0010
.*
.*     TYPE=NEXTITEM
.*
.D0010   AIF   ('&TYPE' NE 'NEXTITEM').E0010
         AIF   ('&PARMLIST' EQ '').D0020
&LABEL   LA    R1,&PARMLIST
         AGO   .D0030
.D0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.D0030   ANOP
         USING &LBL.DSECT,R1
         MVC   &LBL.COMMAND,=CL2'10'
         GDECSIA TRACE=&TRACE
         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X
               PARMLIST=&PARMLIST
         AGO   .Z0010
.*
.*     TYPE=CLEANUP
.*
.E0010   AIF   ('&TYPE' NE 'CLEANUP').F0010
         AIF   ('&PARMLIST' EQ '').E0020
&LABEL   LA    R1,&PARMLIST
         AGO   .E0030
.E0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.E0030   ANOP
         USING &LBL.DSECT,R1
         MVC   &LBL.COMMAND,=CL2'20'
         GDECSIA TRACE=&TRACE
         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X
               PARMLIST=&PARMLIST
         AGO   .Z0010
.*
.*     TYPE=SEARCH
.*
.F0010   AIF   ('&TYPE' NE 'SEARCH').G0010
         AIF   ('&PARMLIST' EQ '').F0020
&LABEL   LA    R1,&PARMLIST
         AGO   .F0030
.F0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.F0030   ANOP
         USING &LBL.DSECT,R1
         MVC   &LBL.COMMAND,=CL2'30'
         GDECSIA TRACE=&TRACE
         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X
               PARMLIST=&PARMLIST
         AGO   .Z0010
.*
.*     TYPE=SETUP
.*
.G0010   AIF   ('&TYPE' NE 'SETUP').H0010
         AIF   ('&PARMLIST' EQ '').G0020
&LABEL   LA    R1,&PARMLIST
         AGO   .G0030
.G0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.G0030   ANOP
         USING &LBL.DSECT,R1
         MVC   &LBL.COMMAND,=CL2'40'
&LABEL1  SETC  '&LBL'.'&SYSNDX'.'SETUP1'
&LABEL2  SETC  '&LBL'.'&SYSNDX'.'SETUP2'
         LA    R14,&LABEL1
         ST    R14,&LBL.SETUPDATA
         AIF   ('&FILTER'(1,1) EQ '''').G0031
         LA    R14,&FILTER
         AGO   .G0032
.G0031   ANOP
         LA    R14,=CL44&FILTER
         AGO   .G0032
.G0032   ANOP
         ST    R14,&LABEL1+0
         AIF   ('&CATALOG'(1,1) EQ '''').G0033
         LA    R14,&CATALOG
         AGO   .G0034
.G0033   ANOP
         LA    R14,=CL44&CATALOG
         AGO   .G0034
.G0034   ANOP
         ST    R14,&LABEL1+4
         LA    R14,&RETCATALOG
         ST    R14,&LABEL1+24
         LA    R14,&RETENTRY
         ST    R14,&LABEL1+28
&CNTA    SETA  N'&FIELDS
&CNTB    SETA  1
.G0040   AIF   (&CNTB GT &CNTA).G0050
         LA    R14,&FIELDS(&CNTB,2)
         ST    R14,&LABEL1+36+8+(16*(&CNTB-1))
         LA    R14,L'&FIELDS(&CNTB,2)
         ST    R14,&LABEL1+36+12+(16*(&CNTB-1))
&CNTB    SETA  &CNTB+1
         AGO   .G0040
.G0050   ANOP
         B     &LABEL2
&LABEL1  DS   0F
         DC    AL4(0)    FILTER
         DC    AL4(0)    CATALOG NAME
         DC    CL16&ENTRYTYPES
         DC    AL4(0)    RETURN CATALOG
         DC    AL4(0)    RETURN ENTRY
&CNTA    SETA  N'&FIELDS
         DC    AL2(&CNTA)
         DC    AL2(0)
&CNTA    SETA  N'&FIELDS
&CNTB    SETA  1
.G0060   AIF   (&CNTB GT &CNTA).G0080
         AIF   ('&FIELDS(&CNTB,1)' EQ 'SECFLAGS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'ENTYPE').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'ENTNAME').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'TYPE').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'NAME').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'GDGLIMIT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'GDGATTR').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'OWNERID').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSCRDT2').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSETCRDT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSEXDT2').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSETEXDT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'ATTR1').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'CATTR').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'RGATTR').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'ATTR2').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'OPENIND').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'BUFSIZE').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'PRIMSPAC').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'SCONSPAC').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'SPACOPTN').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'HURBADS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'HARBADS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LRECL').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'EXCPEXIT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'NVSMATTR').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LTBACKDT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'DATACLAS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'STORCLAS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'MGMTCLAS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'AMDKEY').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'AMDCIREC').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'GENLEVEL').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'DEVTYP').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'VOLSER').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'FILESEQ').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'VOLFLG').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSCBTTR').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOEXTNT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'HKRBA').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'HURBA').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'HARBA').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'PHYBLKSZ').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOBLKTRK').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOTRKAU').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'ITYPEXT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOBYTTRK').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOBYTAU').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LOKEYV').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'HIKEYV').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'PASSWORD').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'PASSPRMT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'PASSATMP').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'USVRMDUL').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'USERAREC').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'VSAMREUS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'VSAMTYPE').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'ACTOKEN').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'COMPIND').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'COMUDSIZ').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'UDATASIZ').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'VVRNFLGS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'STRIPCNT').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBCONID').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBDEVTP').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBDESCR').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBEMPTY').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBLIBID').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBLOGIC').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCRTH').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR1').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR2').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR3').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR4').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR5').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR6').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR7').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR8').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSLOTS').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRES').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS1').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS1').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS2').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS3').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS4').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS5').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS6').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS7').G0070
         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS8').G0070
         MNOTE 8,'INVALID FIELD NAME &FIELDS(&CNTB,1)'
.G0070   ANOP
         DC    CL8'&FIELDS(&CNTB,1)',2F'-1'
&CNTB    SETA  &CNTB+1
         AGO   .G0060
.G0080   ANOP
&LABEL2  GDECSIA TRACE=&TRACE
         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X
               PARMLIST=&PARMLIST
         AGO   .Z0010
.*
.*     TYPE=REPORT
.*
.H0010   AIF   ('&TYPE' NE 'REPORT').I0010
         AIF   ('&PARMLIST' EQ '').H0020
&LABEL   LA    R1,&PARMLIST
         AGO   .H0030
.H0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.H0030   ANOP
         USING &LBL.DSECT,R1
         MVC   &LBL.COMMAND,=CL2'50'
         GDECSIA TRACE=&TRACE
         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X
               PARMLIST=&PARMLIST
         AGO   .Z0010
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE
.*
.**********************************************************************
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR SUPPORT ROUTINES
.*
.*     TYPE=IOROUTINE
.*
.I0010   AIF   ('&TYPE' NE 'IOROUTINE').Z0020
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*                                                                     *
* GDECSI RETURNS CATALOG ENTRIES BASED ON REQUEST AND FILETERS        *
*                                                                     *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         GDECSI TYPE=DSECT,NAME=&NAME
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&ROUTCA  GDESTART R12
         L     R10,0(1)
         USING &LBL.DSECT,R10
         LA    R11,&LBL.GDEDSECT
         USING &LBL.GDEDSECT,R11
         MVC   &LBL.RETCODE,=CL2'00'
         MVC   &LBL.RETR15,=XL4'00'
         MVC   &LBL.RETREASON,=XL4'00'
* SHALL WE TRACE A BEFORE IMAGE?
         CLC   &LBL.TRACE,=CL1'0'
         BE    &LBL.MAIN0000
         CLC   &LBL.TRACE,=CL1'2'
         BE    &LBL.MAIN0000
         GDEGOSUB &LBL.GDE0B000,&LBL.GDETRACESTART
&LBL.MAIN0000 CLC &LBL.COMMAND,=CL2'00'
         BNE   &LBL.MAIN0010
         GDEGOSUB &LBL.GDE00000
         B     &LBL.MAIN0200
&LBL.MAIN0010 CLC &LBL.COMMAND,=CL2'10'
         BNE   &LBL.MAIN0020
         GDEGOSUB &LBL.GDE01000
         B     &LBL.MAIN0200
&LBL.MAIN0020 CLC &LBL.COMMAND,=CL2'20'
         BNE   &LBL.MAIN0030
         GDEGOSUB &LBL.GDE02000
         B     &LBL.MAIN0200
&LBL.MAIN0030 CLC &LBL.COMMAND,=CL2'30'
         BNE   &LBL.MAIN0040
         GDEGOSUB &LBL.GDE03000
         B     &LBL.MAIN0200
&LBL.MAIN0040 CLC &LBL.COMMAND,=CL2'40'
         BNE   &LBL.MAIN0050
         GDEGOSUB &LBL.GDE04000
         B     &LBL.MAIN0200
&LBL.MAIN0050 CLC &LBL.COMMAND,=CL2'50'
         BNE   &LBL.MAIN0060
         GDEGOSUB &LBL.GDE05000
         B     &LBL.MAIN0200
&LBL.MAIN0060 MVC &LBL.RETCODE,=CL2'08'
         B     &LBL.MAIN0200
&LBL.MAIN0200 CLC &LBL.TRACE,=CL1'0'
         BE    &LBL.MAIN0900
         CLC   &LBL.TRACE,=CL1'1'
         BE    &LBL.MAIN0210
         CLC   &LBL.RETCODE,=CL2'08'
         BNH   &LBL.MAIN0900
&LBL.MAIN0210 GDEGOSUB &LBL.GDE0B000,&LBL.GDETRACEEND
&LBL.MAIN0900 GDEEXIT
&LBL.GDEDSECT       DS   0D
&LBL.CALLINGPARMPTR DS  0F       POINTER TO RETURNCODE CONTROL BLOCK
&LBL.GDEREASONCDPTR DS   CL4     POINTER TO RETURNCODE CONTROL BLOCK
&LBL.GDEOPTIONSPTR  DS   CL4     POINTER TO OPTIONS CONTROL BLOCK
&LBL.GDEWORKAREAPTR DS   CL4     POINTER TO WORKAREA CONTROL BLOCK
&LBL.GDESEARCHR15   DS   CL4     R15 FROM CALL
&LBL.GDEREASONCODE  DS   CL4     REASON CODE AREA FROM CALL
&LBL.GDEOPTIONSSIZE DS   CL4     OPTIONS GETMAIN SIZE
&LBL.GDEWORKAREASIZE DS  CL4     WORKAREA GETMAIN SIZE
&LBL.GDEFIELDPTR    DS   CL4     POINTER TO FIELDS IN APPLICATION
&LBL.GDEFIELDSIZE   DS   CL4     FIELDS GETMAIN SIZE
&LBL.GDECURCATPTR   DS   CL4     POINTER TO CURRENT CATALOG ENTRY
&LBL.GDECURRENTPTR  DS   CL4     POINTER INTO WORKAREA OF NEXT ENTRY
&LBL.GDECURRENTCAT  DS   CL44    LAST CATALOG FOUND
&LBL.GDEINITSTATUS DC C'C'
&LBL.GDEDOUBLE      DS   D
&LBL.GDEALIASCNT DS PL6          COUNT OF ALIAS ENTRIES
&LBL.GDEALIASCNTERR DS PL6       COUNT OF ALIAS ENTRIES
&LBL.GDEAIXCNT      DS   PL6     COUNT OF ALTERNATE INDEX ENTRIES
&LBL.GDEAIXCNTERR   DS   PL6     COUNT OF ALTERNATE INDEX ENTRIES
&LBL.GDECLUSTERCNT  DS   PL6     COUNT OF CLUSTER ENTRIES
&LBL.GDECLUSTERCNTERR DS PL6     COUNT OF CLUSTER ENTRIES
&LBL.GDEDATACNT     DS   PL6     COUNT OF VSAM DATA ENTRIES
&LBL.GDEDATACNTERR  DS   PL6     COUNT OF VSAM DATA ENTRIES
&LBL.GDEGDGCNT      DS   PL6     COUNT OF GDG ENTRIES
&LBL.GDEGDGCNTERR   DS   PL6     COUNT OF GDG ENTRIES
&LBL.GDEGDSCNT      DS   PL6     COUNT OF GDG ENTRIES
&LBL.GDEGDSCNTERR   DS   PL6     COUNT OF GDG ENTRIES
&LBL.GDEINDEXCNT    DS   PL6     COUNT OF VSAM INDEX ENTRIES
&LBL.GDEINDEXCNTERR DS   PL6     COUNT OF VSAM INDEX ENTRIES
&LBL.GDENONVSAMCNT  DS   PL6     COUNT OF NONVSAM ENTRIES
&LBL.GDENONVSAMCNTERR DS PL6     COUNT OF NONVSAM ENTRIES
&LBL.GDEPATHCNT     DS   PL6     COUNT OF PATH ENTRIES
&LBL.GDEPATHCNTERR  DS   PL6     COUNT OF PATH ENTRIES
&LBL.GDEUSERCATCNT  DS   PL6     COUNT OF USERCAT ENTRIES
&LBL.GDEUSERCATCNTERR DS PL6     COUNT OF USERCAT ENTRIES
&LBL.GDEALTVOLUMECNT DS PL6      COUNT OF ALTVOLUME ENTRIES
&LBL.GDEALTVOLUMECNTERR DS PL6   COUNT OF ALTVOLUME ENTRIES
&LBL.GDEALTLIBRARYCNT DS PL6     COUNT OF ALTLIBRARY ENTRIES
&LBL.GDEALTLIBRARYCNTERR DS PL6  COUNT OF ALTLIBRARY ENTRIES
&LBL.GDETOTALCNT    DS   PL6     TOTAL COUNT OF ENTRIES RETURNED
&LBL.GDEERRORCNT    DS   PL6     TOTAL COUNT OF ENTRIES RETURNED
&LBL.GDEDEND    DS 0F
&LBL.GDECAP1ROUT DC F'-1'
&LBL.GDECAP1     DS 0F
&LBL.GDECAP1FUNC DC CL1' '
&LBL.GDECAP1HEX  DC CL1' '
&LBL.GDECAP1DDN  DC CL8' '
&LBL.GDECAP1LEN  DC CL2' '
&LBL.GDECAP1LNBK DC CL2' '
&LBL.GDECAP1ID   DC CL10' '
&LBL.GDECAP1LPP  DC CL2' '
&LBL.GDECAP1NP   DC CL1' '
&LBL.GDECAP1DNP  DC CL1' '
&LBL.GDECAP1RNP  DC CL1' '
&LBL.GDECAP1RTCD DC CL2' '
&LBL.GDECAP2     DC CL133' '
&LBL.GDECAH1     DC CL60' ',CL73'INTERNAL TRACE OF VSAM ROUTINE'
&LBL.GDECBP1ROUT DC F'-1'
&LBL.GDECBP1     DS 0F
&LBL.GDECBP1FUNC DC CL1' '
&LBL.GDECBP1HEX  DC CL1' '
&LBL.GDECBP1DDN  DC CL8' '
&LBL.GDECBP1LEN  DC CL2' '
&LBL.GDECBP1LNBK DC CL2' '
&LBL.GDECBP1ID   DC CL10' '
&LBL.GDECBP1LPP  DC CL2' '
&LBL.GDECBP1NP   DC CL1' '
&LBL.GDECBP1DNP  DC CL1' '
&LBL.GDECBP1RNP  DC CL1' '
&LBL.GDECBP1RTCD DC CL2' '
&LBL.GDECBP3     DC CL133' '
&LBL.GDECBH2     DC CL133' '
&LBL.GDETRACESTART DC C'1'
&LBL.GDETRACEEND   DC C'2'
         GDEAMODE STORAGE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE00000 INITIALIZE THE PARMS                                       *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE00000 GDESUBST
         CLI   &LBL.GDEINITSTATUS,C'C'     STATUS CLOSED?
         BNE   &LBL.GDE00800               SET RETURN CODE - EXIT
         ZAP   &LBL.GDEERRORCNT,=P'0'
         ZAP   &LBL.GDEAIXCNT,=P'0'
         ZAP   &LBL.GDEAIXCNTERR,=P'0'
         ZAP   &LBL.GDECLUSTERCNT,=P'0'
         ZAP   &LBL.GDECLUSTERCNTERR,=P'0'
         ZAP   &LBL.GDEDATACNT,=P'0'
         ZAP   &LBL.GDEDATACNTERR,=P'0'
         ZAP   &LBL.GDEGDGCNT,=P'0'
         ZAP   &LBL.GDEGDGCNTERR,=P'0'
         ZAP   &LBL.GDEGDSCNT,=P'0'
         ZAP   &LBL.GDEGDSCNTERR,=P'0'
         ZAP   &LBL.GDEINDEXCNT,=P'0'
         ZAP   &LBL.GDEINDEXCNTERR,=P'0'
         ZAP   &LBL.GDENONVSAMCNT,=P'0'
         ZAP   &LBL.GDENONVSAMCNTERR,=P'0'
         ZAP   &LBL.GDEALIASCNT,=P'0'
         ZAP   &LBL.GDEALIASCNTERR,=P'0'
         ZAP   &LBL.GDEALTVOLUMECNT,=P'0'
         ZAP   &LBL.GDEALTVOLUMECNTERR,=P'0'
         ZAP   &LBL.GDEALTLIBRARYCNT,=P'0'
         ZAP   &LBL.GDEALTLIBRARYCNTERR,=P'0'
         ZAP   &LBL.GDEALIASCNT,=P'0'
         ZAP   &LBL.GDEALIASCNTERR,=P'0'
         ZAP   &LBL.GDEALTVOLUMECNT,=P'0'
         ZAP   &LBL.GDEALTVOLUMECNTERR,=P'0'
         ZAP   &LBL.GDEPATHCNT,=P'0'
         ZAP   &LBL.GDEPATHCNTERR,=P'0'
         ZAP   &LBL.GDEUSERCATCNT,=P'0'
         ZAP   &LBL.GDEUSERCATCNTERR,=P'0'
         ZAP   &LBL.GDETOTALCNT,=P'0'
         MVC   &LBL.GDEWORKAREAPTR,=XL4'00'
         MVC   &LBL.GDEWORKAREASIZE,=XL4'00'
         MVC   &LBL.GDEFIELDPTR,=XL4'00'
         MVC   &LBL.GDEFIELDSIZE,=XL4'00'
         MVC   &LBL.GDECURRENTPTR,=XL4'00'
         L     R2,&LBL.MAXSTORAGE
         LTR   R2,R2
         BZ    &LBL.GDE00810
         C     R2,=A(1024)
         BL    &LBL.GDE00810
         C     R2,=A(1024*1024)
         BH    &LBL.GDE00810
         STORAGE OBTAIN,LENGTH=(R2)
         ST    R1,&LBL.GDEWORKAREAPTR
         ST    R2,&LBL.GDEWORKAREASIZE
         L     R2,=AL4((8*100)+(CSIENTS-CSIFILTK))
         STORAGE OBTAIN,LENGTH=(R2)
         ST    R1,&LBL.GDEOPTIONSPTR
         ST    R2,&LBL.GDEOPTIONSSIZE
         L     R2,=AL4((8*102))
         STORAGE OBTAIN,LENGTH=(R2)
         ST    R1,&LBL.GDEFIELDPTR
         ST    R2,&LBL.GDEFIELDSIZE
         LA    R2,&LBL.GDEREASONCODE
         ST    R2,&LBL.GDEREASONCDPTR
         XC    &LBL.GDEREASONCODE,&LBL.GDEREASONCODE
         MVI   &LBL.GDEINITSTATUS,C'O'
         L     R8,&LBL.GDEOPTIONSPTR
         USING CSIFIELD,R8
         MVC   CSIFILTK,=CL44' '
         MVC   CSICATNM,=CL44' '
         MVC   CSIRESNM,=CL44' '
         MVC   CSIDTYPD,=CL16' '
         MVI   CSICLDI,C' '
         MVI   CSIRESUM,C' '
         MVI   CSIS1CAT,C'Y'
         MVI   CSIRESRV,X'00'
         MVC   CSINUMEN,=X'0000'
         MVC   CSIFLDNM,=CL8' '
         DROP  R8
         L     R8,&LBL.GDEWORKAREAPTR
         USING CSIRWORK,R8
         MVC   CSIUSRLN,&LBL.GDEWORKAREASIZE
         DROP  R8
         B     &LBL.GDE00900
&LBL.GDE00800 MVC &LBL.RETCODE,=CL2'08'
         B     &LBL.GDE00910
&LBL.GDE00810 MVC &LBL.RETCODE,=CL2'09'
         B     &LBL.GDE00910
&LBL.GDE00900 XR R15,R15
         B     &LBL.GDE00920
&LBL.GDE00910 LA R15,4
         B     &LBL.GDE00920
&LBL.GDE00920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE01000 RETURN THE NEXT ITEM TO THE PROGRAM                        *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE01000 GDESUBST
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        OTHER ROUTINES MUST SET R IF WORKAREA IS READY
*        GDECURRENTPTR SET WE THIS ROUTINE STARTS
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         CLI   &LBL.GDEINITSTATUS,C'R'        STATUS SEARCH?
         BNE   &LBL.GDE01810                  SET RETURN CODE - EXIT
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        GET ADDRESSABILITY
*        R11   IS OUR GENERAL WORK AREA
*        R10   IS PARM AREA
*        R9    IS RETURNED AREA
*        R8    IS OPTIONS AREA
*        R7    IS TARGET APPLICATION FIELDS
*        GDECURRENTPTR MUST BE KEPT UP TO DATE IN THIS ROUTINE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE01001 EQU *
         L     R9,&LBL.GDEWORKAREAPTR         GET WORKAREA ADDRESS
         USING CSIRWORK,R9
         L     R8,&LBL.GDEFIELDPTR            THE FIRST ARE THE CAT
         L     R7,&LBL.GDEOPTIONSPTR          GET OPTIONS ADDRESS
         USING CSIFIELD,R7
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        END OF DATA?
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         L     R5,&LBL.GDECURRENTPTR          GET POINTER INTO WORKAREA
         SR    R5,R9                          ANY MORE ROOM?
         C     R5,CSIUSDLN                    ANY MORE ROOM?
         BL    &LBL.GDE01010                  Y:BRANCH
         GDEGOSUB &LBL.GDE06000               GET THE NEXT WORKAREA
         BNZ   &LBL.GDE01920                  ERROR:BRANCH
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        MOVE BACK FIRST AREA - THE CURRENT CATALOG
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE01010 EQU *
         L     R5,&LBL.GDECURCATPTR           GET LATEST CAT POINTER
         LM    R2,R3,0(R8)                    GET THE ADDRESS OF CAT
         LTR   R2,R2                          ADDRESS OK?
         BZ    &LBL.GDE01810                  NO:BRANCH
         BCTR  R3,R0                          SET LENGTH
         MVC   0(*-*,R2),0(R5)                MOVE CURRENT CAT TO APP
         EX    R3,*-6                         MOVE CURRENT CAT TO APP
         LA    R8,8(R8)                       MOVE TO NEXT AREA
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        MOVE BACK BLANKS TO ALL APP AREAS
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         LA    R5,8(R8)                       MOVE TO NEXT AREA
         LH    R6,CSINUMEN                    HOW MANY ENTRIES HAVE WE
&LBL.GDE01020 EQU *
         LM    R2,R3,0(R5)                    POINT TO APP AREA
         LTR   R2,R2                          ADDRESS OK?
         BZ    &LBL.GDE01820                  NO:BRANCH
         BCTR  R3,R0                          SET LENGTH
         MVC   0(*-*,R2),=CL44' '             MOVE TO APP AREA
         EX    R3,*-6                         MOVE TO APP AREA
         LA    R5,8(R5)                       NEXT ENTRY
         BCT   R6,&LBL.GDE01020               TIL 0 DO US PART
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        MOVE BACK SECOND AREA- THE CURRENT ENTRY
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         L     R5,&LBL.GDECURRENTPTR          GET LATEST ENTRY POINTER
         LM    R2,R3,0(R8)                    GET THE ADDRESS OF ENTRY
         LTR   R2,R2                          ADDRESS OK?
         BZ    &LBL.GDE01830                  NO:BRANCH
         CLI   1(R5),X'F0'                    IS THIS A CATALOG?
         BNE   &LBL.GDE01025                  NO:BRANCH
         ST    R5,&LBL.GDECURCATPTR           SAVE AS CURRENT CAT
         MVC   &LBL.GDECURRENTCAT,2(R5)       SAVE FOR PRINTOUT
         LA    R5,50(R5)                      BYPASS CATLG
         ST    R5,&LBL.GDECURRENTPTR          ANY MORE?
         B     &LBL.GDE01001                   GO FIND OUT!
&LBL.GDE01025 EQU *
         MVC   0(50,R2),0(R5)                 MOVE CURRENT ENTRY TO APP
*                                              WITH ERROR CODES
         GDEGOSUB &LBL.GDE07000               GO COUNT ENTRY TYPE
         TM    0(R5),X'40'                    ERROR?
         BO    &LBL.GDE01040                  NO:BRANCH
         MVC   46(4,R2),=XL4'00'              OVER WRITE RETURN CODE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        MOVE DATA FIELDS TO APP AREA
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         LA    R8,8(R8)                       MOVE TO NEXT AREA
         LH    R6,CSINUMEN                    HOW MANY ENTRIES HAVE WE
         LA    R5,50(R5)                      POINT TO FIRST LENGTH HWD
         LR    R4,R5                          R4 POINTS TO FIRST DATA
         LH    R3,CSINUMEN                    R4 POINTS TO FIRST DATA
         SLL   R3,1                           R4 POINTS TO FIRST DATA
         AR    R4,R3                          R4 POINTS TO FIRST DATA
&LBL.GDE01030 EQU *
         LM    R2,R3,0(R8)                    POINT TO APP AREA
         LH    R1,0(R5)                       SET LENGTH
         LTR   R1,R1                          ANY LENGTH
         BZ    &LBL.GDE01035                  NO-LEAVE BLANKS
         BH    &LBL.GDE01033                  YES-GO MOVE IT
         BCTR  R3,R0                           MOVE * IN
         MVC   0(*-*,R2),=44C'*'               MOVE * IN
         EX    R3,*-6                          MOVE * IN
         B     &LBL.GDE01035                   AND CONTINUE
&LBL.GDE01033 EQU *
         CR    R3,R1                          USE SHORTER LENGTH
         BNH   &LBL.GDE01034                  APP AREA TO SHORT-USE IT
         LR    R3,R1                          APP AREA TO SHORT-USE IT
&LBL.GDE01034 EQU *
         BCTR  R3,R0                          SET LENGTH
         MVC   0(*-*,R2),0(R4)                MOVE TO APP AREA
         EX    R3,*-6                         MOVE TO APP AREA
         LA    R4,0(R1,R4)                    NEXT DATA AREA
&LBL.GDE01035 EQU *
         LA    R8,8(R8)                       NEXT ENTRY
         LA    R5,2(R5)                       NEXT LENGTH AREA
         BCT   R6,&LBL.GDE01030               TIL 0 DO US PART
         L     R5,&LBL.GDECURRENTPTR          GET LATEST ENTRY POINTER
         LA    R5,46(R5)                      CURRENT POINTER
         AH    R5,0(R5)                       CURRENT POINTER
         ST    R5,&LBL.GDECURRENTPTR          UPDATE CURRENT POINTER
         B     &LBL.GDE01900                  AND EXIT
&LBL.GDE01040 EQU *
         L     R5,&LBL.GDECURRENTPTR          GET LATEST ENTRY POINTER
         LA    R5,50(R5)                      CURRENT POINTER
         ST    R5,&LBL.GDECURRENTPTR          UPDATE CURRENT POINTER
         B     &LBL.GDE01900                  AND EXIT
         DROP  R7,R9
&LBL.GDE01800 MVC &LBL.RETCODE,=CL2'08'
         B     &LBL.GDE01910
&LBL.GDE01810 MVC &LBL.RETCODE,=CL2'10'
         B     &LBL.GDE01910
&LBL.GDE01820 MVC &LBL.RETCODE,=CL2'11'
         B     &LBL.GDE01910
&LBL.GDE01830 MVC &LBL.RETCODE,=CL2'12'
         B     &LBL.GDE01910
&LBL.GDE01900 XR R15,R15
         B     &LBL.GDE01920
&LBL.GDE01910 LA R15,4
         B     &LBL.GDE01920
&LBL.GDE01920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE02000 CLEANUP TO EXIT                                            *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE02000 GDESUBST
         CLI   &LBL.GDEINITSTATUS,C'C'        STATUS CLOSED?
         BE    &LBL.GDE02900                  OUR WORK IS DONE
         L     R3,&LBL.GDEWORKAREAPTR
         L     R2,&LBL.GDEWORKAREASIZE
         STORAGE RELEASE,LENGTH=(2),ADDR=(3) FREE KEY STORAGE
         L     R3,&LBL.GDEOPTIONSPTR
         L     R2,&LBL.GDEOPTIONSSIZE
         STORAGE RELEASE,LENGTH=(2),ADDR=(3) FREE KEY STORAGE
         L     R3,&LBL.GDEFIELDPTR
         L     R2,&LBL.GDEFIELDSIZE
         STORAGE RELEASE,LENGTH=(2),ADDR=(3) FREE KEY STORAGE
         MVI   &LBL.GDEINITSTATUS,C'C'
         B     &LBL.GDE02900
&LBL.GDE02900 XR R15,R15
         B     &LBL.GDE02920
&LBL.GDE02910 LA R15,4
         B     &LBL.GDE02920
&LBL.GDE02920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE03000 SEARCH THE CATALOG                                         *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE03000 GDESUBST
         CLI   &LBL.GDEINITSTATUS,C'R'        STATUS SETUP?
         BE    &LBL.GDE03001                  NO-LOGIC ERROR
         CLI   &LBL.GDEINITSTATUS,C'S'        STATUS SETUP?
         BNE   &LBL.GDE03800                  NO-LOGIC ERROR
&LBL.GDE03001  EQU *
         CLI   &LBL.GDE03FIRST,C'1'           FIRST TIME?
         BNE   &LBL.GDE03010                  NO-BRANCH
         MVI   &LBL.GDE03FIRST,C'2'           FIRST TIME CHANGE
         LOAD  EP=IGGCSI00
         ST    R0,&LBL.GDE03CSI
&LBL.GDE03010  EQU *
         L     R15,&LBL.GDE03CSI
         LA    R1,&LBL.CALLINGPARMPTR
         GDEAMODE FORCE31
         CALL  (15)
         ST    R15,&LBL.RETR15
         GDEAMODE FORCE24
         MVC   &LBL.RETREASON,&LBL.GDEREASONCODE
         C     R15,=F'8'
         BNL   &LBL.GDE03810
         LTR   R15,R15
         BZ    &LBL.GDE03020
         CLC   &LBL.RETREASON,=XL4'C6E20464'
         BE    &LBL.GDE03020
         B     &LBL.GDE03810
&LBL.GDE03020  EQU *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        GET ADDRESSABILITY
*        R11   IS OUR GENERAL WORK AREA
*        R10   IS PARM AREA
*        R9    IS RETURNED AREA
*        R8    IS OPTIONS AREA
*        R7    IS TARGET APPLICATION FIELDS
*        GDECURRENTPTR MUST BE KEPT UP TO DATE IN THIS ROUTINE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         L     R9,&LBL.GDEWORKAREAPTR         GET WORKAREA ADDRESS
         USING CSIRWORK,R9
         L     R8,&LBL.GDEFIELDPTR            THE FIRST ARE THE CAT
         L     R7,&LBL.GDEOPTIONSPTR          GET OPTIONS ADDRESS
         USING CSIFIELD,R7
         LA    R6,CSICCATL
         ST    R6,&LBL.GDECURCATPTR
         MVC   &LBL.GDECURRENTCAT,2(R6)
         LA    R6,CSIENTRY
         ST    R6,&LBL.GDECURRENTPTR
         MVI   &LBL.GDEINITSTATUS,C'R'
         B     &LBL.GDE03900
         DROP  R7,R9
&LBL.GDE03800 MVC &LBL.RETCODE,=CL2'08'
         B     &LBL.GDE03910
&LBL.GDE03810 MVC &LBL.RETCODE,=CL2'31'
         B     &LBL.GDE03910
&LBL.GDE03900 XR R15,R15
         B     &LBL.GDE03920
&LBL.GDE03910 LA R15,4
         B     &LBL.GDE03920
&LBL.GDE03920 GDESUBEN
&LBL.GDE03CSI   DC F'-1'
&LBL.GDE03FIRST DC C'1'
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE04000 DO THE SETUP                                               *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE04000 GDESUBST
         CLI   &LBL.GDEINITSTATUS,C'C'        ARE WE CLOSED?
         BE    &LBL.GDE04800                  YES-LOGIC ERROR
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*        GET ADDRESSABILITY
*        R11   IS OUR GENERAL WORK AREA
*        R10   IS PARM AREA
*        R9    IS RETURNED AREA
*        R8    IS TARGET APPLICATION FIELDS
*        R7    IS OPTIONS AREA
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         L     R9,&LBL.GDEWORKAREAPTR         GET WORKAREA ADDRESS
         USING CSIRWORK,R9
         L     R8,&LBL.GDEFIELDPTR            THE FIRST ARE THE CAT
         L     R7,&LBL.GDEOPTIONSPTR          GET OPTIONS ADDRESS
         USING CSIFIELD,R7
         L     R6,&LBL.SETUPDATA
         L     R5,0(R6)
         MVC   CSIFILTK,0(R5)
         L     R5,4(R6)
         MVC   CSICATNM,0(R5)
         MVC   CSIDTYPD,8(R6)
         LH    R4,32(R6)
         STH   R4,CSINUMEN
         MVC   0(4,R8),24(R6)
         MVC   8(4,R8),28(R6)
         MVC   4(4,R8),=F'50'
         MVC   12(4,R8),=F'50'
         LTR   R4,R4
         BNH   &LBL.GDE04020
         LA    R5,36(R6)
         LA    R3,CSIENTS
         LA    R8,16(R8)
&LBL.GDE04010  EQU *
         MVC   0(8,R3),0(R5)
         MVC   0(8,R8),8(R5)
         LA    R3,8(R3)
         LA    R8,8(R8)
         LA    R5,16(R5)
         BCT   R4,&LBL.GDE04010
&LBL.GDE04020  EQU *
         MVI   &LBL.GDEINITSTATUS,C'S'
         B     &LBL.GDE04900
         DROP  R7,R9
&LBL.GDE04800 MVC &LBL.RETCODE,=CL2'08'
         B     &LBL.GDE00910
&LBL.GDE04810 MVC &LBL.RETCODE,=CL2'31'
         B     &LBL.GDE00910
&LBL.GDE04900 XR R15,R15
         B     &LBL.GDE04920
&LBL.GDE04910 LA R15,4
         B     &LBL.GDE04920
&LBL.GDE04920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE05000 REPORT DATA                                                *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE05000 GDESUBST
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05OPEN
         MVC   &LBL.GDECBP3(133),=CL133'0'
         MVC   &LBL.GDECBP3+5(5),=C'NAME:'
         MVC   &LBL.GDECBP3+10(8),=CL8'&NAME'
         MVC   &LBL.GDECBP3+20(8),=C'CATALOG:'
         MVC   &LBL.GDECBP3+28(44),&LBL.GDECURRENTCAT
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVC   &LBL.GDECBP3(133),=CL133' '
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05ALIAS),&LBL.GDE05ALIAS
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEALIASCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEALIASCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEALIASCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEALIASCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05AIX),&LBL.GDE05AIX
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEAIXCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEAIXCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEAIXCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEAIXCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05CLUSTER),&LBL.GDE05CLUSTER
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDECLUSTERCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDECLUSTERCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDECLUSTERCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDECLUSTERCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05DATA),&LBL.GDE05DATA
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEDATACNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEDATACNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEDATACNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEDATACNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05GDG),&LBL.GDE05GDG
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEGDGCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEGDGCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEGDGCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEGDGCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05GDS),&LBL.GDE05GDS
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEGDSCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEGDSCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEGDSCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEGDSCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05INDEX),&LBL.GDE05INDEX
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEINDEXCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEINDEXCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEINDEXCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEINDEXCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05NONVSAM),&LBL.GDE05NONVSAM
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDENONVSAMCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDENONVSAMCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDENONVSAMCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDENONVSAMCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05PATH),&LBL.GDE05PATH
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEPATHCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEPATHCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEPATHCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEPATHCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05USERCAT),&LBL.GDE05USERCAT
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEUSERCATCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEUSERCATCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEUSERCATCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEUSERCATCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
       MVC &LBL.GDECBP3+13(L'&LBL.GDE05ALTLIBRARY),&LBL.GDE05ALTLIBRARY
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEALTLIBRARYCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEALTLIBRARYCNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEALTLIBRARYCNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEALTLIBRARYCNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(59),=59C'.'
       MVC &LBL.GDECBP3+13(L'&LBL.GDE05ALTVOLUME),&LBL.GDE05ALTVOLUME
         MVC   &LBL.GDECBP3+51(2),=CL2'OK'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEALTVOLUMECNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEALTVOLUMECNT
         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'
         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK
         OI    &LBL.GDEALTVOLUMECNTERR+5,X'0F'
         ED    &LBL.GDECBP3+76(12),&LBL.GDEALTVOLUMECNTERR
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVC   &LBL.GDECBP3(133),=CL133'-'
         MVC   &LBL.GDECBP3+13(52),=52C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05ERROR),&LBL.GDE05ERROR
         MVC   &LBL.GDECBP3+43(10),=10C'.'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDEERRORCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDEERRORCNT
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         MVI   &LBL.GDECBP3,C'-'
         MVC   &LBL.GDECBP3+13(52),=52C'.'
         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05TOTAL),&LBL.GDE05TOTAL
         MVC   &LBL.GDECBP3+43(10),=10C'.'
         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK
         OI    &LBL.GDETOTALCNT+5,X'0F'
         ED    &LBL.GDECBP3+53(12),&LBL.GDETOTALCNT
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05CLOSE
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE05900 GDESUBEN
&LBL.GDE05OPEN  DC   C'0'
&LBL.GDE05WRITE DC   C'1'
&LBL.GDE05CLOSE DC   C'7'
&LBL.GDE05MASK  DC   XL12'4B2020202020202020202120'
&LBL.GDE05AIX   DC   C'ALTERNATE INDEX COUNT (G)'
&LBL.GDE05CLUSTER DC C'CLUSTER COUNT (C)'
&LBL.GDE05DATA  DC   C'DATA COMPONENT COUNT (D)'
&LBL.GDE05GDG   DC   C'GENERATION DATA GROUP COUNT (B)'
&LBL.GDE05GDS   DC   C'GENERATION DATA SET COUNT (H)'
&LBL.GDE05INDEX DC   C'INDEX COMPONEN COUNT (I)'
&LBL.GDE05NONVSAM  DC C'NONVSAM COUNT (A)'
&LBL.GDE05ALTLIBRARY DC C'ALT LIBRARY COUNT (L)'
&LBL.GDE05ALTVOLUME  DC C'ALT VOLUME COUNT (V)'
&LBL.GDE05ALIAS      DC C'ALIAS COUNT (X)'
&LBL.GDE05PATH  DC   C'PATH COUNT (R)'
&LBL.GDE05USERCAT DC C'USERCATALOG COUNT (U)'
&LBL.GDE05TOTAL DC   C'TOTAL COUNT'
&LBL.GDE05ERROR DC   C'ERROR COUNT'
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE06000 GET NEXT WORKAREA DURING NEXTITEM PROCESSING              *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE06000 GDESUBST
         L     R7,&LBL.GDEOPTIONSPTR     GET OPTIONS ADDRESS
         USING CSIFIELD,R7
         CLI   CSIRESUM,C'Y'             CAN WE RESUME?
         BE    &LBL.GDE06010             YES - BRANCH
         MVC   &LBL.RETCODE,=CL2'04'     END OF DATA
         B     &LBL.GDE06910             YES - BRANCH
&LBL.GDE06010  EQU *
         GDEGOSUB &LBL.GDE03000          RESUME READS
         B     &LBL.GDE06920             AND EXIT
         DROP  R7
&LBL.GDE06810  EQU *
         MVC   &LBL.RETCODE,=CL2'08'     LOGIC ERROR
         B     &LBL.GDE06910             YES - BRANCH
&LBL.GDE06900 XR R15,R15
         B     &LBL.GDE06920             AND EXIT
&LBL.GDE06910 LA R15,4
         B     &LBL.GDE06920             AND EXIT
&LBL.GDE06920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE07000 COUNT RECORD TYPE                                        *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE07000 GDESUBST
*        1(R5) POINTS TO RECORD TYPE
*        0(R5) POINTS TO RECORD FLAGS
         LA    R4,&LBL.GDEAIXCNT
         CLI   1(R5),C'G'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDECLUSTERCNT
         CLI   1(R5),C'C'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEDATACNT
         CLI   1(R5),C'D'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEGDGCNT
         CLI   1(R5),C'B'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEGDSCNT
         CLI   1(R5),C'H'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEINDEXCNT
         CLI   1(R5),C'I'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDENONVSAMCNT
         CLI   1(R5),C'A'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEALTLIBRARYCNT
         CLI   1(R5),C'L'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEALTVOLUMECNT
         CLI   1(R5),C'W'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEPATHCNT
         CLI   1(R5),C'R'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEALIASCNT
         CLI   1(R5),C'X'
         BE    &LBL.GDE07010
         LA    R4,&LBL.GDEUSERCATCNT
         CLI   1(R5),C'U'
         BE    &LBL.GDE07010
         B     &LBL.GDE07030
&LBL.GDE07010 EQU *
         TM    0(R5),X'40'
         BO    &LBL.GDE07020
         AP    0(6,R4),=P'1'
         AP    &LBL.GDETOTALCNT,=P'1'
         B     &LBL.GDE07900
&LBL.GDE07020 EQU *
         AP    6(6,R4),=P'1'
&LBL.GDE07030 EQU *
         AP    &LBL.GDEERRORCNT,=P'1'
         B     &LBL.GDE07900
&LBL.GDE07800  EQU *
         MVC   &LBL.RETCODE,=CL2'08'     LOGIC ERROR
         B     &LBL.GDE07910             YES - BRANCH
&LBL.GDE07900 XR R15,R15
         B     &LBL.GDE07920             AND EXIT
&LBL.GDE07910 LA R15,4
         B     &LBL.GDE07920             AND EXIT
&LBL.GDE07920 GDESUBEN
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE0B000 PROCESS TRACING DISPLAY                                    *
* LOGIC OF THIS ROUTINE IS                                            *
*   IF OPEN CALL                                                      *
*      IF BEFORE PICTURE                                              *
*         OPEN PRINT FILE                                             *
*      END                                                            *
*   END                                                               *
*   PRINT DATA AREA                                                   *
*   IF CLOSE CALL                                                     *
*      IF AFTER CALL                                                  *
*         CLOSE PRINT FILE                                            *
*      END                                                            *
*   END                                                               *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE0B000 GDESUBST
         CLI   &LBL.GDE0BFST,C'O'
         BNE   &LBL.GDE0B001
         CP    &LBL.GDEERRORCNT,&LBL.ERRORCNTMAX
         BH    &LBL.GDE0B900
&LBL.GDE0B001  EQU   *
*  SAVE CALLING REGISTER
         L     R2,0(R1)
*  OPEN CALL AND BEFORE PICTURE NO BRANCH AROUND
         CLI   0(R2),C'1'                    BEFORE?
         BNE   &LBL.GDE0B010                 N:BRANCH
         CLC   &LBL.COMMAND,=CL2'00'         OPEN CALL?
         BNE   &LBL.GDE0B010                 N:BRANCH
*  OPEN THE PRINTER FILE
&LBL.GDE0B005  EQU   *
         ZAP   &LBL.GDECAP1LPP,=P'53'
         MVI   &LBL.GDECAP1NP,C'1'
         MVI   &LBL.GDECAP1DNP,C'1'
         MVI   &LBL.GDECAP1RNP,C'1'
         MVI   &LBL.GDECAP1FUNC,C'1'
         MVI   &LBL.GDECAP1HEX,C'8'
         MVC   &LBL.GDECAP1LEN,=H'512'
         MVC   &LBL.GDECAP1LNBK,=H'512'
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'
         LOAD  EP=GDE001CA
         ST    R0,&LBL.GDECAP1ROUT
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2),VL
         MVI   &LBL.GDE0BFST,C'O'
* PRINT THE DATA AREA
&LBL.GDE0B010 CLI   &LBL.GDE0BFST,C'C'
         BE    &LBL.GDE0B005
         MVI   &LBL.GDECAP1FUNC,C'2'
        MVC   &LBL.GDECAP2(45),=CL45'         INTERNAL TRACE AREA'
         MVC   &LBL.GDECAP2+29(16),=CL16'- BEFORE DISPLAY'
         CLI   0(R2),C'1'
         BE    *+10
         MVC   &LBL.GDECAP2+29(16),=CL16'- AFTER DISPLAY'
         MVC   &LBL.GDECAP2+0(8),=CL8'&NAME'
         MVI   &LBL.GDECAP1HEX,C'8'
         MVC   &LBL.GDECAP1LEN,=AL2(45)
         MVC   &LBL.GDECAP1LNBK,=AL2(45)
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL
         MVI   &LBL.GDECAP1HEX,C'1'
         MVC   &LBL.GDECAP2(133),=CL133'            CALLING PARMS'
         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL
         MVC   &LBL.GDECAP1LEN,=AL2(&LBL.DSECT_LENGTH)
         MVC   &LBL.GDECAP1LNBK,=AL2(&LBL.DSECT_LENGTH)
         MVI   &LBL.GDECAP1HEX,C'7'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,(R10),&LBL.GDECAH1),VL
         MVI   &LBL.GDECAP1HEX,C'1'
         MVC   &LBL.GDECAP2(133),=CL133'            INTERNAL WORKAREA'
         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL
         MVC   &LBL.GDECAP1LEN,=AL2(&LBL.GDEDEND-&LBL.GDEDSECT)
         MVC   &LBL.GDECAP1LNBK,=AL2(&LBL.GDEDEND-&LBL.GDEDSECT)
         MVI   &LBL.GDECAP1HEX,C'7'
         LA    R9,&LBL.GDEDSECT     SET ARG ADDRESS
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,(R9),&LBL.GDECAH1),VL
         CLI   &LBL.GDEINITSTATUS,C'C'
         BE    &LBL.GDE0B020
         MVI   &LBL.GDECAP1HEX,C'1'
      MVC   &LBL.GDECAP2(133),=CL133'            OPTIONS CONTROL BLOCK'
         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL
         L     R8,&LBL.GDEOPTIONSPTR
         USING CSIFIELD,R8
         LA    R7,CSIENTS-CSIFIELD
         LH    R6,CSINUMEN
         DROP  R8
         SLL   R6,3               TIMES 8
         AR    R7,R6
         STCM  R7,B'0011',&LBL.GDECAP1LEN
         STCM  R7,B'0011',&LBL.GDECAP1LNBK
         L     R9,&LBL.GDEOPTIONSPTR     GET MOVE FROM ADDRESS
         MVI   &LBL.GDECAP1HEX,C'7'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,(R9),&LBL.GDECAH1),VL
         CLI   &LBL.GDEINITSTATUS,C'R'
         BNE   &LBL.GDE0B020
         MVI   &LBL.GDECAP1HEX,C'1'
         MVC   &LBL.GDECAP2(133),=CL133'            WORKAREA HEADER '
         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL
         MVC   &LBL.GDECAP1LEN,=H'64'
         MVC   &LBL.GDECAP1LNBK,=H'64'
         L     R9,&LBL.GDEWORKAREAPTR   MOVE FROM ADDRESS
         MVI   &LBL.GDECAP1HEX,C'7'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,(R9),&LBL.GDECAH1),VL
         MVI   &LBL.GDECAP1HEX,C'1'
   MVC   &LBL.GDECAP2(133),=CL133'            WORKAREA CURRENT POINTER'
         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'        X
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL
         MVC   &LBL.GDECAP1LEN,=H'0'
         MVC   &LBL.GDECAP1LNBK,=H'0'
         L     R9,&LBL.GDEWORKAREAPTR         GET WORKAREA ADDRESS
         USING CSIRWORK,R9
         L     R5,&LBL.GDECURRENTPTR
         SR    R5,R9                          ANY LEFT?
         C     R5,CSIUSDLN
         BH    &LBL.GDE0B015                  Y:BRANCH
         DROP  R9
         L     R5,&LBL.GDECURRENTPTR
         TM    0(R5),X'40'
         BO    &LBL.GDE0B012
         LA    R4,46
         AH    R4,46(R5)
         STCM  R4,B'0011',&LBL.GDECAP1LEN
         STCM  R4,B'0011',&LBL.GDECAP1LNBK
         B     &LBL.GDE0B015
&LBL.GDE0B012  EQU *
         MVC   &LBL.GDECAP1LEN,=H'50'
         MVC   &LBL.GDECAP1LNBK,=H'50'
&LBL.GDE0B015  EQU *
         L     R9,&LBL.GDECURRENTPTR    MOVE FROM ADDRESS
         MVI   &LBL.GDECAP1HEX,C'7'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,(R9),&LBL.GDECAH1),VL
*  CLOSE CALL AND AFTER PICTURE NO BRANCH AROUND
&LBL.GDE0B020 CLC   &LBL.COMMAND,=CL2'70'
         BNE   &LBL.GDE0B900
         CLI   0(R2),C'2'                    AFTER?
         BNE   &LBL.GDE0B900                 N:BRANCH
*  CLOSE THE PRINTER FILE
         MVI   &LBL.GDECAP1FUNC,C'3'
         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'
         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'
         L     R15,&LBL.GDECAP1ROUT
         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2),VL
         MVI   &LBL.GDE0BFST,C'C'
         B     &LBL.GDE0B900
&LBL.GDE0B900 LA    R15,0
         B     &LBL.GDE0B920
&LBL.GDE0B910 LA    R15,4
         B     &LBL.GDE0B920
&LBL.GDE0B920 GDESUBEN
&LBL.GDE0BFST DC  C'C'
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDE0C000 PROCESS STATISTICAL REPORT                                 *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
&LBL.GDE0C000 GDESUBST
         L     R2,0(R1)
         CLI   0(R2),C'0'
         BE    &LBL.GDE0C010
         CLI   0(R2),C'7'
         BE    &LBL.GDE0C030
         B     &LBL.GDE0C020
&LBL.GDE0C010 ZAP   &LBL.GDECBP1LPP,=P'53'
         MVI   &LBL.GDECBP1NP,C'1'
         MVI   &LBL.GDECBP1DNP,C'1'
         MVI   &LBL.GDECBP1RNP,C'1'
         MVI   &LBL.GDECBP1FUNC,C'1'
         MVI   &LBL.GDECBP1HEX,C'8'
         MVC   &LBL.GDECBP1LEN,=H'512'
         MVC   &LBL.GDECBP1LNBK,=H'512'
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT01ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT01'
         LOAD  EP=GDE001CA
         ST    R0,&LBL.GDECBP1ROUT
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP3),VL
         B     &LBL.GDE0C900
&LBL.GDE0C020 MVI   &LBL.GDECBP1FUNC,C'2'
         MVI   &LBL.GDECBP1HEX,C'1'
         MVC   &LBL.GDECBP1LEN,=AL2(133)
         MVC   &LBL.GDECBP1LNBK,=AL2(133)
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT01ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT01'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP3,&LBL.GDECBH2),VL
         B     &LBL.GDE0C900
&LBL.GDE0C030 MVI   &LBL.GDECBP1FUNC,C'3'
         MVC   &LBL.GDECBP1ID,=CL10'&ROUT01ID'
         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT01'
         L     R15,&LBL.GDECBP1ROUT
         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP3),VL
         B     &LBL.GDE0C900
&LBL.GDE0C900 LA    R15,0
         B     &LBL.GDE0C920
&LBL.GDE0C910 LA    R15,4
         B     &LBL.GDE0C920
&LBL.GDE0C920 GDESUBEN
         DROP  R10,R11
         AIF   (&GDECSI).Z0010
&GDECSI SETB   1
         COPY  IGGCSINA
         COPY  IGGCSIWA
GDECSI   CSECT
         DC    C'GDECSI -01.01                '
.*
.*     TYPE=IOROUTINE
.*
.**********************************************************************
         AGO    .Z0010
.Z0010   ANOP
         MEXIT
.Z0020   ANOP
         MNOTE 8,'*** TYPE VALUE UNKNOWN, CHECK TYPE KEYWORK ***'
         MEND
         MACRO
&LABEL   GDECSIA &TRACE=NO
         GBLC  &LBL
&LABEL   MVC   &LBL.RETCODE,=CL2'00'
         AIF   ('&TRACE' EQ 'NO').A0010
         AIF   ('&TRACE' EQ 'YES').A0020
         AIF   ('&TRACE' EQ 'ERROR').A0030
         MNOTE 0,'TRACE MUST BE YES, NO, OR ERROR - NO ASSUMED'
.A0010   ANOP
         MVC   &LBL.TRACE,=CL1'0'
         AGO   .A0040
.A0020   ANOP
         MVC   &LBL.TRACE,=CL1'1'
         AGO   .A0040
.A0030   ANOP
         MVC   &LBL.TRACE,=CL1'2'
         AGO   .A0040
.A0040   ANOP
         MEND
         MACRO
&LABEL   GDECSIB &OK=,                                                 X
               &NOTOK=,                                                X
               &EODAD=,                                                X
               &PARMLIST=
         GBLC  &LBL,&ROUTCA
         L     R15,=V(&ROUTCA)
         CALL  (15),((R1)),VL
         AIF   ('&PARMLIST' EQ '').A0010
&LABEL   LA    R1,&PARMLIST
         AGO   .A0020
.A0010   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.A0020   ANOP
         AIF   ('&OK' EQ '').A0050
         CLC   &LBL.RETCODE,=CL2'00'
         BE    &OK
.A0050   ANOP
         AIF   ('&NOTOK' EQ '').A0060
         CLC   &LBL.RETCODE,=CL2'08'
         BNL   &NOTOK
.A0060   ANOP
         AIF   ('&EODAD' EQ '').A0070
         CLC   &LBL.RETCODE,=CL2'04'
         BE    &EODAD
.A0070   ANOP
         DROP  R1
         MEND
* ------------------------------------------------------------------- *
*                                                                     *
* SHOW RLS STATUS OF A DATASET IN BATCH                               *
*                                                                     *
* CONTROL CARDS                                                       *
*   SHOW=<DSNAME>      ASK THE STATUS OF THE RLS STATUS AND SHOW      *
*                      VALUES IN THE OUTPUT REPORT                    *
*   LEVEL=<CATALOG FILTER> LOOK IN THE CATALOG FOR ALL CLUSTERS THAT  *
*                      MATCH THE FILTER                               *
* DDNAMES                                                             *
*   GDERLSA            INPUT CONTROL CARDS                            *
*   GDERLS01           STATUS REPORT OF CONTROL CARDS <OPTIONAL>      *
*   GDERLS02           OUTPUT FROM THE CALL           <OPTIONAL>      *
*   GDERLS03           TRACE OF CALL TO ROUTINES      <OPTIONAL>      *
*                                                                     *
* EXAMPLE JCL                                                         *
*   //GDERLSA  DD  *                                                  *
*   SHOW=MY.BWO.DATASET                                               *
*   LEVEL=MY.BWO.**                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
         GDECSI  TYPE=DSECT,NAME=CATALG,PROGRAM=GDERLS,PROGRAMID=CA,   X
               STATID=06,TRACEID=06
         GDETABLE TYPE=DSECT,NAME=RETRSN,PROGRAM=GDERLS,               X
               STATID=06,TRACEID=06,PROGRAMID=CB
         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=STATUS,              X
               REPORTID=01
         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=REPORT,              X
               REPORTID=02
         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=PARMDP,              X
               REPORTID=03
         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=BWOPRT,              X
               REPORTID=04
         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=RETRSN,              X
               REPORTID=05
* ------------------------------------------------------------------- *
* PROGRAM LOGIC STARTS HERE                                           *
* ------------------------------------------------------------------- *
GDERLSBT GDESTART R12,R11
         L     R10,=A(GDEDSECT)
         USING GDEDSECT,R10
         GDEGOSUB PROC1000
         GDEGOSUB PROC2000
         BNZ   MAIN9010
         GDEGOSUB PROC3000
MAIN9000 XR    R15,R15
         B     MAIN9020
MAIN9010 LA    R15,4
         B     MAIN9020
MAIN9020 GDEEXIT
         LTORG
GDEDSECT DS   0D
IN1REC   DS    CL80
GDERLSA DCB    DDNAME=GDERLSA,MACRF=(GM),DSORG=PS,                     X
               RECFM=FB,LRECL=80,EODAD=PROC4910
CURRENT_COMMAND  DC     CL5' '
CURRENT_DSN      DC     CL44' '
CURRENT_FILTER   DC     CL44' '
CURRENT_DSNLEN   DC     AL4(0)
REPORT01_SW      DC     C'?'
REPORT02_SW      DC     C'?'
REPORT03_SW      DC     C'?'
***********************************************************************
* TABLE RECORD AREAS
***********************************************************************
T01              DS    0CL8
T01RETCODE       DS     CL4
T01RSNCODE       DS     CL4
T01RECLEN        EQU    *-T01
***********************************************************************
* PARMLIST FOR IGWARLS CALL
***********************************************************************
IGWARLS_PARMLIST DS   13A
IGWARLS_RETCODE  DS     F    0  RETURN CODE
IGWARLS_RSNCODE  DS     F    4  IGWARLS_RSNCODE
IGWARLS_PROBDET  DS     D    8  PROBLEM DETERMINATION CODE
IGWARLS_DSNLEN   DS     F    12 DATA SET NAME LENGTH
IGWARLS_DSN      DS     CL44 16 DATA SET NAME
IGWARLS_RECOVERYSTATUS  DS   F  20
IGWARLS_LOGTYPE         DS   F  24
IGWARLS_LOGSTREAMIDLEN  DS   F  28
IGWARLS_LOGSTREAMID     DS   CL44 32
IGWARLS_RLS_RECOVERY_TIMESTAMP_UTC    DS  CL8  36
IGWARLS_RLS_RECOVERY_TIMESTAMP_LOCAL  DS  CL8  40
IGWARLS_VSAM_QUIESCED   DS  F                 44
IGWARLS_BWO             DS  F                 48
***********************************************************************
* IGWARLS_LOGTYPE NOTES
*             F'1'        LOG NOT ON DEFINE CLUSTER STATEMENT
*             F'2'        LOG=NONE
*             F'3'        LOG=UNDO
*             F'4'        LOG=ALL
***********************************************************************
* IGWARLS_RECOVERYSTATUS NOTES
*             F'0'        RLS RECOVERY IS NOT PENDING FOR SPHERE
*             F'1'        RLS RECOVERY IS PENDING FOR VSAM SPHERE
***********************************************************************
* IGWARLS_VSAM_QUIESCED NOTES
*             F'0'        THE SPHERE IS NOT MARKED VSAM_QUIESCED
*             F'1'        THE SPHERE IS MARKED VSAM_QUIESCED
***********************************************************************
* IGWARLS_BWO NOTES
*             F'1'        BWO PARAMETER IS UNDEFINED
*             F'2'        BWO=TYPECICS PROCESSING ALLOWED
*             F'3'        BWO=NO BWO PROCESSING IS NOT ALLOWED
*             F'4'        BWO=TYPEIMS PROCESSING ALLOWED
*             F'5'        BWO=TYPEOTHER PROCESSING ALLOWED
***********************************************************************
         DS   0D
CONVTOD  DC   CL16' '
***********************************************************************
* TIME MACRO WORK AREA
* FIRST 8 BYTES TIME OF DAY HHMMSSTHMIJU0000
* NEXT R BYTES IT DATE YYYYMMDD00
* LAST FOUR ARE ZERO
***********************************************************************
***********************************************************************
* PARMLIST FOR IGWABWO CALL
***********************************************************************
IGWABWO_PARMLIST DS   10A
IGWABWO_RETCODE  DS     F    0  RETURN CODE
IGWABWO_RSNCODE  DS     F    4  IGWABWO_RSNCODE
IGWABWO_PROBDET  DS     D    8  PROBLEM DETERMINATION CODE
IGWABWO_FUNCTON  DS     F    12 FUNCTION
IGWABWO_DSNLEN   DS     F    16 DATA SET NAME LENGTH
IGWABWO_DSN      DS     CL44 20 DATA SET NAME
IGWABWO_SELECT   DC     F'3' 24 INTERESTED IN BWO FLAGS & RECOV POINT
IGWABWO_BWOFLAGS DS    3F    28 BWO INDICATOR FLAGS
                 ORG            IGWABWO_BWOFLAGS
IGWABWO_BWOFLAG1 DS     F       BWO INDICATOR 1
IGWABWO_BWOFLAG2 DS     F       BWO INDICATOR 2
IGWABWO_BWOFLAG3 DS     F       BWO INDICATOR 3
                 ORG
IGWABWO_BWOTIME  DS     D    32 BWO RECOVERY POINT TIME
IGWABWO_RESERVED DS    2D    36 RESERVED
***********************************************************************
* IGWABWO_FUNCTION NOTEST
*             F'1'        READ THE VALUES
*             F'2'        SET THE VALUSE
***********************************************************************
IGWABWO_READ     EQU    0       READ
IGWABWO_SET      EQU    1       SET
***********************************************************************
* IGWABWO_SELECT  NOTES
*             F'1'        INTERESTED IN BWO FLAGS
*             F'2'        INTERESTED IN BWO RECOVERY POINT
*             F'3'        INTERESTED IN BWO FLAGS & RECOV POINT
***********************************************************************
IGWABWO_WORKAREA DS CL9
IGWABWO_HEXTABLE DC C'0123456789ABCDEF'
IGWABWO_DATEANDTIME  DC   2F'0'
*  1F    0CYYDDDF
*        C = 00 FOR 1900
*        C = 01 FOR 2000
*        F IS SIGN
*  1F    HHMMSSTF
*        F IS SIGN
***********************************************************************
TIME_STORAGE   DC   4F'0'
*  2F    HHMMSSTHMIJU0000  FOR TIME
*  1F    0YYYYDDD
*  1F    RESERVED
***********************************************************************
***********************************************************************
*
*  OUTPUT DETAIL LINES
*
*
***********************************************************************
PROC1DL1 DC    CL133'0'
OUT1_DSNAME    EQU   PROC1DL1+1,44
OUT1_RECOVERY  EQU   PROC1DL1+46,14
OUT1_LOGTYPE   EQU   PROC1DL1+61,12
OUT1_BWO       EQU   PROC1DL1+74,3
OUT1_UTCTIME   EQU   PROC1DL1+79,24
OUT1_RETCODE   EQU   PROC1DL1+104,8
OUT1_BWODATE   EQU   PROC1DL1+113,10
PROC1DL2 DC    CL133' '
OUT1_LOGSTRM   EQU   PROC1DL2+1,44
OUT1_BWOFLAGS  EQU   PROC1DL2+46,14
OUT1_QUIESCED  EQU   PROC1DL2+61,12
OUT1_LCLTIME   EQU   PROC1DL2+79,24
OUT1_RSNCODE   EQU   PROC1DL2+104,8
OUT1_BWOTIME   EQU   PROC1DL2+113,10
***********************************************************************
         GDEPRINT TYPE=PARMLIST,NAME=STATUS,                           X
               REPORTID=01
         GDEPRINT TYPE=PARMLIST,NAME=REPORT,                           X
               REPORTID=02
         GDEPRINT TYPE=PARMLIST,NAME=PARMDP,                           X
               REPORTID=03
         GDEPRINT TYPE=PARMLIST,NAME=BWOPRT,                           X
               REPORTID=04
         GDEPRINT TYPE=PARMLIST,NAME=RETRSN,                           X
               REPORTID=05
         GDECSI   TYPE=PARMLIST,NAME=CATALG
         GDETABLE TYPE=PARMLIST,NAME=RETRSN
***********************************************************************
*                                                                     *
* INITIAL SETUP LOGIC                                                 *
*                                                                     *
***********************************************************************
PROC1000 GDESUBST
         OPEN  (GDERLSA,INPUT)
         MVI   REPORT01_SW,C'N'
         GDEDDN GDERLS01,FOUND=PROC1010,NOTFOUND=PROC1020
PROC1010 MVI   REPORT01_SW,C'Y'
         GDEPRINT TYPE=OPEN,NAME=STATUS,                               X
               TITLE='CONTROL STATEMENT PROCESSING FOR GDERLSBT',      X
               HEADINGS=(PROC1HL1)
PROC1020 MVI   REPORT02_SW,C'N'
         GDEDDN GDERLS02,FOUND=PROC1030,NOTFOUND=PROC1040
PROC1030 MVI   REPORT02_SW,C'Y'
         GDEPRINT TYPE=OPEN,NAME=REPORT,                               X
               TITLE='RLS STATUE REPORT',                              X
               HEADINGS=(PROC1HL2,PROC1HL3)
PROC1040 MVI   REPORT03_SW,C'N'
         GDEDDN GDERLS03,FOUND=PROC1050,NOTFOUND=PROC1060
PROC1050 MVI   REPORT03_SW,C'Y'
         GDEPRINT TYPE=OPEN,NAME=PARMDP,                               X
               TITLE='RLS CALLING TRACING REPORT',                     X
               HEADINGS=(PROC1HL4,PROC1HL5)
PROC1060 GDECSI TYPE=INITIALIZE,NAME=CATALG,TRACE=ERROR
PROC1900 GDESUBEN
*                   ----+----1----+----2----+----3----+----4----+----5
PROC1HL1 DC    CL15'0'
         DC    CL52'/----------------- CONTROL CARD -----------------/'
         DC    CL42'/--------------- STATUS ---------------/'
         DC    CL24' '
PROC1HL2 DC    CL133'0/------------- DATA SET NAME --------------/ /-RLX
               S RCVRY--/ /-LOG TYPE-/ BWO  /----UTC TIME STAMP----/ REX
               T-CODE /-BWO RV-/          '
PROC1HL3 DC    CL133' /------------- LOG STREAM ID --------------/ /-BWX
               O FLAGS--/ /-QUIESCED-/ FLGS /---LOCAL TIME STAMP---/ RSX
               N-CODE /-DT&&TM--/          '
PROC1HL4 DC    CL133'0DATE  TIME ADDRESS         HEX DATA              X
                                                                  DISPLX
               AY DATA                    '
PROC1HL5 DC    CL133' ---------- -------         ----------------------X
               -------------------------------------------------- -----X
               ---------------------------'
***********************************************************************
*                                                                     *
* CALL READ FILE, CALL WRITE MESSAGES, TRACE IF WE NEED TO            *
*                                                                     *
***********************************************************************
PROC2000 GDESUBST
PROC2010 GDEGOSUB PROC4000
         BNZ   PROC2900
         GDEGOSUB PROC5000
         B     PROC2010
PROC2900 LA    R15,0
         B     PROC2920
PROC2910 LA    R15,4
         B     PROC2920
PROC2920 GDESUBEN
***********************************************************************
*                                                                     *
* TERMINATION LOGIC                                                   *
*                                                                     *
***********************************************************************
PROC3000 GDESUBST
         CLOSE (GDERLSA,)
         CLI   REPORT01_SW,C'N'
         BE    PROC3010
         MVC   PROC4_PRINT,=CL133' END OF PROCESSING '
         GDEGOSUB SERV2000,PROC3_PRINT
         GDEGOSUB SERV4000
         GDEGOSUB SERV6000
         GDEPRINT ,NAME=STATUS,TYPE=CLOSE
PROC3010 CLI   REPORT02_SW,C'N'
         BE    PROC3020
         GDEPRINT ,NAME=REPORT,TYPE=CLOSE
PROC3020 CLI   REPORT03_SW,C'N'
         BE    PROC3030
         GDEPRINT ,NAME=PARMDP,TYPE=CLOSE
PROC3030 GDECSI TYPE=CLEANUP,NAME=CATALG,TRACE=NO
         GDEDDN GDERLS06,FOUND=PROC3040,NOTFOUND=PROC3050
PROC3040 GDECSI TYPE=REPORT,NAME=CATALG,TRACE=NO
         GDETABLE ,TYPE=REPORT,NAME=RETRSN
PROC3050 GDETABLE ,TYPE=DELETE,NAME=RETRSN
PROC3900 GDESUBEN
PROC3_PRINT    DC  CL133' '
***********************************************************************
*                                                                     *
* READ INPUT CARDS AND PARSE                                          *
*                                                                     *
***********************************************************************
PROC4000 GDESUBST
         CLI   PROC4_FIRSTTIME,C'Y'
         BE    PROC4002
PROC4001 MVC   PROC4_PRINT,=CL133'0'
         GDEGOSUB SERV2000,PROC4_PRINT
PROC4002 MVI   PROC4_FIRSTTIME,C'N'
         GET   GDERLSA,IN1REC
         MVC   PROC4_PRINT,=CL133' CONTROL CARD=>'
         MVC   PROC4_PRINT+15(50),IN1REC
         CLC   =C'SHOW=',IN1REC
         BE    PROC4010
         CLC   =C'LEVEL=',IN1REC
         BE    PROC4020
PROC4005 MVC   PROC4_PRINT+110(23),=CL23'<===== ERROR '
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4001
***********************************************************************
* SHOW= SYNTAX, STATUS CHECKING                                       *
***********************************************************************
PROC4010 MVC   CURRENT_DSN,IN1REC+5
         MVC   CURRENT_COMMAND,=CL5'SHOW'
         MVC   PROC4_PRINT+67(40),=CL40'SHOW WITH COMMAND DSNAME  '
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4900
***********************************************************************
* LEVEL= SYNTAX, STATUS CHECKING                                      *
***********************************************************************
PROC4020 MVC   CURRENT_FILTER,IN1REC+6
         MVC   CURRENT_COMMAND,=CL5'LEVEL'
         MVC   PROC4_PRINT+67(40),=CL40'LEVEL WITH COMMAND FILTER  '
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
PROC4900 LA    R15,0
         B     PROC4920
PROC4910 LA    R15,4
         B     PROC4920
PROC4920 GDESUBEN
PROC4_PRINT    DC  CL133' '
PROC4_FIRSTTIME    DC   C'Y'
***********************************************************************
*                                                                     *
* PROCESS COMMANDS                                                    *
*                                                                     *
***********************************************************************
PROC5000 GDESUBST
         CLC   CURRENT_COMMAND,=CL5'SHOW'
         BE    PROC5100
***********************************************************************
* PROCESS LEVEL COMMAND                                               *
***********************************************************************
         GDECSI TYPE=SETUP,NAME=CATALG,TRACE=NO,NOTOK=PROC5800,        X
               RETCATALOG=PROC5_RMC,                                   X
               RETENTRY=PROC5_REN,                                     X
               FIELDS=((ENTYPE,PROC5_TYP)),                            X
               FILTER=CURRENT_FILTER,                                  X
               CATALOG=PROC5_MCT,ENTRYTYPES='C'
         GDECSI TYPE=SEARCH,NAME=CATALG,TRACE=NO,EODAD=PROC5900,       X
               NOTOK=PROC5800
PROC5010 GDECSI TYPE=NEXTITEM,NAME=CATALG,TRACE=NO,EODAD=PROC5910
         TM    PROC5_REN,X'40'
         BO    PROC5020
         CLI   PROC5_TYP,C'C'
         BNE   PROC5010
         MVC   CURRENT_DSN,PROC5_REN+2
         GDEGOSUB PROC6000
         B     PROC5010
PROC5020 MVC   PROC5_PRINT,=CL133' RESULT ======>'
         MVC   PROC5_PRINT+15(50),=CL50'ERROR'
         MVC   PROC5_PRINT+21(44),PROC5_REN+2
         MVC   PROC5_PRINT+67(40),=CL50'CATALOG RETURN CODE = XXXXXXXX'
         GDEH2E PROC5_REN+46,PROC5_PRINT+67+22,4
         GDEGOSUB SERV2000,PROC5_PRINT
         B     PROC5010
***********************************************************************
* PROCESS SHOW COMMAND                                                *
***********************************************************************
PROC5100 GDEGOSUB PROC6000
         B     PROC5900
PROC5800 ABEND 4,DUMP
PROC5900 LA    R15,0
         B     PROC5920
PROC5910 LA    R15,4
         B     PROC5920
PROC5920 GDESUBEN
PROC5_MCT DC   CL44' '
PROC5_TYP DC   CL1' '
PROC5_RMC DC   CL50' '
PROC5_REN DC   CL50' '
PROC5_PRINT    DC   CL133' '
***********************************************************************
*                                                                     *
* PROCESS COMMANDS                                                    *
*                                                                     *
***********************************************************************
PROC6000 GDESUBST
         GDEGOSUB SERV3000        GO PROCESS COMMAND
         BNZ   PROC6720           ERRORS FOUND
         CLC   CURRENT_COMMAND,=CL5'SHOW'
         BE    PROC6700           SUCCESSFUL SHOW
         B     PROC6710           SUCCESSFUL LEVEL
***********************************************************************
* PRINT SUCCESS / UNSUCCESSFUL MESSAGE                                *
***********************************************************************
PROC6700 MVC   PROC6_PRINT,=CL133' RESULT ======>'
         MVC   PROC6_PRINT+15(50),=CL50'COMMAND PROCESSED'
         MVC   PROC6_PRINT+67(40),=CL50'RETURN CODE = 0      '
         GDEGOSUB SERV2000,PROC6_PRINT
         B     PROC6800
PROC6710 MVC   PROC6_PRINT,=CL133' RESULT ======>'
         MVC   PROC6_PRINT+15(50),=CL50'DSN='
         L     R2,=A(PROC5_REN)
         MVC   PROC6_PRINT+19(44),2(R2)
         MVC   PROC6_PRINT+67(40),=CL50'RETURN CODE = 0      '
         GDEGOSUB SERV2000,PROC6_PRINT
         B     PROC6800
PROC6720 GDEGOSUB SERV5000
         MVC   PROC6_PRINT,=CL133' RESULT (CONT)>'
         MVC   PROC6_PRINT+15(50),=CL133' '
         MVC   PROC6_PRINT+67(40),=CL50'PROBLEM DETERMINATION CODE = XXX
               XXX'
         GDEH2E IGWARLS_PROBDET,PROC6_PRINT+67+29,8
         GDEGOSUB SERV2000,PROC6_PRINT
         B     PROC6900
PROC6800 GDEGOSUB SERV7000
PROC6900 LA    R15,0
         B     PROC6920
PROC6910 LA    R15,4
         B     PROC6920
PROC6920 GDESUBEN
PROC6_PRINT    DC  CL133' '
***********************************************************************
*                                                                     *
* DO THE TRACE                                                        *
*                                                                     *
***********************************************************************
SERV1000 GDESUBST
         CLI   REPORT03_SW,C'Y'
         BNE   SERV1900
         L     R7,0(R1)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,=A(SERV1PL1)
         GDEPRINT 0(R7),NAME=PARMDP
         LA    R8,IGWARLS_PARMLIST
         GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=48,                                            X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL2)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,0(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL3)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,4(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL4)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,8(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=8,                                             X
               TABLEENTRYLEN=8
         L     R7,=A(SERV1PL5)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,12(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL6)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,16(R8)
         L     R6,12(R8)
         L     R6,0(R6)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=(R6),                                          X
               TABLEENTRYLEN=(R6)
         L     R7,=A(SERV1PL7)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,20(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL8)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,24(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL9)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,28(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL10)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,32(R8)
         L     R6,28(R8)
         L     R6,0(R6)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=(R6),                                          X
               TABLEENTRYLEN=(R6)
         L     R7,=A(SERV1PL11)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,36(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=8,                                             X
               TABLEENTRYLEN=8
         L     R7,=A(SERV1PL12)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,40(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=8,                                             X
               TABLEENTRYLEN=8
         L     R7,=A(SERV1PL13)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,44(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL14)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,48(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
SERV1900 LA    R15,0
         B     SERV1920
SERV1910 LA    R15,4
         B     SERV1920
SERV1920 GDESUBEN
SERV1PL1 DC    CL133' IGWARLS PASSED PARM AREA'
SERV1PL2 DC    CL133' IGWARLS RETURN CODE'
SERV1PL3 DC    CL133' IGWARLS RSNCODE CODE'
SERV1PL4 DC    CL133' IGWARLS PROBLEM DETERMINATION'
SERV1PL5 DC    CL133' IGWARLS DATASET NAME LENGTH'
SERV1PL6 DC    CL133' IGWARLS DATASET NAME'
SERV1PL7 DC    CL133' IGWARLS RECOVERY STATUS'
SERV1PL8 DC    CL133' IGWARLS LOG TYPE'
SERV1PL9 DC    CL133' IGWARLS LOGSTREAM NAME LENGTH'
SERV1PL10 DC   CL133' IGWARLS LOGSTREAM NAME'
SERV1PL11 DC   CL133' IGWARLS UTC TIME'
SERV1PL12 DC   CL133' IGWARLS LOCAL TIME'
SERV1PL13 DC   CL133' IGWARLS VSAM QUIESCED'
SERV1PL14 DC   CL133' IGWARLS BWO FLAG'
***********************************************************************
*                                                                     *
* OUTPUT CONTROL STATUS IF DDNAME AVAILABLE                           *
*                                                                     *
***********************************************************************
SERV2000 GDESUBST
         CLI   REPORT01_SW,C'N'
         BE    SERV2900
         L     R2,0(R1)
         GDEPRINT 0(R2),NAME=STATUS
SERV2900 LA    R15,0
         B     SERV2920
SERV2910 LA    R15,4
         B     SERV2920
SERV2920 GDESUBEN
***********************************************************************
*                                                                     *
* PROCESS COMMAND                                                     *
*                                                                     *
***********************************************************************
SERV3000 GDESUBST
***********************************************************************
         SR    R4,R4
         LA    R5,44
         LA    R6,CURRENT_DSN
SERV3010 CLI   0(R6),C' '
         BE    SERV3020
         LA    R4,1(R4)
         LA    R6,1(R6)
         BCT   R5,SERV3010
SERV3020 STCM  R4,B'1111',CURRENT_DSNLEN
***********************************************************************
         MVC   IGWARLS_DSN,CURRENT_DSN
         MVC   IGWARLS_DSNLEN,CURRENT_DSNLEN
         MVC   IGWARLS_LOGSTREAMIDLEN,=F'44'
***********************************************************************
*        LOAD  EP=IGWARLS,ERRET=PROC9910
         LA    R1,IGWARLS_PARMLIST R1 -> PARMLIST
         LA    R4,IGWARLS_RETCODE
         ST    R4,0(R1)            PASS ADDR OF RETURN CODE
         LA    R4,IGWARLS_RSNCODE
         ST    R4,4(R1)            PASS ADDR OF IGWARLS_RSNCODE CODE
         LA    R4,IGWARLS_PROBDET
         ST    R4,8(R1)            PASS ADDR OF PROBLEM DETERMINATION
         LA    R4,IGWARLS_DSNLEN
         ST    R4,12(R1)           PASS ADDR OF DATA SET NAME LENGTH
         LA    R4,IGWARLS_DSN
         ST    R4,16(R1)           PASS ADDR OF DATA SET NAME
         LA    R4,IGWARLS_RECOVERYSTATUS
         ST    R4,20(R1)           PASS ADDR OF RECOVERYSTATUS
         LA    R4,IGWARLS_LOGTYPE
         ST    R4,24(R1)           PASS ADDR OF LOGTYPE
         LA    R4,IGWARLS_LOGSTREAMIDLEN
         ST    R4,28(R1)           PASS ADDR OF LOGSTREAMIDLEN
         LA    R4,IGWARLS_LOGSTREAMID
         ST    R4,32(R1)           PASS ADDR OF LOGSTREAMID
         LA    R4,IGWARLS_RLS_RECOVERY_TIMESTAMP_UTC
         ST    R4,36(R1)           PASS ADDR OF UTC
         LA    R4,IGWARLS_RLS_RECOVERY_TIMESTAMP_LOCAL
         ST    R4,40(R1)           PASS ADDR OF LOCAL TIME
         LA    R4,IGWARLS_VSAM_QUIESCED
         ST    R4,44(R1)           PASS ADDR OF RESERVED FIELD
         LA    R4,IGWARLS_BWO
         ST    R4,48(R1)           PASS ADDR OF RESERVED FIELD
***********************************************************************
         GDEGOSUB SERV1000,SERV3_BEFORE_MESSAGE
***********************************************************************
         LA    R1,IGWARLS_PARMLIST R1 -> PARMLIST
         L     R15,=V(IGWARLS)
         BALR  14,15               CALL IGWARLS
***********************************************************************
         GDEGOSUB SERV1000,SERV3_AFTER_MESSAGE
***********************************************************************
         MVC   OUT1_DSNAME,=CL44' '
         L     R2,IGWARLS_DSNLEN
         BCTR  R2,R0
         MVC   OUT1_DSNAME(*-*),IGWARLS_DSN
         EX    R2,*-6
         MVC   OUT1_LOGSTRM,=CL44' '
         L     R2,IGWARLS_LOGSTREAMIDLEN
         BCTR  R2,R0
         MVC   OUT1_LOGSTRM(*-*),IGWARLS_LOGSTREAMID
         EX    R2,*-6
         MVC   OUT1_RECOVERY,=CL14'NOT PENDING'
         CLC   IGWARLS_RECOVERYSTATUS,=F'0'
         BE    *+10
         MVC   OUT1_RECOVERY,=CL14'PENDING'
         MVC   OUT1_QUIESCED,=CL12'NOT MARKED '
         CLC   IGWARLS_VSAM_QUIESCED,=F'0'
         BE    *+10
         MVC   OUT1_RECOVERY,=CL12'MARKED '
         MVC   OUT1_LOGTYPE,=CL12'NOT DEFINED'
         CLC   IGWARLS_LOGTYPE,=F'1'
         BE    SERV3030
         MVC   OUT1_LOGTYPE,=CL12'LOG=NONE   '
         CLC   IGWARLS_LOGTYPE,=F'2'
         BE    SERV3030
         MVC   OUT1_LOGTYPE,=CL12'LOG=UNDO '
         CLC   IGWARLS_LOGTYPE,=F'3'
         BE    SERV3030
         MVC   OUT1_LOGTYPE,=CL12'LOG=ALL'
         CLC   IGWARLS_LOGTYPE,=F'4'
         BE    SERV3030
         MVC   OUT1_LOGTYPE,=CL12'UNKNOWN'
SERV3030 MVC   OUT1_BWOFLAGS,=CL14'NOT DEFINED'
         CLC   IGWARLS_BWO,=F'1'
         BE    SERV3040
         MVC   OUT1_BWOFLAGS,=CL14'BWO=TYPECICS'
         CLC   IGWARLS_BWO,=F'2'
         BE    SERV3040
         MVC   OUT1_BWOFLAGS,=CL14'BWO=NO'
         CLC   IGWARLS_BWO,=F'3'
         BE    SERV3040
         MVC   OUT1_BWOFLAGS,=CL14'BWO=TYPEIMS'
         CLC   IGWARLS_BWO,=F'4'
         BE    SERV3040
         MVC   OUT1_BWOFLAGS,=CL14'BWO=TYPEOTHER'
         CLC   IGWARLS_BWO,=F'5'
         BE    SERV3040
         MVC   OUT1_BWOFLAGS,=CL14'UNKNOWN'
SERV3040 GDEH2E IGWARLS_RETCODE,OUT1_RETCODE,4
         GDEH2E IGWARLS_RSNCODE,OUT1_RSNCODE,4
         XC    CONVTOD,CONVTOD
         CONVTOD TODVAL=IGWARLS_RLS_RECOVERY_TIMESTAMP_UTC,            X
               CONVVAL=CONVTOD,TIMETYPE=MIC,DATETYPE=YYYYMMDD,         X
               OFFSET=SERV3_ZERO
         LA    R2,CONVTOD
         LA    R3,OUT1_UTCTIME
         OI    12(R2),X'0F'
         UNPK  SERV3_WORKAREA(9),8(5,R2)
         MVC   0(4,R3),SERV3_WORKAREA
         MVI   4(R3),C'/'
         MVC   5(2,R3),SERV3_WORKAREA+2
         MVI   7(R3),C'/'
         MVC   8(2,R3),SERV3_WORKAREA+4
         MVI   10(R3),C'-'
         MVI   05(R2),X'0F'
         UNPK  SERV3_WORKAREA(11),0(6,R2)
         MVC   11(2,R3),SERV3_WORKAREA
         MVI   13(R3),C':'
         MVC   14(2,R3),SERV3_WORKAREA+2
         MVI   16(R3),C':'
         MVC   17(2,R3),SERV3_WORKAREA+4
         MVI   19(R3),C'.'
         MVC   20(4,R3),SERV3_WORKAREA+6
         XC    CONVTOD,CONVTOD
         CONVTOD TODVAL=IGWARLS_RLS_RECOVERY_TIMESTAMP_LOCAL,          X
               CONVVAL=CONVTOD,TIMETYPE=MIC,DATETYPE=YYYYMMDD,         X
               OFFSET=SERV3_ZERO
         LA    R2,CONVTOD
         LA    R3,OUT1_LCLTIME
         OI    12(R2),X'0F'
         UNPK  SERV3_WORKAREA(9),8(5,R2)
         MVC   0(4,R3),SERV3_WORKAREA
         MVI   4(R3),C'/'
         MVC   5(2,R3),SERV3_WORKAREA+2
         MVI   7(R3),C'/'
         MVC   8(2,R3),SERV3_WORKAREA+4
         MVI   10(R3),C'-'
         MVI   05(R2),X'0F'
         UNPK  SERV3_WORKAREA(11),0(6,R2)
         MVC   11(2,R3),SERV3_WORKAREA
         MVI   13(R3),C':'
         MVC   14(2,R3),SERV3_WORKAREA+2
         MVI   16(R3),C':'
         MVC   17(2,R3),SERV3_WORKAREA+4
         MVI   19(R3),C'.'
         MVC   20(4,R3),SERV3_WORKAREA+6
***********************************************************************
*
* READ BWO FLAGS
*
***********************************************************************
         LA   R4,IGWABWO_READ
         ST   R4,IGWABWO_FUNCTON  SET FUNCTION
         GDEGOSUB SERV8000        GO PROCESS COMMAND
***********************************************************************
*
* BACK FROM THE CALL, CHECK RETURN CODE
*
***********************************************************************
         CLC   IGWARLS_RETCODE,=F'0'
         BNE   SERV3910
SERV3900 LA    R15,0
         B     SERV3920
SERV3910 LA    R15,4
         B     SERV3920
SERV3920 GDESUBEN
SERV3_BEFORE_MESSAGE DC CL53' ',CL80'PARAMETERS BEFORE THE CALL'
SERV3_AFTER_MESSAGE  DC CL53' ',CL80'PARAMETERS AFTER THE CALL'
SERV3_ZERO           DC    PL4'0'
SERV3_WORKAREA       DC    CL12' '
***********************************************************************
*                                                                     *
* OUTPUT CONTROL STATUS IF DDNAME AVAILABLE                           *
*                                                                     *
***********************************************************************
SERV4000 GDESUBST
         GDEDDN GDERLS04,FOUND=SERV4001,NOTFOUND=SERV4900
SERV4001 GDEPRINT TYPE=OPEN,NAME=BWOPRT,                               X
               TITLE='BWO FLAG EXPLAINATION',                          X
               HEADINGS=(SERV4HL1)
         LA    R4,SERV4_TABLE
         L     R5,=A(SERV4_TABLE_END)
         MVC   SERV4_MESSAGE,=CL133' '
SERV4010 MVC   SERV4_MESSAGE+30(50),0(R4)
         GDEPRINT SERV4_MESSAGE,NAME=BWOPRT
         LA    R4,50(R4)
         CR    R4,R5
         BL    SERV4010
         GDEPRINT ,TYPE=CLOSE,NAME=BWOPRT
SERV4900 LA    R15,0
         B     SERV4920
SERV4910 LA    R15,4
         B     SERV4920
SERV4920 GDESUBEN
SERV4HL1       DC   CL133' '
SERV4_MESSAGE  DC   CL133' '
SERV4_TABLE    DS  0CL50
 DC CL50'                                                  '
 DC CL50' BWO FLAGS AND THEIR MEANING                      '
 DC CL50'                                                  '
 DC CL50' 000 - DATA SET DOES NOT SUPPORT BACKUP WITHOUT   '
 DC CL50'       SERIALIZATION.                             '
 DC CL50'                                                  '
 DC CL50' 001 - FORCES RECOVERY IN PROGRESS, RESET TO 000  '
 DC CL50'       AFTER RECOVERY                             '
 DC CL50'                                                  '
 DC CL50' 010 - A CA/CI SPLIT FOR THE BWO DATA SET IS IN   '
 DC CL50'       PROGRESS. DO NOT START BACKUP.  IF BACKUP  '
 DC CL50'       IN PROGRESS, DISCARD AT END.  THIS STATE   '
 DC CL50'       CAN EXIST AT OPEN IF THE DATABASE MANAGER  '
 DC CL50'       ABENDED DURING SPLIT.  DATABASE ACTION     '
 DC CL50'       DEPENDS DATABASE MANAGER.  THE DATA SET    '
 DC CL50'       MIGHT NEED RESTORE AND FORWARD RECOVERY OR '
 DC CL50'       BACK OUT OF CHANGES IF AIXS ARE PRESENT.   '
 DC CL50'                                                  '
 DC CL50' 011 - THE DATABASE MANAGER CLOSED A BWO DATA SET '
 DC CL50'       AND A CI/CA SPLIT HAD OCCURRED WHEN IT WAS '
 DC CL50'       PREVIOUSLY OPEN.  BACKUP MANAGER SHOULD    '
 DC CL50'       RESET IT TO 000 AND SERIALIZE TO BACK UP,  '
 DC CL50'       NOT A BWO CANDIDATE.  THE DATABASE MANAGER '
 DC CL50'       SHOULD CHANGE THIS STATE TO 110 AT OPEN.   '
 DC CL50'                                                  '
 DC CL50' 100 - A BWO DATA SET HAS BEEN OPENED BY THE      '
 DC CL50'       DATABASE MANAGER.  BACK UP WITHOUT         '
 DC CL50'       SERIALIZATION.                             '
 DC CL50'                                                  '
 DC CL50' 101 - DATA SET BAS BEEN RESTORED AND REQUIRES    '
 DC CL50'       FORWARD RECOVERY BEFORE IT CAN BE USED.    '
 DC CL50'       RESET IT TO 001 BEFORE FORWARD RECOVERY.   '
 DC CL50'                                                  '
 DC CL50' 110 - A CI/CA SPLIT HAS OCCURRED AND COMPLETED ON'
 DC CL50'       A BWO DATA SET.  THIS STATE CAN EXIST AT   '
 DC CL50'       OPEN IF THE DATABASE MANAGER ABENDED.  BACK'
 DC CL50'       UP WITHOUT SERIALIZATION.  RESET IT TO 100 '
 DC CL50'       BEFORE BACKUP.                             '
 DC CL50'                                                  '
 DC CL50' 111 - AN INVALID STATE.                          '
 DC CL50'                                                  '
SERV4_TABLE_END EQU *
***********************************************************************
*                                                                     *
* OUTPUT CONTROL MESSAGE AND MEANING                                  *
*                                                                     *
***********************************************************************
SERV5000 GDESUBST
         MVC   SERV5_MESSAGE,=CL133' RESULT ======>'
         MVC   SERV5_MESSAGE+15(50),=CL50'DSN='
         L     R2,=A(PROC5_REN)
         MVC   SERV5_MESSAGE+19(44),2(R2)
         MVC SERV5_MESSAGE+67(40),=CL50'RETURN CODE = XXXXXXXX, REASON X
               CODE = XXXXXXXX'
         GDEH2E IGWARLS_RETCODE,SERV5_MESSAGE+67+14,4
         GDEH2E IGWARLS_RSNCODE,SERV5_MESSAGE+67+38,4
         GDEGOSUB SERV2000,SERV5_MESSAGE
         MVC   T01RETCODE,IGWARLS_RETCODE
         MVC   T01RSNCODE,IGWARLS_RSNCODE
         GDETABLE T01,TYPE=FIND,NAME=RETRSN,TRACE=NO,                  X
               OK=SERV5900
         GDETABLE T01,TYPE=INSERT,NAME=RETRSN,TRACE=NO
         MVC   SERV5_MESSAGE,=CL133' RESULT (CONT)>'
         MVC SERV5_MESSAGE+15(50),=CL50'COMMAND PROCESSED UNSUCCESSFULLX
               Y'
         LA    R4,SERV5_TABLE
         L     R5,=A(SERV5_TABLE_END)
SERV5010 CLC   0(4,R4),IGWARLS_RETCODE
         BNE   SERV5020
         CLC   4(4,R4),IGWARLS_RSNCODE
         BNE   SERV5020
         MVC   SERV5_MESSAGE+67(56),8(R4)
         GDEGOSUB SERV2000,SERV5_MESSAGE
SERV5020 LA    R4,68(R4)
         CR    R4,R5
         BL    SERV5010
SERV5900 LA    R15,0
         B     SERV5920
SERV5910 LA    R15,4
         B     SERV5920
SERV5920 GDESUBEN
SERV5_MESSAGE  DC   CL133' '
         DS   0D
SERV5_TABLE    DS  0CL68
 DC   F'0',F'0',CL60' THE OPERATION WAS SUCCESSFUL.                 '
 DC   F'8',F'4',CL60' AN INVALID DSNAME_LENGTH WAS SPECIFIED.       '
 DC   F'8',F'4',CL60' CORRECT THE DSNAME_LENGTH ARGUMENT AND RETRY  '
 DC   F'8',F'4',CL60' THE REQUEST.                                  '
 DC   F'8',F'8',CL60' AN INVALID DSNAME OF BLANKS WAS SPECIFIED.    '
 DC   F'8',F'8',CL60' CORRECT THE DSNAME ARGUMENT AND RETRY THE     '
 DC   F'8',F'8',CL60' REQUEST.                                      '
 DC  F'8',F'20',CL60' IGWARLS IS ONLY SUPPORTED FOR VSAM DATA SETS. '
 DC  F'8',F'20',CL60' THE NAME SPECIFIED WAS NOT THE NAME OF THE    '
 DC  F'8',F'20',CL60' BASE CLUSTER. SPECIFY THE NAME OF THE BASE    '
 DC  F'8',F'20',CL60' CLUSTER IN THE DSNAME ARGUMENT AND RETRY THE  '
 DC  F'8',F'20',CL60' REQUEST.                                      '
 DC  F'8',F'32',CL60' THE DATA SET SPECIFIED IN DSNAME IS NOT AN SMS'
 DC  F'8',F'32',CL60' MANAGED DATA SET. CORRECT THE DSNAME ARGUMENT '
 DC  F'8',F'32',CL60' AND RETRY THE REQUEST.                        '
 DC  F'8',F'40',CL60' FOR IGWARLS, THE LOGSTREAMID_LENGTH SPECIFIED '
 DC  F'8',F'40',CL60' WAS INVALID (<=0) OR WAS NOT LARGE ENOUGH TO  '
 DC  F'8',F'40',CL60' RETURN THE REQUESTED LOGSTREAMID. CORRECT THE '
 DC  F'8',F'40',CL60' LOGSTREAMID_LENGTH ARGUMENT AND RETRY THE     '
 DC  F'8',F'40',CL60' REQUEST.                                      '
 DC  F'12',F'8',CL60' THERE IS INSUFFICIENT VIRTUAL STORAGE TO      '
 DC  F'12',F'8',CL60' PROCESS THE REQUEST. RETRY THE REQUEST. IF THE'
 DC  F'12',F'8',CL60' CONDITION PERSISTS, CONTACT IBM FOR           '
 DC  F'12',F'8',CL60' PROGRAMMING ASSISTANCE.                       '
 DC F'12',F'12',CL60' THE DATA SET SPECIFIED IN DSNAME COULD NOT BE '
 DC F'12',F'12',CL60' FOUND. VERIFY THAT THE DATA SET EXISTS AND HAS'
 DC F'12',F'12',CL60' BEEN CORRECTLY SPECIFIED IN DSNAME.           '
 DC F'12',F'14',CL60' THE DATA SET SPECIFIED IN DSNAME WAS FOUND IN '
 DC F'12',F'14',CL60' THE CATALOG BUT ITS ATTRIBUTES WERE NOT       '
 DC F'12',F'14',CL60' AVAILABLE. VERIFY THAT THE DATA SET HAS BEEN  '
 DC F'12',F'14',CL60' CORRECTLY SPECIFIED IN DSNAME.                '
 DC F'12',F'16',CL60' CANNOT ACCESS THE DATA SET THAT IS SPECIFIED  '
 DC F'12',F'16',CL60' IN DSNAME. THE DATA SET HAS BEEN HSM MIGRATED.'
 DC F'12',F'16',CL60' HRECALL THE DATA SET AND RETRY THE REQUEST.   '
 DC  F'16',F'4',CL60' AN ERROR OCCURRED ON A CALL TO CATALOG        '
 DC  F'16',F'4',CL60' MANAGEMENT. THE CATALOG RETURN CODE IS IN THE '
 DC  F'16',F'4',CL60' FIRST ELEMENT OF PROB_DET AND THE CATALOG     '
 DC  F'16',F'4',CL60' REASON CODE IS IN THE SECOND ELEMENT OF       '
 DC  F'16',F'4',CL60' PROB_DET. SEE MESSAGE IDC3009I FOR AN         '
 DC  F'16',F'4',CL60' EXPLANATION OF THE CATALOG RETURN CODE AND    '
 DC  F'16',F'4',CL60' REASON CODE. A CATALOG MANAGEMENT RETURN CODE '
 DC  F'16',F'4',CL60' OF 8 INDICATES THAT THE SPECIFIED DATA SET WAS'
 DC  F'16',F'4',CL60' NOT FOUND. IF YOU GET THIS RETURN CODE,       '
 DC  F'16',F'4',CL60' CORRECT DSNAME AND RETRY THE REQUEST.         '
 DC  F'20',F'4',CL60' A SYSTEM ERROR OCCURRED DURING IGWARLS        '
 DC  F'20',F'4',CL60' PROCESSING. THE ELEMENTS OF PROB_DET CONTAIN  '
 DC  F'20',F'4',CL60' ADDITIONAL DIAGNOSTIC DATA. CONTACT IBM FOR   '
 DC  F'20',F'4',CL60' PROGRAMMING ASSISTANCE AND PROVIDE THEM WITH  '
 DC  F'20',F'4',CL60' THE IGWARLS RETURN_CODE, REASON_CODE, AND     '
 DC  F'20',F'4',CL60' PROB_DET VALUES.                              '
 DC  F'36',F'4',CL60' LINKAGE CANNOT BE ESTABLISHED TO THE IGWRLS   '
 DC  F'36',F'4',CL60' SERVICE MODULE, IGWAMCS4. EITHER THE WRONG    '
 DC  F'36',F'4',CL60' LEVEL OF THE OPERATING SYSTEM IS BEING USED,  '
 DC  F'36',F'4',CL60' OR THE CALLABLE SYSTEM SERVICE LIBRARY,       '
 DC  F'36',F'4',CL60' SYS1.CSSLIB, IS MISSING THE REQUIRED SERVICES.'
 DC  F'36',F'4',CL60' CONTACT YOUR INSTALLATION SYSTEM PROGRAMMER   '
 DC  F'36',F'4',CL60' FOR ASSISTANCE.                               '
SERV5_TABLE_END DS  0CL68
***********************************************************************
*                                                                     *
* OUTPUT CONTROL MESSAGE AND MEANING                                  *
*                                                                     *
***********************************************************************
SERV6000 GDESUBST
         GDEDDN GDERLS05,FOUND=SERV6001,NOTFOUND=SERV6900
SERV6001 GDEPRINT TYPE=OPEN,NAME=RETRSN,                               X
               TITLE='RETURN CODE / REASON CODE EXPLAINATION',         X
               HEADINGS=(SERV6HL1)
         L     R4,=A(SERV5_TABLE)
         L     R5,=A(SERV5_TABLE_END)
SERV6010 CLC   0(4,R4),SERV6_SAVE_RET
         BNE   SERV6020
         CLC   4(4,R4),SERV6_SAVE_RSN
         BNE   SERV6020
         MVC   SERV6_MESSAGE,=CL133' '
         MVC   SERV6_MESSAGE+63(60),8(R4)
         B     SERV6030
SERV6020 MVC   SERV6_MESSAGE,=CL133'0'
         MVC SERV6_MESSAGE+15(40),=CL50'RETURN CODE = XXXXXXXX, REASON X
               CODE = XXXXXXXX'
         GDEH2E 0(R4),SERV6_MESSAGE+15+14,4
         GDEH2E 4(R4),SERV6_MESSAGE+15+38,4
         MVC   SERV6_MESSAGE+63(60),8(R4)
         MVC   SERV6_SAVE_RET,0(R4)
         MVC   SERV6_SAVE_RSN,4(R4)
SERV6030 GDEPRINT SERV6_MESSAGE,NAME=RETRSN
         LA    R4,68(R4)
         CR    R4,R5
         BL    SERV6010
         GDEPRINT ,NAME=RETRSN,TYPE=CLOSE
SERV6900 LA    R15,0
         B     SERV6920
SERV6910 LA    R15,4
         B     SERV6920
SERV6920 GDESUBEN
SERV6HL1       DC   CL133' '
SERV6_MESSAGE  DC   CL133' '
SERV6_SAVE_RET DC   F'-1'
SERV6_SAVE_RSN DC   F'-1'
***********************************************************************
*                                                                     *
* OUTPUT REPORT IF DDNAME IS AVAILABLE                                *
*                                                                     *
***********************************************************************
SERV7000 GDESUBST
         CLI   REPORT02_SW,C'N'
         BE    SERV7900
         GDEPRINT PROC1DL1,NAME=REPORT
         GDEPRINT PROC1DL2,NAME=REPORT
SERV7900 LA    R15,0
         B     SERV7920
SERV7910 LA    R15,4
         B     SERV7920
SERV7920 GDESUBEN
***********************************************************************
*                                                                     *
* READ BWO FLAGS                                                      *
*                                                                     *
***********************************************************************
SERV8000 GDESUBST
***********************************************************************
         MVC   IGWABWO_DSN,CURRENT_DSN
         MVC   IGWABWO_DSNLEN,CURRENT_DSNLEN
         MVC   IGWABWO_BWOFLAGS,=3F'0'
***********************************************************************
         XC    TIME_STORAGE,TIME_STORAGE
         TIME  DEC,TIME_STORAGE,DATETYPE=YYYYDDD,LINKAGE=SYSTEM
         MVC   IGWABWO_BWOTIME+4,TIME_STORAGE
         OI    IGWABWO_BWOTIME+4+3,X'0F'
         MVI   TIME_STORAGE+12,X'0F'
         SRP   TIME_STORAGE+8(5),1,0
         OI    TIME_STORAGE+8+3,X'0F'
         MVI   IGWABWO_BWOTIME+0,X'01'
         MVC   IGWABWO_BWOTIME+1(3),TIME_STORAGE+8+1
***********************************************************************
*        LOAD  EP=IGWABWO,ERRET=PROC9910
         LA    R1,IGWABWO_PARMLIST R1 -> PARMLIST
         LA    R4,IGWABWO_RETCODE
         ST    R4,0(R1)            PASS ADDR OF RETURN CODE
         LA    R4,IGWABWO_RSNCODE
         ST    R4,4(R1)            PASS ADDR OF IGWABWO_RSNCODE CODE
         LA    R4,IGWABWO_PROBDET
         ST    R4,8(R1)            PASS ADDR OF PROBLEM DETERMINATION
         LA    R4,IGWABWO_FUNCTON
         ST    R4,12(R1)           PASS ADDR OF FUNCTION REQUIRED
         LA    R4,IGWABWO_DSNLEN
         ST    R4,16(R1)           PASS ADDR OF DATA SET NAME LENGTH
         LA    R4,IGWABWO_DSN
         ST    R4,20(R1)           PASS ADDR OF DATA SET NAME
         LA    R4,IGWABWO_SELECT
         ST    R4,24(R1)           PASS ADDR OF SELECTION MASK
         LA    R4,IGWABWO_BWOFLAGS
         ST    R4,28(R1)           PASS ADDR OF BWO FLAGS
         LA    R4,IGWABWO_BWOTIME
         ST    R4,32(R1)           PASS ADDR OF BWO RECOVERY POINT
         LA    R4,IGWABWO_RESERVED
         ST    R4,36(R1)           PASS ADDR OF RESERVED FIELD
***********************************************************************
         GDEGOSUB SERV9000,SERV8_BEFORE_MESSAGE
***********************************************************************
         LA    R1,IGWABWO_PARMLIST R1 -> PARMLIST
         L     R15,=V(IGWABWO)
         BALR  14,15               CALL IGWABWO
***********************************************************************
         GDEGOSUB SERV9000,SERV8_AFTER_MESSAGE
***********************************************************************
         MVC   OUT1_BWO,=CL3'000'
         CLC   IGWABWO_BWOFLAG1,=F'0'
         BE    *+8
         MVI   OUT1_BWO+0,C'1'
         CLC   IGWABWO_BWOFLAG2,=F'0'
         BE    *+8
         MVI   OUT1_BWO+1,C'1'
         CLC   IGWABWO_BWOFLAG3,=F'0'
         BE    *+8
         MVI   OUT1_BWO+2,C'1'
***********************************************************************
         UNPK IGWABWO_WORKAREA(7),IGWABWO_BWOTIME+4(4)
         MVC  OUT1_BWOTIME+0(2),IGWABWO_WORKAREA
         MVI  OUT1_BWOTIME+2,C':'
         MVC  OUT1_BWOTIME+3(2),IGWABWO_WORKAREA+2
         MVI  OUT1_BWOTIME+5,C':'
         MVC  OUT1_BWOTIME+6(2),IGWABWO_WORKAREA+4
         MVI  OUT1_BWOTIME+8,C'.'
         MVC  OUT1_BWOTIME+9(1),IGWABWO_WORKAREA+6
         UNPK IGWABWO_WORKAREA(7),IGWABWO_BWOTIME+0(4)
         MVC  OUT1_BWODATE+0(2),=CL2'20'
         MVC  OUT1_BWODATE+2(2),IGWABWO_WORKAREA+2
         MVI  OUT1_BWODATE+4,C'/'
         MVC  OUT1_BWODATE+5(3),IGWABWO_WORKAREA+4
         MVC  OUT1_BWODATE+8(2),=CL2' '
SERV8900 LA    R15,0
         B     SERV8920
SERV8910 LA    R15,4
         B     SERV8920
SERV8920 GDESUBEN
SERV8_BEFORE_MESSAGE DC CL53' ',CL80'PARAMETERS BEFORE THE CALL'
SERV8_AFTER_MESSAGE  DC CL53' ',CL80'PARAMETERS AFTER THE CALL'
***********************************************************************
*                                                                     *
* DO THE TRACE                                                        *
*                                                                     *
***********************************************************************
SERV9000 GDESUBST
         CLI   REPORT03_SW,C'Y'
         BNE   SERV9900
         L     R7,0(R1)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,=A(SERV9PL1)
         GDEPRINT 0(R7),NAME=PARMDP
         LA    R8,IGWABWO_PARMLIST
         GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=40,                                            X
               TABLEENTRYLEN=4
         L     R7,=A(SERV9PL2)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,0(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV9PL3)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,4(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV9PL4)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,8(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=8,                                             X
               TABLEENTRYLEN=8
         L     R7,=A(SERV9PL5)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,12(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV9PL6)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,16(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV9PL7)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,20(R8)
         L     R6,16(R8)
         L     R6,0(R6)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=(R6),                                          X
               TABLEENTRYLEN=(R6)
         L     R7,=A(SERV9PL8)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,24(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV9PL9)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,28(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=12,                                            X
               TABLEENTRYLEN=4
         L     R7,=A(SERV9PL10)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,32(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=8,                                             X
               TABLEENTRYLEN=8
         L     R7,=A(SERV9PL11)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,36(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=16,                                            X
               TABLEENTRYLEN=16
SERV9900 LA    R15,0
         B     SERV9920
SERV9910 LA    R15,4
         B     SERV9920
SERV9920 GDESUBEN
SERV9PL1 DC    CL133' IGWABWO PASSED PARM AREA'
SERV9PL2 DC    CL133' IGWABWO RETURN CODE'
SERV9PL3 DC    CL133' IGWABWO IGWABWO_RSNCODE CODE'
SERV9PL4 DC    CL133' IGWABWO PROBLEM DETERMINATION'
SERV9PL5 DC    CL133' IGWABWO FUNCTION REQUIRED'
SERV9PL6 DC    CL133' IGWABWO DATASET NAME LENGTH'
SERV9PL7 DC    CL133' IGWABWO DATASET NAME'
SERV9PL8 DC    CL133' IGWABWO SELECTION MASK'
SERV9PL9 DC    CL133' IGWABWO BWO FLAGS'
SERV9PL10 DC   CL133' IGWABWO BWO TIME'
SERV9PL11 DC   CL133' IGWABWO RESERVED FIELD'
***********************************************************************
*                                                                     *
* I/O ROUTINES FOR CATALOG LOOKUPS                                    *
*                                                                     *
***********************************************************************
         GDECSI TYPE=IOROUTINE,NAME=CATALG
         GDETABLE TYPE=IOROUTINE,NAME=RETRSN,TABLNG=008,               X
               KEYLNG=(08),                                            X
               KEYOFF=(0)
         END
//*********************************************************************
//*                                                                   *
//*  STEP010   PGM=ASMA90                                             *
//*                                                                   *
//*********************************************************************
//STEP010 EXEC PGM=ASMA90,
//             PARM='BATCH,USING(WARN(9))'
//SYSUT1   DD  DSN=&&SYSUT1,
//             SPACE=(4096,(120,120),,,ROUND),
//             UNIT=SYSALLDA,
//             DCB=BUFNO=1
//SYSLIB   DD  DSN=SYS1.MACLIB,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSLIN  DD   DSN=&&OBJ(GDERLSBT),
//             DISP=(OLD)
//             BLKSIZE=3200
//SYSIN    DD  *
* ------------------------------------------------------------------- *
*                                                                     *
* RESET BWO FLAGS IN BATCH                                            *
*                                                                     *
* CONTROL CARDS                                                       *
*   SHOW=<DSNAME>      ASK THE STATUS OF THE BWO FLAGS AND SHOW       *
*                      VALUES IN THE OUTPUT REPORT                    *
*                     -THE CURRENT PROCESSING DSN IS SET TO <DSNAME>  *
*   DSN=<DSNAME>       SET THE PROCESSING DSN TO <DSNAME>             *
*                     -THE COMMANDS TEST AND SET USE THE LAST         *
*                      ESTABLISHED DSNAME AND BWO FLAGS FOR PROCESSING*
*   BWO=<BWO>          SET THE PROCESSING BWO FLAGS TO <BWO>          *
*                     -THE COMMANDS TEST AND SET USE THE LAST         *
*                      ESTABLISHED DSNAME AND BWO FLAGS FOR PROCESSING*
*   TEST=<BWO>         COMPARE THE STATUS OF THE BWO FLAGS TO THE     *
*                      THREE FLAGS HERE                               *
*                        IF EQUAL PROCESSING CONTINUES WITH NEXT      *
*                          CONTROL CARD                               *
*                        IF NOT EQUAL PROCESSING OF CONTROL CARDS     *
*                          IS SKIPPED UNTIL NEXT RESET                *
*   SET=<BWO>          SET THE CURRENT PROCESSING DSNAME TO THE       *
*                      VALUES ENTERED                                 *
*   RESET              RESETS THE SKIP PROCESSING OPTION FROM A FAILED*
*                      TEST COMMAND...PROCESSING DSNAME IS ALSO       *
*                      INITIALIZED                                    *
*                                                                     *
* DDNAMES                                                             *
*   GDEBWOA            INPUT CONTROL CARDS                            *
*   GDEBWO01           STATUS REPORT OF CONTROL CARDS <OPTIONAL>      *
*   GDEBWO02           TRACE OF CALL TO ROUTINES      <OPTIONAL>      *
*                                                                     *
* SUGGESTED COMMAND SEQUENCE (EXAMPLE 1 .. SIMPLE SET)                *
*   //GDEBWOA  DD  *                                                  *
*   SHOW=MY.BWO.DATASET                                               *
*   SET=000                                                           *
*                                                                     *
* SHOW WILL REPORT CURRENT STATUS AND SET WILL CHANGE THE STATUS      *
*   .........................(EXAMPLE 2 .. SET ONLY IF IN ERROR)      *
*   //GDEBWOA  DD  *                                                  *
*   SHOW=MY.BWO.DATASET                                               *
*   TEST=100                                                          *
*   SET=000                                                           *
* SHOW WILL REPORT CURRENT STATUS                                     *
* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *
* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *
*   .........................(EXAMPLE 2 .. SET ONLY IF IN ERROR)      *
*   //GDEBWOA  DD  *                                                  *
*   SHOW=MY.BWO.DATASET1                                              *
*   TEST=100                                                          *
*   SET=000                                                           *
*   RESET                                                             *
*   SHOW=MY.BWO.DATASET2                                              *
*   TEST=100                                                          *
*   SET=000                                                           *
* SHOW WILL REPORT CURRENT STATUS                                     *
* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *
* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *
* RESET WILL ALLOW THE SECOND SET OF CONTROL CARDS TO BE PROCESSED    *
* SHOW WILL REPORT CURRENT STATUS                                     *
* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *
* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   GDEDDN   &DDN,                                                X
               &DDNLOC=,       OR DDNLOCATION                          X
               &FOUND=,        LABEL                                   X
               &NOTFOUND=      LABEL
         LCLB  &ERRORS
&ERRORS  SETB  0
         GBLB  &GDEDDNSTORAGEDEFINED
         AIF   ('&DDNLOC' NE '').A0010
         AIF   ('&DDN' NE '').A0010
&ERRORS  SETB  1
         MNOTE 8,'DDN OR DDNLOC MUST BE DEFINED'
.A0010   AIF   ('&FOUND' NE '').A0020
&ERRORS  SETB  1
         MNOTE 8,'LABEL FOUND MUST BE DEFINED'
.A0020   AIF   ('&NOTFOUND' NE '').A0030
&ERRORS  SETB  1
         MNOTE 8,'LABEL NOTFOUND MUST BE DEFINED'
.A0030   ANOP
         AIF   (&ERRORS).Z0010
.**********************************************************************
.*                                                                    *
.* THIS MACRO IS USED TO CHECK THE TIOT FOR A DDNAME                  *
.*                                                                    *
.**********************************************************************
&LABEL   L     R14,=A(GDEDDN_RETURN_TIOT)
         EXTRACT (R14),FIELDS=TIOT GET TIOT ADDRESS
         L     R14,=A(GDEDDN_RETURN_TIOT)
         L     R14,0(R14)        GET TIOT ADDRESS
         LA    R15,24(R14)       MOVE TO FIRST DDNAME ENTRY IN TIOT
         XR    R14,R14           CLEAR R14
         ICM   R14,B'0001',0(R15) MOVE IN LENGTH
         LTR   R14,R14           END OF TIOT?
         BZ    &NOTFOUND         YES-BRANCH (RETURN CODE) MUST FIND
         CH    R14,=H'20'        IS THIS THE LENGTH WE EXPECT?
         BNE   *+4+6+4           NO-BRANCH (LOOP AGAIN)   MUST BE 20
         AIF   ('&DDNLOC' NE '').B0010
         CLC   4(8,R15),=CL8'&DDN' IS THIS THE DDNAME?
         AGO   .B0020
.B0010   ANOP
         CLC   4(8,R15),&DDNLOC    IS THIS THE DDNAME?
.B0020   ANOP
         BE    &FOUND            YES-BRANCH (FIND UCB)
         AR    R15,R14           MOVE TO NEXT TABLE ENTRY
         B     *-2-4-6-4-4-4-2-4 LOOP AGAIN
         AIF   (&GDEDDNSTORAGEDEFINED).Z0010
&GDEDDNSTORAGEDEFINED   SETB   1
GDEDDN_RETURN_TIOT      DS     F
.Z0010   ANOP
         MEND
         MACRO
&NAME    GDEH2E   &SOURCE,&TARGET,&LENGTH,&WORKR1=14,&WORKR2=15,       X
               &WORKR3=R2,&WORKR4=R3,&WORKR5=R1,&SAVE=NO
         LCLC  &GDEH2ELABEL1
&GDEH2ELABEL1 SETC 'GDEH2E_'.'&SYSNDX'
.*
.*  SET UP STORAGE AS NEEDED
.*
         AIF  ('&SAVE' EQ 'NO').A0010
         CNOP  0,4
         B     *+28
&GDEH2ELABEL1 DS    6F
.A0010   ANOP
.*
.*  SAVE REGS IF ASKED TO DO SO
.*
         AIF   ('&SAVE' EQ 'NO').A0020
&NAME    STM   14,3,&GDEH2ELABEL1
         AGO   .A0030
.A0020   ANOP
         AIF   (K'&NAME EQ 0).A0030
&NAME    EQU   *
.A0030   ANOP
         L     &WORKR5,=A(&LENGTH)
         LA    &WORKR3,&SOURCE
         LA    &WORKR4,&TARGET
         ICM   &WORKR2,B'1000',0(&WORKR3)
         SLL   &WORKR1,4
         SLDL  &WORKR1,4
         SLL   &WORKR1,4
         SLDL  &WORKR1,4
         STCM  &WORKR1,B'0011',0(&WORKR4)
         TR    0(2,&WORKR4),=C'0123456789ABCDEF'
         LA    &WORKR3,1(&WORKR3)
         LA    &WORKR4,2(&WORKR4)
         BCT   &WORKR5,*-38
.*
.*  RESTORE REGS IF ASKED TO DO SO
.*
         AIF   ('&SAVE' EQ 'NO').A0040
         LM    14,3,&GDEH2ELABEL1
.A0040   ANOP
         MEND
         MACRO
&LABEL   GDEPRINT &DATA,&TYPE=WRITE,                                   X
               &OK=,           LABEL                                   X
               &NOTOK=,        LABEL                                   X
               &HEADINGS=,     (HEAD1,HEAD2,....HEAD12)                X
               &TITLE=,        TITLE OR 'CENTER THIS STUFF'            X
               &BREAKS=, NORMAL,  FORCE, SUBHEADING                    X
               &BREAKTYPE=, ALLOW, PROHIBIT, NOHEADINGS                X
               &RESETPAGENUMBER=, NO, YES                              X
               &TABLELEN=, 80,                                         X
               &TABLEENTRYLEN=, 80,                                    X
               &LINESPERPAGE=, 60,                                     X
               &REPORTDD=,                                             X
               &NAME=,                                                 X
               &REPORTID=01,                                           X
               &CHECK=,                                                X
               &PARMLIST=
.**********************************************************************
.*                                                                    *
.* THIS MACRO IS USED TO CALL THE PRINT DRIVER ROUTINES               *
.* INTERFACE BY USING THE TYPE KEYWORK                                *
.*                                                                    *
.* TYPE=OPEN        = INITIALIZE AND OPEN THE PRINTER           .C    *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=WRITE       = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=1)  .D    *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=CHARZONENUM = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=2)  .E    *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=DUMP        = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=3)  .F    *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=TABLE       = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=4) .G     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=HEX         = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=5) .H     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=TABLEORHEX  = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=6) .I     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=STORAGE     = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=7) .J     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=TABLEORHEXWITHTIME = WRITE OUTPUT2PRINTER  (SUBTYPE=8) .K     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=DUMPSTORAGEANDTIME = WRITE OUTPUT2PRINTER  (SUBTYPE=9) .L     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=TRACE       = PRINT THE SAVE AREA FROM THE (SUBTYPE=T) .M     *
.*                    LAST CALL TO EXAMINE FOR ERRORS                 *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=CLOSE       = CLOSE THE PRINTER                        .N     *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                             .O     *
.* TYPE=CHECK       = CHECK FOR A SET OF LINES TO PRINT AS A BLOCK, IF*
.*                    SPACE IS NOT AVAILABLE, PERFORM A PAGE BREAK NOW*
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=PAGENUM     = RETURN CURRENT PAGE NUMBER                      *
.*     RETURN CODES - 00 ALL OK                                       *
.*                                                                    *
.* TYPE=PARMLIST DECLARES STORAGE TO BE USED BY PARMLIST              *
.*                                                                    *
.* TYPE=DSECT DECLARES DSECT TO MAP THE STORAGE SET ASIDE BY          *
.*            PARMLIST                                                *
.*                                                                    *
.* SAMPLE USAGE                                                       *
.*   IN DSECT SECTION DECLARE                                         *
.*            GDEPRINT TYPE=DSECT,REPORTDD=CSD020,NAME=PARMDP,        *
.*                  REPORTID=05                                       *
.*   IN OPEN SECTION SPECIFY                                          *
.*            GDEPRINT TYPE=OPEN,NAME=PARMDP,                         *
.*                  TITLE='USERPROGRAM TRACING FOR DFHCSDUP',         *
.*                  HEADINGS=(HEAD1)                                  *
.*       GDEPRINT TYPE=OPEN,NAME=PARMDP,                              *
.*             TITLE='USERPROGRAM TRACING FOR DFHCSDUP',              *
.*             HEADINGS=(HEAD1,HEAD2)                                 *
.*   IN OUTPUT SECTION USE                                            *
.*            GDEPRINT LABEL,NAME=PARMDP                              *
.*            GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,NAME=PARMDP,     *
.*                  TABLELEN=40,TABLEENTRYLEN=4                       *
.*   IN CLOSE SECTION DO                                              *
.*            GDEPRINT TYPE=CLOSE,NAME=PARMDP                         *
.*   IN STORAGE SECTION RESERVE STORAGE BY                            *
.*            GDEPRINT TYPE=PARMLIST,NAME=PARMDP                      *
.*                                                                    *
.**********************************************************************
         GBLC  &GDEPRINTCSECTDEFINED(32)
         GBLC  &GDEPRINTDSECTDEFINED(32)
         GBLC  &GDEPRINTREPORTDD(32)
         GBLC  &GDEPRINTREPORTID(32)
         LCLA  &CNTA,&CNTB,&CNTC,&CNTD
         LCLC  &ROUT01,&ROUT01ID
         LCLC  &CMD,&SUBCMD
         LCLC  &REPORT,&ZREPORTDD
         LCLC  &ZBREAKS,&ZBREAKTYPE,&ZRESETPAGENUMBER,
         LCLC  &ZTABLELEN,&ZTABLEENTRYLEN,&ZLINESPERPAGE
         LCLC  &LBL
&ZBREAKS                SETC  '&BREAKS'
&ZBREAKTYPE             SETC  '&BREAKTYPE'
&ZRESETPAGENUMBER       SETC  '&RESETPAGENUMBER'
&ZTABLELEN              SETC  '&TABLELEN'
&ZTABLEENTRYLEN         SETC  '&TABLEENTRYLEN'
&ZLINESPERPAGE          SETC  '&LINESPERPAGE'
.**********************************************************************
.*
.*     KEEP A REPORTDD AND REPORT ID IN A LISTING KEYED BY &NAME
.*
.**********************************************************************
         AIF   ('&NAME' NE '').AA000
         MNOTE 8,'NAME MUST BE SPECIFIED'
         AGO   .Z0010
.AA000   ANOP
.*
.*     SEARCH TABLE
.*
&CNTA    SETA  1
&REPORT  SETC  '&NAME'.'$$$$$$'
&REPORT  SETC  '&REPORT'(1,6)
.AA010   ANOP
         AIF   ('&GDEPRINTCSECTDEFINED(&CNTA)' EQ '').AA020
         AIF   ('&GDEPRINTCSECTDEFINED(&CNTA)' EQ '&REPORT').AA030
&CNTA    SETA  &CNTA+1
         AIF   (&CNTA LE 32).AA010
         MNOTE 8,'MORE THAN 32 PRINTOUTS DEFINED - LIMIT REACHED'
         AGO   .Z0010
.*
.*     NOT FOUND SO ADD TO TABLE
.*
.AA020   ANOP
&ZREPORTDD     SETC  '&REPORTDD'
         AIF   ('&ZREPORTDD' NE '').AA021
&ZREPORTDD     SETC  '&SYSECT'.'$$$$$$'
&ZREPORTDD     SETC  '&ZREPORTDD'(1,6)
.AA021   ANOP
         AIF   ('&REPORTID' NE '').AA022
         MNOTE 8,'REPORTID MUST BE SPECIFIED ON THIS CALL'
         AGO   .Z0010
.AA022   ANOP
&CNTB    SETA  K'&REPORTID
         AIF   (&CNTB EQ 2).AA023
         MNOTE 8,'REPORTID MUST BE TWO CHARACTERS '
         AGO   .Z0010
.AA023   ANOP
&REPORT  SETC  '&NAME'.'$$$$$$'
&REPORT  SETC  '&REPORT'(1,6)
&GDEPRINTCSECTDEFINED(&CNTA) SETC  '&REPORT'
&GDEPRINTREPORTDD(&CNTA)     SETC  '&ZREPORTDD'
&GDEPRINTREPORTID(&CNTA)     SETC  '&REPORTID'
.*
.*     FOUND IN TABLE TO SET PARMS
.*
.AA030     ANOP
&REPORT    SETC  '&GDEPRINTCSECTDEFINED(&CNTA)'
&ZREPORTDD SETC '&GDEPRINTREPORTDD(&CNTA)'
&ROUT01    SETC  '&ZREPORTDD'.'&GDEPRINTREPORTID(&CNTA)'(1,2)
&ROUT01ID  SETC  '&ZREPORTDD'.'.R'.'&GDEPRINTREPORTID(&CNTA)'(1,2)
&LBL       SETC  'GDEPRINT_'.'&REPORT'(1,6).'_'
.**********************************************************************
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE
.*
.**********************************************************************
.*
.*     TYPE=PARMLIST
.*
.A0010   AIF   ('&TYPE' NE 'PARMLIST').B0010
         AIF   ('&PARMLIST' EQ '').A0020
&PARMLIST DS  0D       PROGRAMS WORKAREA
         DS    CL(&LBL.DSECT_LENGTH)
         AGO   .Z0010
.A0020   ANOP
&LBL.DATAAREA DS  0D    PROGRAMS WORKAREA
         DS    CL(&LBL.DSECT_LENGTH)
         AGO   .Z0010
.*
.*     TYPE=DSECT
.*
.B0010   AIF   ('&TYPE' NE 'DSECT').C0010
&CNTA    SETA  1
.B0020   ANOP
         AIF   ('&GDEPRINTDSECTDEFINED(&CNTA)' EQ '').B0030
         AIF   ('&GDEPRINTDSECTDEFINED(&CNTA)' EQ '&NAME').Z0010
&CNTA    SETA  &CNTA+1
         AIF   (&CNTA LE 32).B0020
         MNOTE 8,'MORE THAN 32 PRINTOUTS DEFINED - LIMIT REACHED'
         AGO   .B0020
.B0030   ANOP
&GDEPRINTDSECTDEFINED(&CNTA) SETC '&NAME'
&LBL.DSECT          DSECT        PRINT PARMLIST DSECT
&LBL.COMMAND        DS   CL1     CURRENT COMMAND
&LBL.SUBCOMMAND     DS   CL1     SUBCOMMAND
&LBL.DDNAME         DS   CL8     DDNAME FOR OUTPUT
&LBL.LENGTH         DS   AL2     TOTAL LENGTH OF A BLOCK TO PRINT
&LBL.SUBLENGTH      DS   AL2     SUB AREA LENTGTH IN A BLOCK
&LBL.REPORTID       DS   CL10    ID TO PUT ON REPORT
&LBL.LINESPERPAGE   DS   PL2     LINE OF OUTPUT BEFORE PAGE BREAK
&LBL.FORCENEWPAGE   DS   CL1     FORCE A NEW PAGE NOW
&LBL.NEWPAGEALLOWED DS   CL1     IS A NEW PAGE ALLOWED
&LBL.RESETPAGENUMBER DS  CL1     RESET THE PAGE NUMBER TO 1
&LBL.RETURNCODE     DS   CL2     RETURN CODE FROM THE ROUTINE
&LBL.CHECKCOUNT     DS   PL2     COUNT OF LINE FOR TYPE=CHECK
                    DS  0F
&LBL.ROUTINEADDRESS DS   CL4     ADDRESS OF PRINT PROGRAM
&LBL.PARMADDRESS    DS   CL4     ADDRESS PARM AREA
&LBL.USERDATAAREA   DS   CL4     ADDRESS USERDATAAREA
&LBL.HEADERADDRESS  DS   CL4     ADDRESS HEADERS
                    DS   11AL4   UP TO 12 HEADERS ALLOWED
&LBL.HEADING        DS   CL133   CENTER HEADING AREA
&LBL.DSECT_LENGTH   EQU  *-&LBL.DSECT
         AGO   .Z0010
.*
.*     TYPE=OPEN
.*
.C0010   AIF   ('&TYPE' NE 'OPEN').D0010
         AIF   ('&PARMLIST' EQ '').C0020
&LABEL   LA    R1,&PARMLIST
         AGO   .C0030
.C0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.C0030   ANOP
         USING &LBL.DSECT,R1
         L     R15,=V(GDEPRINT)
         ST    R15,&LBL.ROUTINEADDRESS
         AIF      ('&ZBREAKS' NE '').C0040
&ZBREAKS          SETC  'NORMAL'
.C0040   ANOP
         AIF      ('&ZBREAKTYPE' NE '').C0050
&ZBREAKTYPE       SETC  'ALLOW'
.C0050   ANOP
         AIF      ('&ZRESETPAGENUMBER' NE '').C0060
&ZRESETPAGENUMBER SETC  'NO'
.C0060   ANOP
         AIF      ('&ZTABLELEN' NE '').C0070
&ZTABLELEN        SETC  '80'
.C0070   ANOP
         AIF      ('&ZTABLEENTRYLEN' NE '').C0080
&ZTABLEENTRYLEN   SETC  '80'
.C0080   ANOP
         AIF      ('&ZLINESPERPAGE' NE '').C0090
&ZLINESPERPAGE    SETC  '60'
.C0090   ANOP
&CMD     SETC  '1'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=WRITE
.*
.D0010   AIF   ('&TYPE' NE 'WRITE').E0010
         AIF   ('&PARMLIST' EQ '').D0020
&LABEL   LA    R1,&PARMLIST
         AGO   .D0030
.D0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.D0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=CHARZONENUM
.*
.E0010   AIF   ('&TYPE' NE 'CHARZONENUM').F0010
         AIF   ('&PARMLIST' EQ '').E0020
&LABEL   LA    R1,&PARMLIST
         AGO   .E0030
.E0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.E0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '2'
         AGO   .P0010
.*
.*     TYPE=DUMP
.*
.F0010   AIF   ('&TYPE' NE 'DUMP').G0010
         AIF   ('&PARMLIST' EQ '').F0020
&LABEL   LA    R1,&PARMLIST
         AGO   .F0030
.F0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.F0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '3'
         AGO   .P0010
.*
.*     TYPE=TABLE
.*
.G0010   AIF   ('&TYPE' NE 'TABLE').H0010
         AIF   ('&PARMLIST' EQ '').G0020
&LABEL   LA    R1,&PARMLIST
         AGO   .G0030
.G0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.G0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '4'
         AGO   .P0010
.*
.*     TYPE=HEX
.*
.H0010   AIF   ('&TYPE' NE 'HEX').I0010
         AIF   ('&PARMLIST' EQ '').H0020
&LABEL   LA    R1,&PARMLIST
         AGO   .H0030
.H0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.H0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '5'
         AGO   .P0010
.*
.*     TYPE=TABLEORHEX
.*
.I0010   AIF   ('&TYPE' NE 'TABLEORHEX').J0010
         AIF   ('&PARMLIST' EQ '').I0020
&LABEL   LA    R1,&PARMLIST
         AGO   .I0030
.I0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.I0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '6'
         AGO   .P0010
.*
.*     TYPE=STORAGE
.*
.J0010   AIF   ('&TYPE' NE 'STORAGE').K0010
         AIF   ('&PARMLIST' EQ '').J0020
&LABEL   LA    R1,&PARMLIST
         AGO   .J0030
.J0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.J0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=TABLEORHEXWITHTIME
.*
.K0010   AIF   ('&TYPE' NE 'TABLEORHEXWITHTIME').L0010
         AIF   ('&PARMLIST' EQ '').K0020
&LABEL   LA    R1,&PARMLIST
         AGO   .K0030
.K0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.K0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '8'
         AGO   .P0010
.*
.*     TYPE=DUMPSTORAGEANDTIME
.*
.L0010   AIF   ('&TYPE' NE 'DUMPSTORAGEANDTIME').M0010
         AIF   ('&PARMLIST' EQ '').L0020
&LABEL   LA    R1,&PARMLIST
         AGO   .L0030
.L0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.L0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  '9'
         AGO   .P0010
.*
.*     TYPE=TRACE
.*
.M0010   AIF   ('&TYPE' NE 'TRACE').N0010
         AIF   ('&PARMLIST' EQ '').M0020
&LABEL   LA    R1,&PARMLIST
         AGO   .M0030
.M0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.M0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '2'
&SUBCMD  SETC  'T'
         AGO   .P0010
.*
.*     TYPE=CLOSE
.*
.N0010   AIF   ('&TYPE' NE 'CLOSE').O0010
         AIF   ('&PARMLIST' EQ '').N0020
&LABEL   LA    R1,&PARMLIST
         AGO   .N0030
.N0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.N0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '3'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=CHECK
.*
.O0010   AIF   ('&TYPE' NE 'CHECK').Q0010
         AIF   ('&PARMLIST' EQ '').O0020
&LABEL   LA    R1,&PARMLIST
         AGO   .O0030
.O0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.O0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '4'
&SUBCMD  SETC  '1'
         AGO   .P0010
.*
.*     TYPE=PAGENUM
.*
.Q0010   AIF   ('&TYPE' NE 'PAGENUM').Z0020
         AIF   ('&PARMLIST' EQ '').Q0020
&LABEL   LA    R1,&PARMLIST
         AGO   .Q0030
.Q0020   ANOP
&LABEL   LA    R1,&LBL.DATAAREA
.Q0030   ANOP
         USING &LBL.DSECT,R1
&CMD     SETC  '5'
&SUBCMD  SETC  '1'
         AGO   .P0010
.**********************************************************************
.*
.*     ALL THE PARMS ARE SET UP TO BUILD STATEMENTS SO BUILD STATEMENTS
.*
.**********************************************************************
.P0010   ANOP
.*
.*     DO COMMAND AND SUBCOMMAND
.*
         MVI   &LBL.COMMAND,C'&CMD'
         MVI   &LBL.SUBCOMMAND,C'&SUBCMD'
.*
.*     DO REPORT DD
.*
         AIF   ('&TYPE' EQ 'OPEN').P0010A
         AIF   ('&REPORTDD' EQ '').P0011
.P0010A  ANOP
         MVC   &LBL.DDNAME,=CL8'&ROUT01'
.*
.*     DO TABLE LENGTH AND ENTRY LENGTH
.*
.P0011   AIF   ('&ZTABLELEN' EQ '').P0012
         AIF   ('&ZTABLELEN'(1,1) EQ '(').P0011A
         MVC   &LBL.LENGTH,=AL2(&ZTABLELEN)
         AGO   .P0012
.P0011A  STCM  &ZTABLELEN,B'0011',&LBL.LENGTH
.P0012   AIF   ('&ZTABLEENTRYLEN' EQ '').P0013
         AIF   ('&ZTABLEENTRYLEN'(1,1) EQ '(').P0012A
         MVC   &LBL.SUBLENGTH,=AL2(&ZTABLEENTRYLEN)
         AGO   .P0013
.P0012A  STCM  &ZTABLEENTRYLEN,B'0011',&LBL.SUBLENGTH
.*
.*     DO REPORT ID
.*
.P0013   AIF   ('&ROUT01ID' EQ '').P0014
         MVC   &LBL.REPORTID,=CL10'&ROUT01ID'
.*
.*     DO LINES PER PAGE
.*
.P0014   AIF   ('&ZLINESPERPAGE' EQ '').P0015
         ZAP   &LBL.LINESPERPAGE,=P'&ZLINESPERPAGE'
.*
.*     DO BREAKS
.*
.P0015   AIF   ('&ZBREAKS' EQ '').P0020
         AIF   ('&ZBREAKS' EQ 'NORMAL').P0016
         AIF   ('&ZBREAKS' EQ 'FORCE').P0017
         AIF   ('&ZBREAKS' EQ 'SUBHEADING').P0018
 MNOTE *,'INVALID BREAKS PARAMETER. USE NORMAL, FORCE, OR SUBHEADING'
.P0016   ANOP
         MVI   &LBL.FORCENEWPAGE,C'1'
         AGO   .P0020
.P0017   ANOP
         MVI   &LBL.FORCENEWPAGE,C'2'
         AGO   .P0020
.P0018   ANOP
         MVI   &LBL.FORCENEWPAGE,C'3'
         AGO   .P0020
.*
.*     DO BREAK TYPE
.*
.P0020   AIF   ('&ZBREAKTYPE' EQ '').P0030
         AIF   ('&ZBREAKTYPE' EQ 'ALLOW').P0021
         AIF   ('&ZBREAKTYPE' EQ 'PROHIBIT').P0022
         AIF   ('&ZBREAKTYPE' EQ 'NOHEADINGS').P0023
     MNOTE *,'BREAKTYPE IS INVALID. USE ALLOW, PROHIBIT, OR NOHEADINGS'
.P0021   ANOP
         MVI   &LBL.NEWPAGEALLOWED,C'1'
         AGO   .P0030
.P0022   ANOP
         MVI   &LBL.NEWPAGEALLOWED,C'2'
         AGO   .P0030
.P0023   ANOP
         MVI   &LBL.NEWPAGEALLOWED,C'3'
         AGO   .P0030
.*
.*     DO LINE NO RESET
.*
.P0030   AIF   ('&ZRESETPAGENUMBER' EQ '').P0040
         AIF   ('&ZRESETPAGENUMBER' EQ 'YES').P0031
         AIF   ('&ZRESETPAGENUMBER' EQ 'NO').P0032
     MNOTE *,'RESETPAGENUMBER IS INVALID. USE YES OR NO'
.P0031   ANOP
         MVI   &LBL.RESETPAGENUMBER,C'2'
         AGO   .P0040
.P0032   ANOP
         MVI   &LBL.RESETPAGENUMBER,C'1'
         AGO   .P0040
.*
.*     DO RETURN CODE
.*
.P0040   ANOP
         MVC   &LBL.RETURNCODE,=CL2'00'
.**********************************************************************
.*
.*     BUILD PARM LIST
.*
.**********************************************************************
.*
.*     FIRST PARM
.*
         LA    R14,&LBL.COMMAND
         ST    R14,&LBL.PARMADDRESS
.*
.*     SECOND PARM
.*
         AIF   ('&CHECK' EQ '').P0060
         ZAP   &LBL.CHECKCOUNT,=P'&CHECK'
         LA    R14,&LBL.CHECKCOUNT
         ST    R14,&LBL.USERDATAAREA
         AGO   .P0070
.P0060   ANOP
         AIF   ('&DATA' EQ '').P0065
         LA    R14,&DATA
         ST    R14,&LBL.USERDATAAREA
         AGO   .P0070
.P0065   ANOP
         LA    R14,0
         ST    R14,&LBL.USERDATAAREA
.P0070   ANOP
.*
.*     THIRD PARM
.*
&CNTA    SETA  1
&CNTB    SETA  1
         AIF   ('&TITLE' EQ '').P0080
         AIF   ('&TITLE'(1,1) EQ '''').P0075
&CNTB    SETA  2
&CNTC    SETA  L'&TITLE
&CNTD    SETA  (133-&CNTC)/2
         MVC   &LBL.HEADING,=CL133' '
         MVC   &LBL.HEADING+&CNTD.(&CNTC),&TITLE
         LA    R14,&LBL.HEADING
         ST    R14,&LBL.HEADERADDRESS
         AGO   .P0080
.P0075   ANOP
&CNTB    SETA  2
&CNTC    SETA  K'&TITLE-2
&CNTD    SETA  (133-&CNTC)/2
         MVC   &LBL.HEADING,=CL133' '
         MVC   &LBL.HEADING+&CNTD.(&CNTC),=C&TITLE
         LA    R14,&LBL.HEADING
         ST    R14,&LBL.HEADERADDRESS
         AGO   .P0080
.*
.*     FOURTH THRU FIFTEENTH PARMS
.*
.P0080   ANOP
&CNTC    SETA  N'&HEADINGS
         AIF   (&CNTC EQ 0).P0090
.P0081   AIF   (&CNTA GT &CNTC).P0086
         AIF   (&CNTB GT 12).P0084
&CNTD    SETA  4*(&CNTB-1)
         LA    R14,&HEADINGS(&CNTA)
         ST    R14,&LBL.HEADERADDRESS+&CNTD
&CNTA    SETA &CNTA+1
&CNTB    SETA &CNTB+1
         AGO   .P0081
.P0084   MNOTE 8,'MAXUMIM OF HEADING LINES EXCEEDED.'
         AGO   .P0090
.P0086   ANOP
&CNTD    SETA  4*(&CNTB-2)
         OI    &LBL.HEADERADDRESS+&CNTD,X'80'
.P0090   ANOP
.**********************************************************************
.*
.*     CALL THE ROUTINE
.*
.**********************************************************************
         L     R15,&LBL.ROUTINEADDRESS
         LA    1,&LBL.PARMADDRESS
         CALL  (15)
.**********************************************************************
.*
.*     CHECK RETURN CODES
.*
.**********************************************************************
         AIF   ('&OK' NE '').P0099
         AIF   ('&NOTOK' NE '').P0099
         AIF   ('&ZBREAKS' EQ 'FORCE').P0099
         DROP  R1
         AGO   .Z0010
.P0099   AIF   ('&PARMLIST' EQ '').P0100
         LA    R1,&PARMLIST
         AGO   .P0110
.P0100   ANOP
         LA    R1,&LBL.DATAAREA
.P0110   ANOP
         AIF   ('&ZBREAKS' NE 'FORCE').P0120
         MVI   &LBL.FORCENEWPAGE,C'1'
.P0120   ANOP
         AIF   ('&TYPE' EQ 'CHECK').P0150
.*
.*     RETURN CODE CHECKING FOR ALL BUT TYPE=CHECK
.*
         AIF   ('&OK' EQ '').P0130
         CLI   &LBL.RETCODE,C'0'
         BE    &OK
.P0130   AIF   ('&NOTOK' EQ '').P0140
         CLI   &LBL.RETCODE,C'0'
         BNE   &NOTOK
.P0140   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     RETURN CODE CHECKING FOR TYPE=CHECK
.*
.P0150   ANOP
         AIF   ('&OK' EQ '').P0160
         CP    &LBL.CHECKCOUNT,=P'0'
         BNE   &OK
.P0160   AIF   ('&NOTOK' EQ '').P0170
         CP    &LBL.CHECKCOUNT,=P'0'
         BE    &NOTOK
.P0170   ANOP
         DROP  R1
         AGO   .Z0010
.*
.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE
.*
.**********************************************************************
.Z0010   ANOP
         MEXIT
.Z0020   ANOP
         MNOTE 8,'*** TYPE VALUE UNKNOWN, CHECK TYPE KEYWORD ***'
         MEND
         MACRO
&TAG     GDESUBEN
         GBLC  &TAGNAME,&TAGREGS
.**********************************************************************
.*                                                                    *
.*  IF RENT SUPPLIED, THEN USE AS DSECT TO SAVE STORAGE AREA          *
.*                                                                    *
.**********************************************************************
         AIF   ('&TAGREGS' EQ 'NO').B1000
.A1000   ANOP
&TAG     L     R14,&TAGREGS
         LM    R2,R12,&TAGREGS+16
         BR    R14
         SPACE
         DC    C'LTORG START &TAGNAME'
         LTORG
         DC    C'END LTORG &TAGNAME'
         AGO   .Z1000
.**********************************************************************
.*                                                                    *
.*  IF RENT NOT SUPPLIED, THEN USE LOCAL SAVE AREA                    *
.*                                                                    *
.**********************************************************************
.B1000   ANOP
&TAG     L     R14,&TAGNAME+8
         LM    R2,R12,&TAGNAME+24
         BR    R14
         SPACE
         DC    C'LTORG START &TAGNAME'
         LTORG
         DC    C'END LTORG &TAGNAME'
         AGO   .Z1000
.**********************************************************************
.*                                                                    *
.*  GLOBALS ARE SET, CODE IS GENERATED, SO GET OUT OF HERE ALIVE.     *
.*                                                                    *
.**********************************************************************
.Z1000   ANOP
         MEND
         MACRO
&TAG     GDESUBST &RENT=NO
         GBLC  &TAGNAME,&TAGREGS
         LCLC  &SAREA
.**********************************************************************
&TAGNAME SETC  '&TAG'
&TAGREGS SETC  '&TAG'(1,3).'&SYSNDX'
&SAREA   SETC  '&RENT'
.**********************************************************************
.*                                                                    *
.*  IF RENT SUPPLIED, THEN USE AS DSECT TO SAVE STORAGE AREA          *
.*                                                                    *
.**********************************************************************
         AIF   ('&RENT' EQ 'NO').B1000
.A1000   ANOP
&SAREA   DSECT
&TAGREGS DS  15F
&SYSECT  CSECT
         DROP  R12
         CNOP  0,4
&TAGNAME STM   R14,R12,&TAGREGS
         LR    R12,R15
         USING &TAGNAME,R12
         AGO   .Z1000
.**********************************************************************
.*                                                                    *
.*  IF RENT NOT SUPPLIED, THEN USE LOCAL SAVE AREA                    *
.*                                                                    *
.**********************************************************************
.B1000   ANOP
&TAGREGS SETC  'NO'
         DROP  R12
         CNOP  0,4
&TAGNAME STM   R14,R12,8(R15)
         B     68(R15)
         DC    15F'-1'
         LR    R12,R15
         USING &TAGNAME,R12
         AGO   .Z1000
.**********************************************************************
.*                                                                    *
.*  GLOBALS ARE SET, CODE IS GENERATED, SO GET OUT OF HERE ALIVE.     *
.*                                                                    *
.**********************************************************************
.Z1000   ANOP
         MEND
         MACRO
&TAG     GDEGOSUB &ROUTINE,&PARM
         AIF   (T'&PARM EQ 'O').A2000
&TAG     BAL   R1,*+8
         DC    AL4(&PARM)
         L     R15,=A(&ROUTINE)
         BALR  R14,R15
         LTR   R15,R15
         MEXIT
.A2000   ANOP
&TAG     L     R15,=A(&ROUTINE)
         BALR  R14,R15
         LTR   R15,R15
         MEND
         MACRO
&TAG     GDEEXIT
         GBLB  &GDESAVE
         GBLB  &GDERENT
         GBLB  &GDEREGS
         GBLB  &GDEMODE
         GBLC  &GDESANM
.**********************************************************************
.*  ASSIGN DEFAULTS                                                   *
.**********************************************************************
&TAG     DS   0H
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0100 AIF   (&GDEMODE).GDE0400
         AIF   (&GDESAVE).GDE0110
         AGO   .GDE0300
.GDE0110 AIF   (&GDERENT).GDE0200
         LR    R1,R13
         L     R13,4(R1)
         XC    8(4,R13),8(R13)
         XC    4(4,R1),4(R1)
         L     R14,12(R13)
         LM    R2,R12,28(R13)
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0200 ANOP
         LR    R1,R13
         L     R13,4(R1)
         XC    8(4,R13),8(R13)
         XC    4(4,R1),4(R1)
         STORAGE RELEASE,ADDR=(1),LENGTH=72
         L     R14,12(R13)
         LM    R2,R12,28(R13)
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  RETURN R14                                                        *
.**********************************************************************
.GDE0300 ANOP
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0400 AIF   (&GDESAVE).GDE0410
         AGO   .GDE0600
.GDE0410 AIF   (&GDERENT).GDE0500
         PR
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0500 ANOP
         LAE   R1,0(R13)
         STORAGE RELEASE,ADDR=(1),LENGTH=72
         PR
         AGO   .GDE0900
.**********************************************************************
.*  RETURN PR                                                         *
.**********************************************************************
.GDE0600 ANOP
         PR
.GDE0900 ANOP
         LTORG
         MEND
         MACRO
&TAG     GDESTART &BR0,&BR1,&BR2,&BR3,&BR4,&BR5,&BR6,                  C
               &SAVEAREA=NO,&RENT=NO,&ARMODE=NO
         GBLB  &GDESAVE
         GBLB  &GDEMODE
         GBLB  &GDERENT
         GBLB  &GDEREGS
         GBLC  &GDESANM
         LCLC  &TAGNAME,&C
         LCLC  &DBR0,&DBR1,&DBR2,&DBR3,&DBR4,&DBR5,&DBR6
.**********************************************************************
.*  ASSIGN DEFAULTS                                                   *
.**********************************************************************
&GDESANM SETC  '$GDE'.'&SYSNDX'        POSSIBLE SAVE AREA NAME
&C       SETC  ','                     COMMA FOR USING
&TAGNAME SETC  'GDENONAME'             POSSIBLE DEFAULT PGM NAME
         AIF   ('&TAG' EQ '').GDE0010
&TAGNAME SETC  '&TAG'
.GDE0010 ANOP
&DBR0    SETC  '&BR0'
&DBR1    SETC  '&BR1'
&DBR2    SETC  '&BR2'
&DBR3    SETC  '&BR3'
&DBR4    SETC  '&BR4'
&DBR5    SETC  '&BR5'
&DBR6    SETC  '&BR6'
         AIF   ('&DBR0' NE '').GDE0020
&DBR0    SETC  'R12'                   DEFAULT BASE REG
.GDE0020 ANOP
&GDESAVE SETB  1
         AIF   (T'&SAVEAREA NE 'O').GDE0030
&GDESAVE SETB  0
.GDE0030 ANOP
&GDERENT SETB  0
         AIF   ('&RENT' EQ 'NO').GDE0040
         AIF   ('&RENT' NE 'YES').GDE0035
&GDERENT SETB  1
         AGO   .GDE0040
.GDE0035 MNOTE 8,'INVALID RENT, MUST BE YES OR NO'
.GDE0040 ANOP
         AIF   ('&ARMODE' EQ 'NO').GDE0050
         AIF   ('&ARMODE' NE 'YES').GDE0045
&GDEMODE SETB  1
         AGO   .GDE0050
.GDE0045 MNOTE 8,'INVALID ARMODE, MUST BE YES OR NO'
.GDE0050 ANOP
.**********************************************************************
.*  GENERATE CSECT ENTRY CODE AND ID LITERALS                         *
.**********************************************************************
&TAGNAME CSECT
         B     48(15)
         PUSH  PRINT
         PRINT ON,GEN
         DC    FL1'44'
         DC    CL9'&TAGNAME'
         DC    CL9'&SYSDATE'
         DC    CL5'&SYSTIME'
         DC    CL20'COPYRIGHT GDE, INC.'
.**********************************************************************
.*  GENERATE REGISTER ASSIGNMENTS                                     *
.**********************************************************************
         AIF   (&GDEREGS).GDE0060
&GDEREGS SETB   1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
AR0      EQU   0
AR1      EQU   1
AR2      EQU   2
AR3      EQU   3
AR4      EQU   4
AR5      EQU   5
AR6      EQU   6
AR7      EQU   7
AR8      EQU   8
AR9      EQU   9
AR10     EQU   10
AR11     EQU   11
AR12     EQU   12
AR13     EQU   13
AR14     EQU   14
AR15     EQU   15
.GDE0060 ANOP
         POP   PRINT
.**********************************************************************
.*  SAVE INCOMING REGISTERS                                           *
.**********************************************************************
         AIF   (&GDEMODE).GDE0400
         STM   14,12,12(13)
.**********************************************************************
.*  GENERATE BASE REGISTER ASSIGNMENTS                                *
.**********************************************************************
.GDE0100 ANOP
         AIF   ('&DBR1' NE '').GDE0110
         AIF   ('&DBR0' EQ 'R15').GDE0101
         LR    &DBR0,R15
.GDE0101 ANOP
         USING &TAGNAME&C&DBR0
         AGO   .GDE0200
.GDE0110 AIF   ('&DBR2' NE '').GDE0120
         AIF   ('&DBR0' EQ 'R15').GDE0111
         LR    &DBR0,R15
.GDE0111 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         USING &TAGNAME&C&DBR0&C&DBR1
         AGO   .GDE0200
.GDE0120 AIF   ('&DBR3' NE '').GDE0130
         AIF   ('&DBR0' EQ 'R15').GDE0121
         LR    &DBR0,R15
.GDE0121 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2
         AGO   .GDE0200
.GDE0130 AIF   ('&DBR4' NE '').GDE0140
         AIF   ('&DBR0' EQ 'R15').GDE0131
         LR    &DBR0,R15
.GDE0131 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3
.GDE0140 AIF   ('&DBR5' NE '').GDE0150
         AIF   ('&DBR0' EQ 'R15').GDE0141
         LR    &DBR0,R15
.GDE0141 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4
         AGO   .GDE0200
.GDE0150 AIF   ('&DBR6' NE '').GDE0160
         AIF   ('&DBR0' EQ 'R15').GDE0151
         LR    &DBR0,R15
.GDE0151 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         LA    &DBR5,2048(&DBR4)
         LA    &DBR5,2048(&DBR5)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5
         AGO   .GDE0200
.GDE0160 ANOP
         AIF   ('&DBR0' EQ 'R15').GDE0161
         LR    &DBR0,R15
.GDE0161 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         LA    &DBR5,2048(&DBR4)
         LA    &DBR5,2048(&DBR5)
         LA    &DBR6,2048(&DBR5)
         LA    &DBR6,2048(&DBR6)
        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0200 ANOP
         AIF   (&GDESAVE).GDE0210
         AGO   .GDE0900
.GDE0210 AIF   (&GDERENT).GDE0300
         B     &GDESANM+72
&GDESANM DC    3F'0',15F'-1'
         LA    R1,&GDESANM
         ST    R1,8(R13)
         ST    R13,4(R1)
         L     R1,24(R13)
         L     R13,8(R13)
         XC    0(4,R13),0(R13)
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0300 ANOP
         STORAGE OBTAIN,LENGTH=72
         ST    R1,8(R13)
         ST    R13,4(R1)
         LM    R0,R1,20(R13)
         L     R13,8(R13)
         XC    0(4,R13),0(R13)
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE BASE REGISTER ASSIGNMENTS                                *
.**********************************************************************
.GDE0400 ANOP
         BAKR  14,0
         SAC   512
         SYSSTATE ASCENV=AR
         AIF   ('&DBR1' NE '').GDE0410
         AIF   ('&DBR0' EQ 'R15').GDE0401
         LAE   &DBR0,0(R15,0)
.GDE0401 ANOP
         USING &TAGNAME&C&DBR0
         AGO   .GDE0500
.GDE0410 AIF   ('&DBR2' NE '').GDE0420
         AIF   ('&DBR0' EQ 'R15').GDE0411
         LAE   &DBR0,0(R15,0)
.GDE0411 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         USING &TAGNAME&C&DBR0&C&DBR1
         AGO   .GDE0500
.GDE0420 AIF   ('&DBR3' NE '').GDE0430
         AIF   ('&DBR0' EQ 'R15').GDE0421
         LAE   &DBR0,0(R15,0)
.GDE0421 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2
         AGO   .GDE0500
.GDE0430 AIF   ('&DBR4' NE '').GDE0440
         AIF   ('&DBR0' EQ 'R15').GDE0431
         LAE   &DBR0,0(R15,0)
.GDE0431 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3
.GDE0440 AIF   ('&DBR5' NE '').GDE0450
         AIF   ('&DBR0' EQ 'R15').GDE0441
         LAE   &DBR0,0(R15,0)
.GDE0441 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4
         AGO   .GDE0500
.GDE0450 AIF   ('&DBR6' NE '').GDE0460
         AIF   ('&DBR0' EQ 'R15').GDE0451
         LAE   &DBR0,0(R15,0)
.GDE0451 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         LAE   &DBR5,2048(&DBR4)
         LAE   &DBR5,2048(&DBR5)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5
         AGO   .GDE0500
.GDE0460 ANOP
         AIF   ('&DBR0' EQ 'R15').GDE0461
         LAE   &DBR0,0(R15,0)
.GDE0461 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         LAE   &DBR5,2048(&DBR4)
         LAE   &DBR5,2048(&DBR5)
         LAE   &DBR6,2048(&DBR5)
         LAE   &DBR6,2048(&DBR6)
        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0500 ANOP
         AIF   (&GDESAVE).GDE0510
         AGO   .GDE0900
.GDE0510 AIF   (&GDERENT).GDE0600
         B     &GDESANM+72
&GDESANM DC    3F'0',15F'-1'
         LAE   R13,&GDESANM
         MVC   4(4,R13),=C'F1SA'
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0600 ANOP
         STORAGE OBTAIN,LENGTH=72
         LAE   R13,0(R1)
         MVC   4(4,R13),=C'F1SA'
.GDE0900 ANOP
         MEND
         GDEPRINT TYPE=DSECT,REPORTDD=GDEBWO,NAME=STATUS,              X
               REPORTID=01
         GDEPRINT TYPE=DSECT,REPORTDD=GDEBWO,NAME=PARMDP,              X
               REPORTID=02
         GDEPRINT TYPE=DSECT,REPORTDD=GDEBWO,NAME=BWOPRT,              X
               REPORTID=03
         GDEPRINT TYPE=DSECT,REPORTDD=GDEBWO,NAME=RETRSN,              X
               REPORTID=04
* ------------------------------------------------------------------- *
* PROGRAM LOGIC STARTS HERE                                           *
* ------------------------------------------------------------------- *
GDEBWOBT GDESTART R12,R11
         L     R10,=A(GDEDSECT)
         USING GDEDSECT,R10
         GDEGOSUB PROC1000
         GDEGOSUB PROC2000
         BNZ   MAIN9010
         GDEGOSUB PROC3000
MAIN9000 XR    R15,R15
         B     MAIN9020
MAIN9010 LA    R15,4
         B     MAIN9020
MAIN9020 GDEEXIT
         LTORG
GDEDSECT DS   0D
IN1REC   DS    CL80
GDEBWOA DCB    DDNAME=GDEBWOA,MACRF=(GM),DSORG=PS,                     X
               RECFM=FB,LRECL=80,EODAD=PROC4910
CONTROL_SW       DC     C'Y'   Y=PROCESS COMMAND   N=SKIP COMMAND
CURRENT_CMND     DC     CL4' '
CURRENT_DSN      DC     CL44' '
CURRENT_DSNLEN   DC     AL4(0)
CURRENT_BWO      DC     CL3' '
RESULT_BWO       DC     CL3' '
RESULT_DATE      DC     CL10' '
RESULT_TIME      DC     CL10' '
REPORT01_SW      DC     C'?'
REPORT02_SW      DC     C'?'
GDEBWOA_ERR      DC     C'N'
***********************************************************************
* PARMLIST FOR IGWABWO CALL
***********************************************************************
IGWABWO_PARMLIST DS   10A
IGWABWO_RETCODE  DS     F    0  RETURN CODE
IGWABWO_RSNCODE  DS     F    4  IGWABWO_RSNCODE
IGWABWO_PROBDET  DS     D    8  PROBLEM DETERMINATION CODE
IGWABWO_FUNCTON  DS     F    12 FUNCTION
IGWABWO_DSNLEN   DS     F    16 DATA SET NAME LENGTH
IGWABWO_DSN      DS     CL44 20 DATA SET NAME
IGWABWO_SELECT   DC     F'3' 24 INTERESTED IN BWO FLAGS & RECOV POINT
IGWABWO_BWOFLAGS DS    3F    28 BWO INDICATOR FLAGS
                 ORG            IGWABWO_BWOFLAGS
IGWABWO_BWOFLAG1 DS     F       BWO INDICATOR 1
IGWABWO_BWOFLAG2 DS     F       BWO INDICATOR 2
IGWABWO_BWOFLAG3 DS     F       BWO INDICATOR 3
                 ORG
IGWABWO_BWOTIME  DS     D    32 BWO RECOVERY POINT TIME
IGWABWO_RESERVED DS    2D    36 RESERVED
***********************************************************************
* IGWABWO_FUNCTION NOTEST
*             F'1'        READ THE VALUES
*             F'2'        SET THE VALUSE
***********************************************************************
IGWABWO_READ     EQU    0       READ
IGWABWO_SET      EQU    1       SET
***********************************************************************
* IGWABWO_SELECT  NOTES
*             F'1'        INTERESTED IN BWO FLAGS
*             F'2'        INTERESTED IN BWO RECOVERY POINT
*             F'3'        INTERESTED IN BWO FLAGS & RECOV POINT
***********************************************************************
IGWABWO_WORKAREA DS CL9
IGWABWO_HEXTABLE DC C'0123456789ABCDEF'
IGWABWO_DATEANDTIME  DC   2F'0'
*  1F    0CYYDDDF
*        C = 00 FOR 1900
*        C = 01 FOR 2000
*        F IS SIGN
*  1F    HHMMSSTF
*        F IS SIGN
***********************************************************************
TIME_STORAGE   DC   4F'0'
*  2F    HHMMSSTHMIJU0000  FOR TIME
*  1F    0YYYYDDD
*  1F    RESERVED
***********************************************************************
         GDEPRINT TYPE=PARMLIST,NAME=STATUS,                           X
               REPORTID=01
         GDEPRINT TYPE=PARMLIST,NAME=PARMDP,                           X
               REPORTID=02
         GDEPRINT TYPE=PARMLIST,NAME=BWOPRT,                           X
               REPORTID=03
         GDEPRINT TYPE=PARMLIST,NAME=RETRSN,                           X
               REPORTID=04
***********************************************************************
*                                                                     *
* INITIAL SETUP LOGIC                                                 *
*                                                                     *
***********************************************************************
PROC1000 GDESUBST
         OPEN  (GDEBWOA,INPUT)
         MVI   REPORT01_SW,C'N'
         GDEDDN GDEBWO01,FOUND=PROC1010,NOTFOUND=PROC1020
PROC1010 MVI   REPORT01_SW,C'Y'
         GDEPRINT TYPE=OPEN,NAME=STATUS,                               X
               TITLE='CONTROL STATEMENT PROCESSING FOR GDEBWOBT',      X
               HEADINGS=(PROC1HL1)
PROC1020 MVI   REPORT02_SW,C'N'
         GDEDDN GDEBWO02,FOUND=PROC1030,NOTFOUND=PROC1900
PROC1030 MVI   REPORT02_SW,C'Y'
         GDEPRINT TYPE=OPEN,NAME=PARMDP,                               X
               TITLE='BWO CALLING TRACING REPORT',                     X
               HEADINGS=(PROC1HL2,PROC1HL3)
PROC1900 GDESUBEN
*                   ----+----1----+----2----+----3----+----4----+----5
PROC1HL1 DC    CL15'0'
         DC    CL52'/----------------- CONTROL CARD -----------------/'
         DC    CL42'/--------------- STATUS ---------------/'
         DC    CL24' '
PROC1HL2 DC    CL133'0DATE  TIME ADDRESS         HEX DATA              X
                                                                  DISPLX
               AY DATA                    '
PROC1HL3 DC    CL133' ---------- -------         ----------------------X
               -------------------------------------------------- -----X
               ---------------------------'
***********************************************************************
*                                                                     *
* CALL READ FILE, CALL WRITE MESSAGES, TRACE IF WE NEED TO            *
*                                                                     *
***********************************************************************
PROC2000 GDESUBST
PROC2010 GDEGOSUB PROC4000
         BNZ   PROC2900
         GDEGOSUB PROC5000
         B     PROC2010
PROC2900 LA    R15,0
         B     PROC2920
PROC2910 LA    R15,4
         B     PROC2920
PROC2920 GDESUBEN
***********************************************************************
*                                                                     *
* TERMINATION LOGIC                                                   *
*                                                                     *
***********************************************************************
PROC3000 GDESUBST
         CLOSE (GDEBWOA,)
         CLI   REPORT01_SW,C'N'
         BE    PROC3010
         MVC   PROC4_PRINT,=CL133' END OF PROCESSING '
         GDEGOSUB SERV2000,PROC3_PRINT
         GDEGOSUB SERV4000
         GDEGOSUB SERV6000
         GDEPRINT ,NAME=STATUS,TYPE=CLOSE
PROC3010 CLI   REPORT02_SW,C'N'
         BE    PROC3900
         GDEPRINT ,NAME=PARMDP,TYPE=CLOSE
PROC3900 GDESUBEN
PROC3_PRINT    DC  CL133' '
***********************************************************************
*                                                                     *
* READ INPUT CARDS AND PARSE                                          *
*                                                                     *
***********************************************************************
PROC4000 GDESUBST
         CLI   PROC4_FIRSTTIME,C'Y'
         BE    PROC4002
PROC4001 MVC   PROC4_PRINT,=CL133'0'
         GDEGOSUB SERV2000,PROC4_PRINT
PROC4002 MVI   PROC4_FIRSTTIME,C'N'
         GET   GDEBWOA,IN1REC
         MVC   PROC4_PRINT,=CL133' CONTROL CARD=>'
         MVC   PROC4_PRINT+15(50),IN1REC
         CLC   =C'SHOW=',IN1REC
         BE    PROC4010
         CLC   =C'TEST=',IN1REC
         BE    PROC4020
         CLC   =C'SET=',IN1REC
         BE    PROC4030
         CLC   =C'BWO=',IN1REC
         BE    PROC4040
         CLC   =C'DSN=',IN1REC
         BE    PROC4050
         CLC   =C'RESET ',IN1REC
         BE    PROC4060
PROC4005 MVC   PROC4_PRINT+110(23),=CL23'<===== ERROR '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVI   CONTROL_SW,C'N'
         MVI   GDEBWOA_ERR,C'Y'
         B     PROC4001
***********************************************************************
* SHOW= SYNTAX, STATUS CHECKING                                       *
***********************************************************************
PROC4010 MVC   CURRENT_CMND,=CL4'SHOW'
         CLC   IN1REC+5(44),=CL133' '
         BNE   PROC4015
         CLC   CURRENT_DSN,=CL133' '
         BE    PROC4011
         MVC   PROC4_PRINT+67(40),=CL40'SHOW WITH CURRENT DSNAME  '
         MVC   PROC4_PRINT+120(13),=CL13'ACCEPTED'
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_DSN
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4900
PROC4011 MVC   PROC4_PRINT+67(40),=CL40'SHOW WITH CURRENT DSNAME  '
         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO CURRENT DSN'
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' '
         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVI   CONTROL_SW,C'N'
         B     PROC4001
PROC4015 MVC   CURRENT_DSN,IN1REC+5
         MVC   PROC4_PRINT+67(40),=CL40'SHOW WITH COMMAND DSNAME  '
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_DSN
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4900
***********************************************************************
* TEST= SYNTAX, STATUS CHECKING                                       *
***********************************************************************
PROC4020 MVC   CURRENT_CMND,=CL4'TEST'
         CLC   CURRENT_DSN,=CL133' '
         BE    PROC4028
         CLC   IN1REC+5(3),=CL133' '
         BNE   PROC4025
         CLC   CURRENT_BWO,=CL133' '
         BE    PROC4021
         MVC   PROC4_PRINT+67(40),=CL40'TEST WITH CURRENT DSNAME,BWO'
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_DSN
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT BWO==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_BWO
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4900
PROC4021 MVC   PROC4_PRINT+67(40),=CL40'TEST WITH CURRENT DSNAME,BWO'
         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO DSN,BWO'
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' '
         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVI   CONTROL_SW,C'N'
         B     PROC4001
PROC4025 MVC   CURRENT_BWO,IN1REC+5
         OC    CURRENT_BWO,=XL3'F0F0F0'
         MVC   PROC4_PRINT+67(40),=CL40'TEST WITH COMMAND BWO  '
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_DSN
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' COMMAND BWO==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(3),CURRENT_BWO
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4900
PROC4028 MVC   PROC4_PRINT+67(40),=CL40'TEST WITH CURRENT DSNAME,BWO'
         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO CURRENT DSN'
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' '
         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVI   CONTROL_SW,C'N'
         B     PROC4001
***********************************************************************
* SET= SYNTAX, STATUS CHECKING                                        *
***********************************************************************
PROC4030 MVC   CURRENT_CMND,=CL4'SET '
         CLC   CURRENT_DSN,=CL133' '
         BE    PROC4038
         CLC   IN1REC+4(3),=CL133' '
         BNE   PROC4035
         CLC   CURRENT_BWO,=CL133' '
         BE    PROC4031
         MVC   PROC4_PRINT+67(40),=CL40'SET WITH CURRENT DSNAME,BWO'
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_DSN
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT BWO==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_BWO
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4900
PROC4031 MVC   PROC4_PRINT+67(40),=CL40'SET WITH CURRENT DSNAME,BWO'
         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO DSN,BWO'
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' '
         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVI   CONTROL_SW,C'N'
         B     PROC4001
PROC4035 MVC   CURRENT_BWO,IN1REC+4
         OC    CURRENT_BWO,=XL3'F0F0F0'
         MVC   PROC4_PRINT+67(40),=CL40'SET WITH COMMAND BWO  '
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_DSN
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' COMMAND BWO==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(3),CURRENT_BWO
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4900
PROC4038 MVC   PROC4_PRINT+67(40),=CL40'SET WITH CURRENT DSNAME'
         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO CURRENT DSN'
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' '
         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVI   CONTROL_SW,C'N'
         B     PROC4001
***********************************************************************
* BWO= SYNTAX, STATUS CHECKING                                        *
***********************************************************************
PROC4040 MVC   CURRENT_CMND,=CL4'BWO '
         CLC   IN1REC+4(3),=CL133' '
         BE    PROC4045
         MVC   CURRENT_BWO,IN1REC+4
         OC    CURRENT_BWO,=XL3'F0F0F0'
         MVC   PROC4_PRINT+67(40),=CL40'CHANGE CURRENT BWO VALUE'
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_DSN
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' COMMAND BWO==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_BWO
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4001
PROC4045 MVC   PROC4_PRINT+67(40),=CL40'CHANGE CURRENT BWO VALUE'
         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-BWO NOT FOUND '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' '
         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVI   CONTROL_SW,C'N'
         B     PROC4001
***********************************************************************
* DSN= SYNTAX, STATUS CHECKING                                        *
***********************************************************************
PROC4050 MVC   CURRENT_CMND,=CL4'DSN '
         CLC   IN1REC+4(44),=CL133' '
         BE    PROC4055
         MVC   CURRENT_DSN,IN1REC+4
         MVC   PROC4_PRINT+67(40),=CL40'CHANGE CURRENT DSN VALUE'
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' COMMAND DSN==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_DSN
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' CURRENT BWO==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(44),CURRENT_BWO
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4001
PROC4055 MVC   PROC4_PRINT+67(40),=CL40'CHANGE CURRENT DSN VALUE'
         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-DSN NOT FOUND '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' '
         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '
         GDEGOSUB SERV2000,PROC4_PRINT
         MVI   CONTROL_SW,C'N'
         B     PROC4001
***********************************************************************
* RESET SYNTAX, STATUS CHECKING                                       *
***********************************************************************
PROC4060 MVC   CURRENT_CMND,=CL4'RSET'
         MVI   CONTROL_SW,C'Y'
         MVC   CURRENT_DSN,=CL133' '
         MVC   CURRENT_BWO,=CL133' '
         OC    CURRENT_BWO,=XL3'F0F0F0'
         MVC   PROC4_PRINT+67(40),=CL40'RESET SKIP PROCESSING   '
         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC4001
PROC4900 LA    R15,0
         B     PROC4920
PROC4910 LA    R15,4
         B     PROC4920
PROC4920 GDESUBEN
PROC4_PRINT    DC  CL133' '
PROC4_FIRSTTIME    DC   C'Y'
***********************************************************************
*                                                                     *
* PROCESS COMMANDS                                                    *
*                                                                     *
***********************************************************************
PROC5000 GDESUBST
         CLI   CONTROL_SW,C'Y'
         BNE   PROC5800
         CLI   GDEBWOA_ERR,C'N'
         BNE   PROC5810
         CLC   CURRENT_CMND,=CL4'SET '
         BE    PROC5100
         CLC   CURRENT_CMND,=CL4'TEST'
         BE    PROC5200
         CLC   CURRENT_CMND,=CL4'SHOW'
         BE    PROC5300
         B     PROC5820
***********************************************************************
*
* PROCESS SET COMMAND
*
***********************************************************************
PROC5100 LA   R4,IGWABWO_SET
         ST   R4,IGWABWO_FUNCTON  SET FUNCTION
         GDEGOSUB SERV3000        GO PROCESS COMMAND
         BZ    PROC5700           SUCCESSFUL
         B     PROC5710           ERRORS FOUND
***********************************************************************
*
* PROCESS TEST COMMAND
*
***********************************************************************
PROC5200 LA   R4,IGWABWO_READ
         ST   R4,IGWABWO_FUNCTON  SET FUNCTION
         GDEGOSUB SERV3000        GO PROCESS COMMAND
         BNZ   PROC5710           ERRORS FOUND
         CLC   CURRENT_BWO,RESULT_BWO
         BE    PROC5210
         MVC   PROC5_PRINT,=CL133' RESULT ======>'
         MVC   PROC5_PRINT+15(50),=CL50'COMMAND PROCESSED'
         MVC   PROC5_PRINT+67(40),=CL50'RETURN CODE = 0      '
         GDEGOSUB SERV2000,PROC5_PRINT
         MVC   PROC5_PRINT,=CL133' RESULT ======>'
         MVC   PROC5_PRINT+15(50),=CL50'TEST COMMAND PROCESSED'
         MVC   PROC5_PRINT+67(40),=CL40'TEST FAILED '
         MVC   PROC5_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE'
         GDEGOSUB SERV2000,PROC5_PRINT
         MVI   CONTROL_SW,C'N'
         B     PROC5900
PROC5210 MVC   PROC5_PRINT,=CL133' RESULT ======>'
         MVC   PROC5_PRINT+15(50),=CL50'TEST COMMAND PROCESSED'
         MVC   PROC5_PRINT+67(40),=CL40'TEST SUCCESSFUL'
         GDEGOSUB SERV2000,PROC5_PRINT
         B     PROC5900
***********************************************************************
*
* PROCESS SHOW COMMAND
*
***********************************************************************
PROC5300 LA   R4,IGWABWO_READ
         ST   R4,IGWABWO_FUNCTON  SET FUNCTION
         GDEGOSUB SERV3000        GO PROCESS COMMAND
         BZ    PROC5700           SUCCESSFUL
         B     PROC5710           ERRORS FOUND
***********************************************************************
* PRINT SUCCESS / UNSUCCESSFUL MESSAGE                                *
***********************************************************************
PROC5700 MVC   PROC5_PRINT,=CL133' RESULT ======>'
         MVC   PROC5_PRINT+15(50),=CL50'COMMAND PROCESSED'
         MVC   PROC5_PRINT+67(40),=CL50'RETURN CODE = 0      '
         GDEGOSUB SERV2000,PROC5_PRINT
         MVC   PROC4_PRINT,=CL133' RESULT BWO ==>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+15(03),RESULT_BWO
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' RESULT DATE =>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+16(10),RESULT_DATE
         GDEGOSUB SERV2000,PROC4_PRINT
         MVC   PROC4_PRINT,=CL133' RESULT TIME =>'
         MVC   PROC4_PRINT+15(50),=CL133' '
         MVC   PROC4_PRINT+16(10),RESULT_TIME
         GDEGOSUB SERV2000,PROC4_PRINT
         B     PROC5900
PROC5710 GDEGOSUB SERV5000
         MVC   PROC5_PRINT,=CL133' RESULT (CONT)>'
         MVC   PROC5_PRINT+15(50),=CL133' '
         MVC   PROC5_PRINT+67(40),=CL50'PROBLEM DETERMINATION CODE = XXX
               XXX'
         GDEH2E IGWABWO_PROBDET,PROC5_PRINT+67+29,8
         GDEGOSUB SERV2000,PROC5_PRINT
         MVI   GDEBWOA_ERR,C'N'
         B     PROC5900
***********************************************************************
* PRINT SKIPPED / ERROR MESSAGE                                       *
***********************************************************************
PROC5800 MVC   PROC5_PRINT,=CL133' RESULT ======>'
         MVC   PROC5_PRINT+15(50),=CL50'COMMAND NOT PROCESSED'
         MVC   PROC5_PRINT+67(40),=CL50'COMMAND NOT PROCESSED'
         MVC   PROC5_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE'
         GDEGOSUB SERV2000,PROC5_PRINT
         B     PROC5900
PROC5810 MVC   PROC5_PRINT,=CL133' RESULT ======>'
         MVC   PROC5_PRINT+15(50),=CL50'COMMAND NOT PROCESSED'
         MVC   PROC5_PRINT+67(40),=CL50'COMMAND NOT PROCESSED'
         MVC   PROC5_PRINT+110(23),=CL23'ERROR IN PREVIOUS CARD'
         GDEGOSUB SERV2000,PROC5_PRINT
         B     PROC5900
PROC5820 MVC   PROC5_PRINT,=CL133' RESULT ======>'
         MVC   PROC5_PRINT+15(50),=CL50'COMMAND NOT PROCESSED'
         MVC   PROC5_PRINT+67(40),=CL50'COMMAND NOT PROCESSED'
         MVC   PROC5_PRINT+110(23),=CL23'ERROR IN PROGRAM LOGIC'
         GDEGOSUB SERV2000,PROC5_PRINT
         B     PROC5900
PROC5900 LA    R15,0
         B     PROC5920
PROC5910 LA    R15,4
         B     PROC5920
PROC5920 GDESUBEN
PROC5_PRINT    DC  CL133' '
***********************************************************************
*                                                                     *
* DO THE TRACE                                                        *
*                                                                     *
***********************************************************************
SERV1000 GDESUBST
         CLI   REPORT02_SW,C'Y'
         BNE   SERV1900
         L     R7,0(R1)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,=A(SERV1PL1)
         GDEPRINT 0(R7),NAME=PARMDP
         LA    R8,IGWABWO_PARMLIST
         GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=40,                                            X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL2)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,0(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL3)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,4(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL4)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,8(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=8,                                             X
               TABLEENTRYLEN=8
         L     R7,=A(SERV1PL5)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,12(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL6)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,16(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL7)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,20(R8)
         L     R6,16(R8)
         L     R6,0(R6)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=(R6),                                          X
               TABLEENTRYLEN=(R6)
         L     R7,=A(SERV1PL8)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,24(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=4,                                             X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL9)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,28(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=12,                                            X
               TABLEENTRYLEN=4
         L     R7,=A(SERV1PL10)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,32(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=8,                                             X
               TABLEENTRYLEN=8
         L     R7,=A(SERV1PL11)
         GDEPRINT 0(R7),NAME=PARMDP
         L     R7,36(R8)
         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X
               NAME=PARMDP,                                            X
               TABLELEN=16,                                            X
               TABLEENTRYLEN=16
SERV1900 LA    R15,0
         B     SERV1920
SERV1910 LA    R15,4
         B     SERV1920
SERV1920 GDESUBEN
SERV1PL1 DC    CL133' PASSED PARM AREA'
SERV1PL2 DC    CL133' RETURN CODE'
SERV1PL3 DC    CL133' IGWABWO_RSNCODE CODE'
SERV1PL4 DC    CL133' PROBLEM DETERMINATION'
SERV1PL5 DC    CL133' FUNCTION REQUIRED'
SERV1PL6 DC    CL133' DATASET NAME LENGTH'
SERV1PL7 DC    CL133' DATASET NAME'
SERV1PL8 DC    CL133' SELECTION MASK'
SERV1PL9 DC    CL133' BWO FLAGS'
SERV1PL10 DC   CL133' BWO TIME'
SERV1PL11 DC   CL133' RESERVED FIELD'
***********************************************************************
*                                                                     *
* OUTPUT CONTROL STATUS IF DDNAME AVAILABLE                           *
*                                                                     *
***********************************************************************
SERV2000 GDESUBST
         CLI   REPORT01_SW,C'N'
         BE    SERV2900
         L     R2,0(R1)
         GDEPRINT 0(R2),NAME=STATUS
SERV2900 LA    R15,0
         B     SERV2920
SERV2910 LA    R15,4
         B     SERV2920
SERV2920 GDESUBEN
***********************************************************************
*                                                                     *
* PROCESS COMMAND                                                     *
*                                                                     *
***********************************************************************
SERV3000 GDESUBST
***********************************************************************
         SR    R4,R4
         LA    R5,44
         LA    R6,CURRENT_DSN
SERV3010 CLI   0(R6),C' '
         BE    SERV3020
         LA    R4,1(R4)
         LA    R6,1(R6)
         BCT   R5,SERV3010
SERV3020 STCM  R4,B'1111',CURRENT_DSNLEN
***********************************************************************
         MVC   IGWABWO_DSN,CURRENT_DSN
         MVC   IGWABWO_DSNLEN,CURRENT_DSNLEN
         MVC   IGWABWO_BWOFLAGS,=3F'0'
         CLI   CURRENT_BWO+0,C'1'
         BNE   *+10
         MVC   IGWABWO_BWOFLAG1,=F'1'
         CLI   CURRENT_BWO+1,C'1'
         BNE   *+10
         MVC   IGWABWO_BWOFLAG2,=F'1'
         CLI   CURRENT_BWO+2,C'1'
         BNE   *+10
         MVC   IGWABWO_BWOFLAG3,=F'1'
***********************************************************************
         XC    TIME_STORAGE,TIME_STORAGE
         TIME  DEC,TIME_STORAGE,DATETYPE=YYYYDDD,LINKAGE=SYSTEM
         MVC   IGWABWO_BWOTIME+4,TIME_STORAGE
         OI    IGWABWO_BWOTIME+4+3,X'0F'
         MVI   TIME_STORAGE+12,X'0F'
         SRP   TIME_STORAGE+8(5),1,0
         OI    TIME_STORAGE+8+3,X'0F'
         MVI   IGWABWO_BWOTIME+0,X'01'
         MVC   IGWABWO_BWOTIME+1(3),TIME_STORAGE+8+1
***********************************************************************
*        LOAD  EP=IGWABWO,ERRET=PROC9910
         LA    R1,IGWABWO_PARMLIST R1 -> PARMLIST
         LA    R4,IGWABWO_RETCODE
         ST    R4,0(R1)            PASS ADDR OF RETURN CODE
         LA    R4,IGWABWO_RSNCODE
         ST    R4,4(R1)            PASS ADDR OF IGWABWO_RSNCODE CODE
         LA    R4,IGWABWO_PROBDET
         ST    R4,8(R1)            PASS ADDR OF PROBLEM DETERMINATION
         LA    R4,IGWABWO_FUNCTON
         ST    R4,12(R1)           PASS ADDR OF FUNCTION REQUIRED
         LA    R4,IGWABWO_DSNLEN
         ST    R4,16(R1)           PASS ADDR OF DATA SET NAME LENGTH
         LA    R4,IGWABWO_DSN
         ST    R4,20(R1)           PASS ADDR OF DATA SET NAME
         LA    R4,IGWABWO_SELECT
         ST    R4,24(R1)           PASS ADDR OF SELECTION MASK
         LA    R4,IGWABWO_BWOFLAGS
         ST    R4,28(R1)           PASS ADDR OF BWO FLAGS
         LA    R4,IGWABWO_BWOTIME
         ST    R4,32(R1)           PASS ADDR OF BWO RECOVERY POINT
         LA    R4,IGWABWO_RESERVED
         ST    R4,36(R1)           PASS ADDR OF RESERVED FIELD
***********************************************************************
         GDEGOSUB SERV1000,SERV3_BEFORE_MESSAGE
***********************************************************************
         LA    R1,IGWABWO_PARMLIST R1 -> PARMLIST
         L     R15,=V(IGWABWO)
         BALR  14,15               CALL IGWABWO
***********************************************************************
         GDEGOSUB SERV1000,SERV3_AFTER_MESSAGE
***********************************************************************
         MVC   RESULT_BWO,=CL3'000'
         CLC   IGWABWO_BWOFLAG1,=F'0'
         BE    *+8
         MVI   RESULT_BWO+0,C'1'
         CLC   IGWABWO_BWOFLAG2,=F'0'
         BE    *+8
         MVI   RESULT_BWO+1,C'1'
         CLC   IGWABWO_BWOFLAG3,=F'0'
         BE    *+8
         MVI   RESULT_BWO+2,C'1'
***********************************************************************
         UNPK IGWABWO_WORKAREA(9),IGWABWO_BWOTIME(5)
         TR   IGWABWO_WORKAREA(8),IGWABWO_HEXTABLE-C'0'
         MVC  RESULT_TIME+0(2),IGWABWO_WORKAREA
         MVI  RESULT_TIME+2,C':'
         MVC  RESULT_TIME+3(2),IGWABWO_WORKAREA+2
         MVI  RESULT_TIME+5,C':'
         MVC  RESULT_TIME+6(2),IGWABWO_WORKAREA+4
         MVI  RESULT_TIME+8,C'.'
         MVC  RESULT_TIME+9(1),IGWABWO_WORKAREA+6
         UNPK IGWABWO_WORKAREA(9),IGWABWO_BWOTIME+4(5)
         TR   IGWABWO_WORKAREA(8),IGWABWO_HEXTABLE-C'0'
         MVC  RESULT_DATE+0(2),=CL2'20'
         MVC  RESULT_DATE+2(2),IGWABWO_WORKAREA
         MVI  RESULT_DATE+4,C'/'
         MVC  RESULT_DATE+5(2),IGWABWO_WORKAREA+2
         MVI  RESULT_DATE+7,C'/'
         MVC  RESULT_DATE+8(2),IGWABWO_WORKAREA+4
***********************************************************************
*
* BACK FROM THE CALL, CHECK RETURN CODE
*
***********************************************************************
         CLC   IGWABWO_RETCODE,=F'0'
         BNE   SERV3910
SERV3900 LA    R15,0
         B     SERV3920
SERV3910 LA    R15,4
         B     SERV3920
SERV3920 GDESUBEN
SERV3_BEFORE_MESSAGE DC CL53' ',CL80'PARAMETERS BEFORE THE CALL'
SERV3_AFTER_MESSAGE  DC CL53' ',CL80'PARAMETERS AFTER THE CALL'
***********************************************************************
*                                                                     *
* OUTPUT CONTROL STATUS IF DDNAME AVAILABLE                           *
*                                                                     *
***********************************************************************
SERV4000 GDESUBST
         GDEDDN GDEBWO03,FOUND=SERV4001,NOTFOUND=SERV4900
SERV4001 GDEPRINT TYPE=OPEN,NAME=BWOPRT,                               X
               TITLE='BWO FLAG EXPLAINATION',                          X
               HEADINGS=(SERV4HL1)
         LA    R4,SERV4_TABLE
         L     R5,=A(SERV4_TABLE_END)
         MVC   SERV4_MESSAGE,=CL133' '
SERV4010 MVC   SERV4_MESSAGE+30(50),0(R4)
         GDEPRINT SERV4_MESSAGE,NAME=BWOPRT
         LA    R4,50(R4)
         CR    R4,R5
         BL    SERV4010
         GDEPRINT ,TYPE=CLOSE,NAME=BWOPRT
SERV4900 LA    R15,0
         B     SERV4920
SERV4910 LA    R15,4
         B     SERV4920
SERV4920 GDESUBEN
SERV4HL1       DC   CL133' '
SERV4_MESSAGE  DC   CL133' '
SERV4_TABLE    DS  0CL50
 DC CL50'                                                  '
 DC CL50' BWO FLAGS AND THEIR MEANING                      '
 DC CL50'                                                  '
 DC CL50' 000 - DATA SET DOES NOT SUPPORT BACKUP WITHOUT   '
 DC CL50'       SERIALIZATION.                             '
 DC CL50'                                                  '
 DC CL50' 001 - FORCES RECOVERY IN PROGRESS, RESET TO 000  '
 DC CL50'       AFTER RECOVERY                             '
 DC CL50'                                                  '
 DC CL50' 010 - A CA/CI SPLIT FOR THE BWO DATA SET IS IN   '
 DC CL50'       PROGRESS. DO NOT START BACKUP.  IF BACKUP  '
 DC CL50'       IN PROGRESS, DISCARD AT END.  THIS STATE   '
 DC CL50'       CAN EXIST AT OPEN IF THE DATABASE MANAGER  '
 DC CL50'       ABENDED DURING SPLIT.  DATABASE ACTION     '
 DC CL50'       DEPENDS DATABASE MANAGER.  THE DATA SET    '
 DC CL50'       MIGHT NEED RESTORE AND FORWARD RECOVERY OR '
 DC CL50'       BACK OUT OF CHANGES IF AIXS ARE PRESENT.   '
 DC CL50'                                                  '
 DC CL50' 011 - THE DATABASE MANAGER CLOSED A BWO DATA SET '
 DC CL50'       AND A CI/CA SPLIT HAD OCCURRED WHEN IT WAS '
 DC CL50'       PREVIOUSLY OPEN.  BACKUP MANAGER SHOULD    '
 DC CL50'       RESET IT TO 000 AND SERIALIZE TO BACK UP,  '
 DC CL50'       NOT A BWO CANDIDATE.  THE DATABASE MANAGER '
 DC CL50'       SHOULD CHANGE THIS STATE TO 110 AT OPEN.   '
 DC CL50'                                                  '
 DC CL50' 100 - A BWO DATA SET HAS BEEN OPENED BY THE      '
 DC CL50'       DATABASE MANAGER.  BACK UP WITHOUT         '
 DC CL50'       SERIALIZATION.                             '
 DC CL50'                                                  '
 DC CL50' 101 - DATA SET BAS BEEN RESTORED AND REQUIRES    '
 DC CL50'       FORWARD RECOVERY BEFORE IT CAN BE USED.    '
 DC CL50'       RESET IT TO 001 BEFORE FORWARD RECOVERY.   '
 DC CL50'                                                  '
 DC CL50' 110 - A CI/CA SPLIT HAS OCCURRED AND COMPLETED ON'
 DC CL50'       A BWO DATA SET.  THIS STATE CAN EXIST AT   '
 DC CL50'       OPEN IF THE DATABASE MANAGER ABENDED.  BACK'
 DC CL50'       UP WITHOUT SERIALIZATION.  RESET IT TO 100 '
 DC CL50'       BEFORE BACKUP.                             '
 DC CL50'                                                  '
 DC CL50' 111 - AN INVALID STATE.                          '
 DC CL50'                                                  '
SERV4_TABLE_END EQU *
***********************************************************************
*                                                                     *
* OUTPUT CONTROL MESSAGE AND MEANING                                  *
*                                                                     *
***********************************************************************
SERV5000 GDESUBST
         MVC   SERV5_MESSAGE,=CL133' RESULT ======>'
         MVC SERV5_MESSAGE+15(50),=CL50'COMMAND PROCESSED UNSUCCESSFULLX
               Y'
         MVC SERV5_MESSAGE+67(40),=CL50'RETURN CODE = XXXXXXXX, REASON X
               CODE = XXXXXXXX'
         GDEH2E IGWABWO_RETCODE,SERV5_MESSAGE+67+14,4
         GDEH2E IGWABWO_RSNCODE,SERV5_MESSAGE+67+38,4
         GDEGOSUB SERV2000,SERV5_MESSAGE
         MVC   SERV5_MESSAGE,=CL133' RESULT (CONT)>'
         MVC SERV5_MESSAGE+15(50),=CL50'COMMAND PROCESSED UNSUCCESSFULLX
               Y'
         LA    R4,SERV5_TABLE
         L     R5,=A(SERV5_TABLE_END)
SERV5010 CLC   0(4,R4),IGWABWO_RETCODE
         BNE   SERV5020
         CLC   4(4,R4),IGWABWO_RSNCODE
         BNE   SERV5020
         MVC   SERV5_MESSAGE+63(60),8(R4)
         GDEGOSUB SERV2000,SERV5_MESSAGE
SERV5020 LA    R4,68(R4)
         CR    R4,R5
         BL    SERV5010
SERV5900 LA    R15,0
         B     SERV5920
SERV5910 LA    R15,4
         B     SERV5920
SERV5920 GDESUBEN
SERV5_MESSAGE  DC   CL133' '
         DS   0D
SERV5_TABLE    DS  0CL68
 DC F'0',F'0',CL60' THE OPERATION WAS SUCCESSFUL.                     '
 DC F'4',F'4',CL60' THE OPERATION WAS SUCCESSFUL, BUT THE             '
 DC F'4',F'4',CL60' BWO_RECOV ARGUMENT HAS NO VALID VALUE FOR THE     '
 DC F'4',F'4',CL60' DATA SET SPECIFIED IN DSNAME. THIS IS BECAUSE     '
 DC F'4',F'4',CL60' IT WAS CREATED UNDER DFP 3.1.0, AND NO            '
 DC F'4',F'4',CL60' BWO_RECOV HAS BEEN ADDED TO THE DATA SET. ADD     '
 DC F'4',F'4',CL60' BWO_RECOV TO THE DATA SET AS APPROPRIATE.         '
 DC F'8',F'4',CL60' AN INVALID DSNAME_LENGTH OR                       '
 DC F'8',F'4',CL60' SHARE_ATTR_SELECTOR WAS SPECIFIED. CORRECT THE    '
 DC F'8',F'4',CL60' ARGUMENT AND RETRY THE REQUEST.                   '
 DC F'8',F'8',CL60' AN INVALID DSNAME OF BLANKS OR INVALID            '
 DC F'8',F'8',CL60' SHARE_ATTR_ARRAY_LENGTH WAS SPECIFIED. CORRECT    '
 DC F'8',F'8',CL60' THE ARGUMENT AND RETRY THE REQUEST.               '
 DC F'8',F'12',CL60' AN INVALID READ_WRITE WAS SPECIFIED. A VALUE     '
 DC F'8',F'12',CL60' OF 0 OR 1 MUST BE SUPPLIED. CORRECT THE          '
 DC F'8',F'12',CL60' READ_WRITE ARGUMENT AND RETRY THE REQUEST.       '
 DC F'8',F'16',CL60' THE VALUES SUPPLIED FOR BWO_FLAGS ARE NOT        '
 DC F'8',F'16',CL60' VALID. BWO1, BWO2, AND BWO3 MUST HAVE A VALUE    '
 DC F'8',F'16',CL60' OF EITHER 0 OR 1. CORRECT THE BWO_FLAGS          '
 DC F'8',F'16',CL60' ARGUMENT AND RETRY THE REQUEST.                  '
 DC F'8',F'20',CL60' BWO IS ONLY SUPPORTED FOR VSAM-TYPE DATA SETS.   '
 DC F'8',F'20',CL60' THE NAME SPECIFIED WAS NOT A VSAM CLUSTER        '
 DC F'8',F'20',CL60' NAME. SPECIFY THE NAME OF A VSAM CLUSTER IN      '
 DC F'8',F'20',CL60' THE DSNAME ARGUMENT AND RETRY THE REQUEST.       '
 DC F'8',F'24',CL60' AN INVALID LEVEL_INDICATOR WAS SPECIFIED.        '
 DC F'8',F'24',CL60' CORRECT THE LEVEL_INDICATOR ARGUMENT AND RETRY   '
 DC F'8',F'24',CL60' THE REQUEST.                                     '
 DC F'8',F'28',CL60' AN INVALID SELECT ARGUMENT WAS SPECIFIED. A      '
 DC F'8',F'28',CL60' VALUE BETWEEN 1 AND 3 MUST BE SPECIFIED.         '
 DC F'8',F'28',CL60' CORRECT THE SELECT ARGUMENT AND RETRY THE        '
 DC F'8',F'28',CL60' REQUEST.                                         '
 DC F'8',F'32',CL60' THE DATA SET SPECIFIED IN DSNAME IS NOT AN       '
 DC F'8',F'32',CL60' SMS-MANAGED DATA SET. CORRECT THE DSNAME         '
 DC F'8',F'32',CL60' ARGUMENT AND RETRY THE REQUEST.                  '
 DC F'12',F'8',CL60' THERE IS INSUFFICIENT VIRTUAL STORAGE TO         '
 DC F'12',F'8',CL60' PROCESS THE REQUEST. FREE SOME VIRTUAL STORAGE   '
 DC F'12',F'8',CL60' AND RETRY THE REQUEST. IF THE CONDITION          '
 DC F'12',F'8',CL60' PERSISTS, CONTACT IBM FOR PROGRAMMING            '
 DC F'12',F'8',CL60' ASSISTANCE.                                      '
 DC F'12',F'12',CL60' THE DATA SET SPECIFIED IN DSNAME COULD NOT BE   '
 DC F'12',F'12',CL60' FOUND. VERIFY THAT THE DATA SET EXISTS AND HAS  '
 DC F'12',F'12',CL60' BEEN CORRECTLY SPECIFIED IN DSNAME.             '
 DC F'16',F'4',CL60' AN ERROR OCCURRED ON A CALL TO CATALOG           '
 DC F'16',F'4',CL60' MANAGEMENT. THE CATALOG RETURN CODE IS IN THE    '
 DC F'16',F'4',CL60' FIRST ELEMENT OF PROB_DET AND THE CATALOG        '
 DC F'16',F'4',CL60' REASON CODE IS IN THE SECOND ELEMENT OF          '
 DC F'16',F'4',CL60' PROB_DET. SEE MESSAGE IDC3009I FOR AN            '
 DC F'16',F'4',CL60' EXPLANATION OF THE CATALOG RETURN CODE AND       '
 DC F'16',F'4',CL60' REASON CODE. A CATALOG MANAGEMENT RETURN CODE    '
 DC F'16',F'4',CL60' OF 8 INDICATES THAT THE SPECIFIED DATA SET WAS   '
 DC F'16',F'4',CL60' NOT FOUND. IF YOU GET THIS RETURN CODE,          '
 DC F'16',F'4',CL60' CORRECT DSNAME AND RETRY THE REQUEST.            '
 DC F'20',F'4',CL60' A SYSTEM ERROR OCCURRED DURING IGWASYS/SMS/BWO   '
 DC F'20',F'4',CL60' OR IGWLSHR PROCESSING. THE ELEMENTS OF           '
 DC F'20',F'4',CL60' PROB_DET CONTAIN ADDITIONAL DIAGNOSTIC DATA.     '
 DC F'20',F'4',CL60' CONTACT IBM FOR PROGRAMMING ASSISTANCE AND       '
 DC F'20',F'4',CL60' PROVIDE THEM WITH THE IGWASYS/SMS/BWO            '
 DC F'20',F'4',CL60' RETURN_CODE, REASON_CODE, AND PROB_DET VALUES.   '
 DC F'24',F'4',CL60' LINKAGE CANNOT BE ESTABLISHED TO THE IGWLSHR     '
 DC F'24',F'4',CL60' SERVICE MODULE OR TO IGWASYS/SMS/BWO SERVICE     '
 DC F'24',F'4',CL60' MODULES, IGWAMCS1 AND IGWAMCS2. EITHER THE       '
 DC F'24',F'4',CL60' WRONG LEVEL OF THE OPERATING SYSTEM IS BEING     '
 DC F'24',F'4',CL60' USED, OR THE CALLABLE SYSTEM SERVICE LIBRARY,    '
 DC F'24',F'4',CL60' SYS1.CSSLIB, IS MISSING THE REQUIRED SERVICES.   '
 DC F'24',F'4',CL60' CONTACT YOUR INSTALLATION SYSTEM PROGRAMMER      '
 DC F'24',F'4',CL60' FOR ASSISTANCE.                                  '
SERV5_TABLE_END DS  0CL68
***********************************************************************
*                                                                     *
* OUTPUT CONTROL MESSAGE AND MEANING                                  *
*                                                                     *
***********************************************************************
SERV6000 GDESUBST
         GDEDDN GDEBWO04,FOUND=SERV6001,NOTFOUND=SERV6900
SERV6001 GDEPRINT TYPE=OPEN,NAME=RETRSN,                               X
               TITLE='RETURN CODE / REASON CODE EXPLAINATION',         X
               HEADINGS=(SERV6HL1)
         L     R4,=A(SERV5_TABLE)
         L     R5,=A(SERV5_TABLE_END)
SERV6010 CLC   0(4,R4),SERV6_SAVE_RET
         BNE   SERV6020
         CLC   4(4,R4),SERV6_SAVE_RSN
         BNE   SERV6020
         MVC   SERV6_MESSAGE,=CL133' '
         MVC   SERV6_MESSAGE+63(60),8(R4)
         B     SERV6030
SERV6020 MVC   SERV6_MESSAGE,=CL133'0'
         MVC SERV6_MESSAGE+15(40),=CL50'RETURN CODE = XXXXXXXX, REASON X
               CODE = XXXXXXXX'
         GDEH2E 0(R4),SERV6_MESSAGE+15+14,4
         GDEH2E 4(R4),SERV6_MESSAGE+15+38,4
         MVC   SERV6_MESSAGE+63(60),8(R4)
         MVC   SERV6_SAVE_RET,0(R4)
         MVC   SERV6_SAVE_RSN,4(R4)
SERV6030 GDEPRINT SERV6_MESSAGE,NAME=RETRSN
         LA    R4,68(R4)
         CR    R4,R5
         BL    SERV6010
         GDEPRINT ,NAME=RETRSN,TYPE=CLOSE
SERV6900 LA    R15,0
         B     SERV6920
SERV6910 LA    R15,4
         B     SERV6920
SERV6920 GDESUBEN
SERV6HL1       DC   CL133' '
SERV6_MESSAGE  DC   CL133' '
SERV6_SAVE_RET DC   F'-1'
SERV6_SAVE_RSN DC   F'-1'
         END
//*********************************************************************
//*                                                                   *
//*  STEP020   PGM=ASMA90                                             *
//*                                                                   *
//*********************************************************************
//STEP020 EXEC PGM=ASMA90,
//             PARM='BATCH,USING(WARN(9))'
//SYSUT1   DD  DSN=&&SYSUT1,
//             SPACE=(4096,(120,120),,,ROUND),
//             UNIT=SYSALLDA,
//             DCB=BUFNO=1
//SYSLIB   DD  DSN=SYS1.MACLIB,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSLIN  DD   DSN=&&OBJ(GDEPRINT),
//             DISP=OLD
//SYSIN    DD  *
         MACRO
&TAG     GDESUBEN
         GBLC  &TAGNAME
&TAG     L     R14,&TAGNAME+8
         LM    R2,R12,&TAGNAME+24
         BR    R14
         SPACE
         DC    C'LTORG START &TAGNAME'
         LTORG
         DC    C'END LTORG &TAGNAME'
         DS   0H
         MEND
         MACRO
&TAG     GDESUBST
         GBLC  &TAGNAME
&TAGNAME SETC  '&TAG'
         DROP  R12
         CNOP  0,4
&TAGNAME STM   R14,R12,8(R15)
         B     68(R15)
         DC    15F'-1'
         LR    R12,R15
         USING &TAGNAME,R12
         MEND
         MACRO
&TAG     GDEEXIT
         GBLB  &GDESAVE
         GBLB  &GDERENT
         GBLB  &GDEREGS
         GBLB  &GDEMODE
         GBLC  &GDESANM
.**********************************************************************
.*  ASSIGN DEFAULTS                                                   *
.**********************************************************************
&TAG     DS   0H
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0100 AIF   (&GDEMODE).GDE0400
         AIF   (&GDESAVE).GDE0110
         AGO   .GDE0300
.GDE0110 AIF   (&GDERENT).GDE0200
         LR    R1,R13
         L     R13,4(R1)
         XC    8(4,R13),8(R13)
         XC    4(4,R1),4(R1)
         L     R14,12(R13)
         LM    R2,R12,28(R13)
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0200 ANOP
         LR    R1,R13
         L     R13,4(R1)
         XC    8(4,R13),8(R13)
         XC    4(4,R1),4(R1)
         STORAGE RELEASE,ADDR=(1),LENGTH=72
         L     R14,12(R13)
         LM    R2,R12,28(R13)
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  RETURN R14                                                        *
.**********************************************************************
.GDE0300 ANOP
         BR    R14
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0400 AIF   (&GDESAVE).GDE0410
         AGO   .GDE0600
.GDE0410 AIF   (&GDERENT).GDE0500
         PR
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0500 ANOP
         LAE   R1,0(R13)
         STORAGE RELEASE,ADDR=(1),LENGTH=72
         PR
         AGO   .GDE0900
.**********************************************************************
.*  RETURN PR                                                         *
.**********************************************************************
.GDE0600 ANOP
         PR
.GDE0900 ANOP
         LTORG
         MEND
         MACRO
&TAG     GDEGOSUB &ROUTINE,&PARM
         AIF   (T'&PARM EQ 'O').A2000
&TAG     BAL   R1,*+8
         DC    AL4(&PARM)
         L     R15,=A(&ROUTINE)
         BALR  R14,R15
         LTR   R15,R15
         MEXIT
.A2000   ANOP
&TAG     L     R15,=A(&ROUTINE)
         BALR  R14,R15
         LTR   R15,R15
         MEND
         MACRO
&TAG     GDESTART &BR0,&BR1,&BR2,&BR3,&BR4,&BR5,&BR6,                  C
               &SAVEAREA=NO,&RENT=NO,&ARMODE=NO
         GBLB  &GDESAVE
         GBLB  &GDEMODE
         GBLB  &GDERENT
         GBLB  &GDEREGS
         GBLC  &GDESANM
         LCLC  &TAGNAME,&C
         LCLC  &DBR0,&DBR1,&DBR2,&DBR3,&DBR4,&DBR5,&DBR6
.**********************************************************************
.*  ASSIGN DEFAULTS                                                   *
.**********************************************************************
&GDESANM SETC  '$GDE'.'&SYSNDX'        POSSIBLE SAVE AREA NAME
&C       SETC  ','                     COMMA FOR USING
&TAGNAME SETC  'GDENONAME'             POSSIBLE DEFAULT PGM NAME
         AIF   ('&TAG' EQ '').GDE0010
&TAGNAME SETC  '&TAG'
.GDE0010 ANOP
&DBR0    SETC  '&BR0'
&DBR1    SETC  '&BR1'
&DBR2    SETC  '&BR2'
&DBR3    SETC  '&BR3'
&DBR4    SETC  '&BR4'
&DBR5    SETC  '&BR5'
&DBR6    SETC  '&BR6'
         AIF   ('&DBR0' NE '').GDE0020
&DBR0    SETC  'R12'                   DEFAULT BASE REG
.GDE0020 ANOP
&GDESAVE SETB  1
         AIF   (T'&SAVEAREA NE 'O').GDE0030
&GDESAVE SETB  0
.GDE0030 ANOP
&GDERENT SETB  0
         AIF   ('&RENT' EQ 'NO').GDE0040
         AIF   ('&RENT' NE 'YES').GDE0035
&GDERENT SETB  1
         AGO   .GDE0040
.GDE0035 MNOTE 8,'INVALID RENT, MUST BE YES OR NO'
.GDE0040 ANOP
         AIF   ('&ARMODE' EQ 'NO').GDE0050
         AIF   ('&ARMODE' NE 'YES').GDE0045
&GDEMODE SETB  1
         AGO   .GDE0050
.GDE0045 MNOTE 8,'INVALID ARMODE, MUST BE YES OR NO'
.GDE0050 ANOP
.**********************************************************************
.*  GENERATE CSECT ENTRY CODE AND ID LITERALS                         *
.**********************************************************************
&TAGNAME CSECT
         B     52(15)
         PUSH  PRINT
         PRINT ON,GEN
         DC    CL14' COMPILE DATE='
         DC    CL8'&SYSDATE'
         DC    CL6' TIME='
         DC    CL5'&SYSTIME'
         DC    CL7' CSECT='
         DC    CL8'&TAGNAME'
.**********************************************************************
.*  GENERATE REGISTER ASSIGNMENTS                                     *
.**********************************************************************
         AIF   (&GDEREGS).GDE0060
&GDEREGS SETB   1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
AR0      EQU   0
AR1      EQU   1
AR2      EQU   2
AR3      EQU   3
AR4      EQU   4
AR5      EQU   5
AR6      EQU   6
AR7      EQU   7
AR8      EQU   8
AR9      EQU   9
AR10     EQU   10
AR11     EQU   11
AR12     EQU   12
AR13     EQU   13
AR14     EQU   14
AR15     EQU   15
.GDE0060 ANOP
         POP   PRINT
.**********************************************************************
.*  SAVE INCOMING REGISTERS                                           *
.**********************************************************************
         AIF   (&GDEMODE).GDE0400
         STM   14,12,12(13)
.**********************************************************************
.*  GENERATE BASE REGISTER ASSIGNMENTS                                *
.**********************************************************************
.GDE0100 ANOP
         AIF   ('&DBR1' NE '').GDE0110
         AIF   ('&DBR0' EQ 'R15').GDE0101
         LR    &DBR0,R15
.GDE0101 ANOP
         USING &TAGNAME&C&DBR0
         AGO   .GDE0200
.GDE0110 AIF   ('&DBR2' NE '').GDE0120
         AIF   ('&DBR0' EQ 'R15').GDE0111
         LR    &DBR0,R15
.GDE0111 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         USING &TAGNAME&C&DBR0&C&DBR1
         AGO   .GDE0200
.GDE0120 AIF   ('&DBR3' NE '').GDE0130
         AIF   ('&DBR0' EQ 'R15').GDE0121
         LR    &DBR0,R15
.GDE0121 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2
         AGO   .GDE0200
.GDE0130 AIF   ('&DBR4' NE '').GDE0140
         AIF   ('&DBR0' EQ 'R15').GDE0131
         LR    &DBR0,R15
.GDE0131 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3
.GDE0140 AIF   ('&DBR5' NE '').GDE0150
         AIF   ('&DBR0' EQ 'R15').GDE0141
         LR    &DBR0,R15
.GDE0141 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4
         AGO   .GDE0200
.GDE0150 AIF   ('&DBR6' NE '').GDE0160
         AIF   ('&DBR0' EQ 'R15').GDE0151
         LR    &DBR0,R15
.GDE0151 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         LA    &DBR5,2048(&DBR4)
         LA    &DBR5,2048(&DBR5)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5
         AGO   .GDE0200
.GDE0160 ANOP
         AIF   ('&DBR0' EQ 'R15').GDE0161
         LR    &DBR0,R15
.GDE0161 ANOP
         LA    &DBR1,2048(&DBR0)
         LA    &DBR1,2048(&DBR1)
         LA    &DBR2,2048(&DBR1)
         LA    &DBR2,2048(&DBR2)
         LA    &DBR3,2048(&DBR2)
         LA    &DBR3,2048(&DBR3)
         LA    &DBR4,2048(&DBR3)
         LA    &DBR4,2048(&DBR4)
         LA    &DBR5,2048(&DBR4)
         LA    &DBR5,2048(&DBR5)
         LA    &DBR6,2048(&DBR5)
         LA    &DBR6,2048(&DBR6)
        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0200 ANOP
         AIF   (&GDESAVE).GDE0210
         AGO   .GDE0900
.GDE0210 AIF   (&GDERENT).GDE0300
         B     &GDESANM+72
&GDESANM DC    3F'0',15F'-1'
         LA    R1,&GDESANM
         ST    R1,8(R13)
         ST    R13,4(R1)
         L     R1,24(R13)
         L     R13,8(R13)
         XC    0(4,R13),0(R13)
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0300 ANOP
         STORAGE OBTAIN,LENGTH=72
         ST    R1,8(R13)
         ST    R13,4(R1)
         LM    R0,R1,20(R13)
         L     R13,8(R13)
         XC    0(4,R13),0(R13)
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE BASE REGISTER ASSIGNMENTS                                *
.**********************************************************************
.GDE0400 ANOP
         BAKR  14,0
         SAC   512
         SYSSTATE ASCENV=AR
         AIF   ('&DBR1' NE '').GDE0410
         AIF   ('&DBR0' EQ 'R15').GDE0401
         LAE   &DBR0,0(R15,0)
.GDE0401 ANOP
         USING &TAGNAME&C&DBR0
         AGO   .GDE0500
.GDE0410 AIF   ('&DBR2' NE '').GDE0420
         AIF   ('&DBR0' EQ 'R15').GDE0411
         LAE   &DBR0,0(R15,0)
.GDE0411 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         USING &TAGNAME&C&DBR0&C&DBR1
         AGO   .GDE0500
.GDE0420 AIF   ('&DBR3' NE '').GDE0430
         AIF   ('&DBR0' EQ 'R15').GDE0421
         LAE   &DBR0,0(R15,0)
.GDE0421 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2
         AGO   .GDE0500
.GDE0430 AIF   ('&DBR4' NE '').GDE0440
         AIF   ('&DBR0' EQ 'R15').GDE0431
         LAE   &DBR0,0(R15,0)
.GDE0431 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3
.GDE0440 AIF   ('&DBR5' NE '').GDE0450
         AIF   ('&DBR0' EQ 'R15').GDE0441
         LAE   &DBR0,0(R15,0)
.GDE0441 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4
         AGO   .GDE0500
.GDE0450 AIF   ('&DBR6' NE '').GDE0460
         AIF   ('&DBR0' EQ 'R15').GDE0451
         LAE   &DBR0,0(R15,0)
.GDE0451 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         LAE   &DBR5,2048(&DBR4)
         LAE   &DBR5,2048(&DBR5)
         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5
         AGO   .GDE0500
.GDE0460 ANOP
         AIF   ('&DBR0' EQ 'R15').GDE0461
         LAE   &DBR0,0(R15,0)
.GDE0461 ANOP
         LAE   &DBR1,2048(&DBR0)
         LAE   &DBR1,2048(&DBR1)
         LAE   &DBR2,2048(&DBR1)
         LAE   &DBR2,2048(&DBR2)
         LAE   &DBR3,2048(&DBR2)
         LAE   &DBR3,2048(&DBR3)
         LAE   &DBR4,2048(&DBR3)
         LAE   &DBR4,2048(&DBR4)
         LAE   &DBR5,2048(&DBR4)
         LAE   &DBR5,2048(&DBR5)
         LAE   &DBR6,2048(&DBR5)
         LAE   &DBR6,2048(&DBR6)
        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *
.**********************************************************************
.GDE0500 ANOP
         AIF   (&GDESAVE).GDE0510
         AGO   .GDE0900
.GDE0510 AIF   (&GDERENT).GDE0600
         B     &GDESANM+72
&GDESANM DC    3F'0',15F'-1'
         LAE   R13,&GDESANM
         MVC   4(4,R13),=C'F1SA'
         AGO   .GDE0900
.**********************************************************************
.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *
.**********************************************************************
.GDE0600 ANOP
         STORAGE OBTAIN,LENGTH=72
         LAE   R13,0(R1)
         MVC   4(4,R13),=C'F1SA'
.GDE0900 ANOP
         MEND
         TITLE  'GDEPRINT - GENERAL PRINT ROUTINE'
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*    GDEPRINT PRINTS DATA PASSED.                                     *
* PARAMETER 1                                                         *
*    INPUT: FUNCTION          -    ONE BYTE                           *
*              1 - OPEN DDNAME PRINT FILE                             *
*              2 - WRITE A LINE TO PRINT FILE                         *
*              3 - CLOSE DDNAME PRINT FILE                            *
*              4 - CHECK IF PARAMETER 2 # OF LINES N.S. ELSE OVERFLOW *
*    INPUT: HEX               -    ONE BYTE                           *
*              1 - PRINT THE DATA ON A 133 BYTE LINE                  *
*              2 - PRINT THE DATA IN HEX ON A 133 BYTE LINE           *
*                  100 BYTES OF INPUT DATA IN CHAR/ZONE/NUM FORMAT.   *
*              3 - PRINT THE DATA IN HEX ON A 133 BYTE LINE           *
*                  32 BYTES OF INPUT DATA AT A TIME IN DUMP FORMAT.   *
*              4 - PRINT THE DATA IN DISPLAY ON A 133 BYTE LINE       *
*                  100 BYTES OF INPUT DATA IN CHAR FORMAT.            *
*              5 - PRINT THE DATA IN HEX ON A 133 BYTE LINE           *
*                  32 BYTES OF INPUT DATA AT A TIME IN DUMP FORMAT,   *
*                  WITHOUT DISPLAY CHARACTERS ON THE RIGHT SIDE.      *
*              6 - PRINT AS FUNCTION 4 UNLESS SOME CHARACTER ARE NOT  *
*                  ALPHA-NUMERIC THEN PRINT AS FUNCTION 5.            *
*              7 - PRINT THE DATA POINTED AS A FUNCTION 3 EXCEPT WITH *
*                  STORAGE ADDRESSES AT ONE SIDE.                     *
*              8 - PRINT AS FUNCTION 4 UNLESS SOME CHARACTER ARE NOT  *
*                  ALPHA-NUMERIC THEN PRINT AS FUNCTION 5 WITH TIME   *
*                  STAMP                                              *
*              9 - PRINT THE DATA POINTED AS A FUNCTION 3 EXCEPT WITH *
*                  STORAGE ADDRESSES AT ONE SIDE AND TIME STAMP       *
*              T - PRINT THE INTERNAL TRACE RECORD FROM FAILING CALL  *
*    INPUT: DDNAME            -    EIGHT BYTES                        *
*              THE DDNAME IN THE JCL OF THE FILE                      *
*    INPUT: DATA LENGTH       -    TWO BYTES BINARY                   *
*              LENGTH IN BINARY OF THE FIELD TO PRINT                 *
*             (VALID ONLY ON A HEX PRINT OF DATA                      *
*              ALL OTHER ASSUMES A 133 BYTE LENGTH)                   *
*    INPUT: DATA LENGTH SUBGROUP - TWO BYTES BINARY                   *
*              LENGTH IN BINARY OF THE THE NUMBER OF BYTES TO PRINT   *
*              AT A TIME OF DATA. IF DATA LENGTH SUBGROUP = DATA      *
*              LENGTH THEN NO DEBLOCKING OCCURS.                      *
*             (VALID ONLY ON A HEX PRINT OF DATA                      *
*              ALL OTHER ASSUMES A 133 BYTE LENGTH)                   *
*    INPUT: REPORT-ID         -    TEN  BYTES                         *
*              THE REPORT ID TO BE PRINTED AT THE TOP OF EACH PAGE    *
*    INPUT: LINES-PER-PAGE    -    TWO  BYTES PACKED.                 *
*              THE NUMBER OF LINES TO PRINT BEFORE TOP OF NEW PAGE    *
*    INPUT: FORCE-NEW-PAGE    -    ONE  BYTE.                         *
*              FORCE A PAGE BREAK TO OCCUR                            *
*              (DO-PAGE-BREAKS MUST BE SET TO '1').                   *
*              1 - DO NOT FORCE A PAGE BREAK.                         *
*              2 - FORCE A PAGE BREAK.                                *
*              3 - FORCE A SUBHEADING BREAK.                          *
*    INPUT: DO-PAGE-BREAKS    -    ONE  BYTE.                         *
*              ALLOW LINE COUNT OVERFLOW CAUSE BREAK.                 *
*              1 - ALLOW PAGE BREAK TO OCCUR STANDARD CENGDE HEADINGS *
*              2 - DON'T ALLOW PAGE BREAK TO OCCUR.                   *
*              3 - DO PAGE BREAK - NO HEADINGS                        *
*                                                                     *
*    INPUT: RESET-PAGE-COUNTER -   ONE  BYTE.                         *
*              1 - DO NOT RESET PAGE COUNTER.                         *
*              2 - RESET PAGE COUNTER TO ZERO THIS CALL.              *
*                                                                     *
*                                                                     *
*    NOTE: CALLING MODULE MUST PROVIDE CARRIAGE CONTROL CHARACTER IN  *
*    COLUMN 1 OF THE INPUT.                                           *
*                                                                     *
*      COLUMN    ]  PRINTER        INTERNAL
*         1      ]  POSITIONING    LINE COUNT                         *
*    ------------+--------------+-------------+                       *
*         1      ]  NEW PAGE    ]  SET TO 0   ]                       *
*              --+--------------+-------------+                       *
*       BLANK    ]     +1       ]     +1      ]                       *
*              --+--------------+-------------+                       *
*         0      ]     +2       ]     +2      ]                       *
*              --+--------------+-------------+                       *
*         -      ]     +3       ]     +3      ]                       *
*              --+--------------+-------------+                       *
*       OTHER    ]     +1       ]     +1      ]                       *
*    CHARACTERS  ]              ]             ]                       *
*    ------------+--------------+-------------+                       *
*                                                                     *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         SPACE 2
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*                                                                     *
* PARAMETER 2                                                         *
*    INPUT: DATA              -    VARIBLE NUMBER OF BYTES            *
*              DATA TO BE PRINTED.                                    *
*              LENGTH TO BE PRINTED IS 133 IF HEX IS NOT REQUESTED.   *
*              LENGTH TO BE PRINTED IS THE VALUE OF THE DATA LENGTH   *
*              PARAMETER IF HEX IS REQUESTED.                         *
*                                                                     *
*    INPUT: COUNT             -    TWO BYTES PACKED.                  *
*              NUMBER OF LINES TO BE REQUESTED TO BE PRINTED IN NEXT  *
*              CALLS. IF CURRENT LINE COUNT PLUS THIS COUNT EXCEEDS   *
*              LINES PER PAGE THEN DO OVERFLOW (PAGE BREAK) NOW.      *
*       NOTE: IF OVERFLOW OCCURRED THEN COUNT SET TO ZERO.            *
*                                                                     *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         SPACE 2
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
*                                                                     *
* PARAMETER 3,4,...                                                   *
*    INPUT: VARIABLE NUMBER OF PARAMETERS FOLLOW.                     *
*              EACH ONE ASSUMED TO BE A 133 BYTE LINE TO BE USED AS   *
*              HEADER LINES 4, 5, ....   HEADER LINES 1,2 AND 3 ARE   *
*              AUTOMATICALLY GENERATED.                               *
*    OUTPUT: PRINTED LINES TO DDNAME.                                 *
*                                                                     *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
         EJECT
R2DSECT  DSECT
R2FUNCTN DS    CL1
R2HEX    DS    CL1
R2DDNAME DS    CL8
R2DATALN DS    CL2
R2SUBLEN DS    CL2
R2REPTID DS    CL10
R2LN@PAG DS    CL2
R2NEWPAG DS    CL1
R2PAGBRK DS    CL1
R2RESPAG DS    CL1
R2RETCOD DS    CL2
         SPACE 2
R3DSECT  DSECT
R3DATA   DS   0C
         SPACE 2
R4DSECT  DSECT
R4NEXT   DS    A
R4DDNAME DS    CL8
R4PGCNT  DS    PL3
R4LNCNT  DS    PL3
R4STATUS DS    CL1
R4HEX    DS    CL1
R4DCB    DS    CL96
R4LEN    EQU   *-R4DSECT
         SPACE 2
         PRINT ON,GEN
GDEPRINT GDESTART R12
         USING R2DSECT,R2
         USING R3DSECT,R3
         USING R4DSECT,R4
         LM    R2,R3,0(R1)
         MVC   R2RETCOD,=CL2'00'
         GDEGOSUB GDEP100
         L     R4,=A(GP1R4SAV)
         L     R4,0(R4)
         GDEGOSUB GDEP200
         GDEEXIT
         LTORG
         EJECT
***********************************************************************
* GDEP100 FINDS THE AREA REPRESENTING THIS REPORT (BY DDNAME)         *
* INPUT FUNCTION                                                      *
*       HEAD OF TABLE ROUTINE (GP1FIRST)                              *
*       R2DDNAME                                                      *
* OUTPUT GP1R4SAV IS SET FOR THE TABLE ENTRY NEEDED TO OPERATE        *
***********************************************************************
GDEP100  GDESUBST
         ST    R1,GP1R1SAV
         L     R4,GP1FIRST
GDEP101  LTR   R4,R4
         BZ    GDEP100X
         CLC   R4DDNAME,R2DDNAME
         BE    GDEP100X
         L     R4,R4NEXT
         B     GDEP101
GDEP100X ST    R4,GP1R4SAV
         GDESUBEN
GP1R1SAV DC    F'-1'
GP1R4SAV DC    F'-1'
GP1FIRST DC    F'0'
         EJECT
***********************************************************************
* INPUT FUNCTION                                                      *
*       R4        STATE AREA OR NULL                                  *
*       TABLE FOR FUNCTION VALIDATION                                 *
* OUTPUT INVOKES SELECTED ROUTINE                                     *
***********************************************************************
GDEP200  GDESUBST
         MVC   GP2ARGFN(1),R2FUNCTN
         MVC   GP2ARGFN+1(2),=CL2'  '
         MVI   GP2ARGEN,X'00'
         LTR   R4,R4
         BZ    GDEP2001
         MVC   GP2ARGEN,R4STATUS
GDEP2001 CLC   GP2TB001(2),GP2ARGMT
         BNE   GDEP2002
         L     R15,GP2TB001+4
         B     GDEP2009
GDEP2002 CLC   GP2TB002(2),GP2ARGMT
         BNE   GDEP2003
         L     R15,GP2TB002+4
         B     GDEP2009
GDEP2003 CLC   GP2TB003(2),GP2ARGMT
         BNE   GDEP2013
         L     R15,GP2TB003+4
         B     GDEP2009
GDEP2013 CLC   GP2TB004(2),GP2ARGMT
         BNE   GDEP2004
         L     R15,GP2TB004+4
         B     GDEP2009
GDEP2004 CLC   GP2TBO1(2),GP2ARGMT
         BNE   GDEP2005
         L     R15,GP2TBO1+4
         B     GDEP2009
GDEP2005 CLC   GP2TBO2(2),GP2ARGMT
         BNE   GDEP2006
         L     R15,GP2TBO2+4
         B     GDEP2009
GDEP2006 CLC   GP2TBO3(2),GP2ARGMT
         BNE   GDEP2007
         L     R15,GP2TBO3+4
         B     GDEP2009
GDEP2007 CLC   GP2TBO4(2),GP2ARGMT
         BNE   GDEP2008
         L     R15,GP2TBO4+4
         B     GDEP2009
GDEP2008 MVC   R2RETCOD,=CL2'04'       BAD FUNCTION CODE
         B     GDEP200X
GDEP2009 BALR  R14,R15
GDEP200X GDESUBEN
         LTORG
         DS    0F
GP2TB001 DC   X'00',C'1  ',A(GDES100)  OPEN FILE
GP2TB002 DC   X'00',C'2  ',A(GDES500)  OPEN FILE THEN DO OUTPUT
GP2TB003 DC   X'00',C'3  ',A(GDES400)  DO NOTHING-FUNCTION ACCOMPLISHED
GP2TB004 DC   X'00',C'4  ',A(GDES400)  DO NOTHING-CANT FIND FILE
GP2TBO1  DC    C'O',C'1  ',A(GDES400)  DO NOTHING-FUNCTION ACCOMPLISHED
GP2TBO2  DC    C'O',C'2  ',A(GDES200)  WRITE
GP2TBO3  DC    C'O',C'3  ',A(GDES300)  CLOSE FILE
GP2TBO4  DC    C'O',C'4  ',A(GDESA00)  CLOSE FILE
GP2ARGMT DS    0CL4
GP2ARGEN DS    C
GP2ARGFN DS    CL3
         EJECT
***********************************************************************
* GDES100  -  OPEN FILE                                               *
* INPUT R2                                                            *
*       R3                                                            *
*       R4                                                            *
* OUTPUT AREA ADDED TO R4 CHAIN OF FILES AND OPENED                   *
***********************************************************************
GDES100  GDESUBST
         L     R0,SE1GETLG
         GETMAIN R,LV=(0)
         LR    R4,R1
         XC    R4NEXT,R4NEXT
         MVC   R4DDNAME,R2DDNAME
         ZAP   R4PGCNT,=PL4'0'
         ZAP   R4LNCNT,R2LN@PAG
         AP    R4LNCNT,=P'1'
         MVC   R4DCB(96),SE1DCB
         LA    R9,R4DCB
         MVC   R4DCB+40(8),R4DDNAME
         OPEN  ((R9),OUTPUT)
         MVI   R4STATUS,C'O'
         L     R11,=A(GP1FIRST)
         MVC   R4NEXT,0(R11)
         ST    R4,0(R11)
GDES100X GDESUBEN
         DS   0F
SE1GETLG DC    AL4(R4LEN)
SE1DCB   DCB   DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133
         EJECT
***********************************************************************
*  GDES200 - DO OUTPUT SETUP                                          *
*  INPUT - R2 THROUGH R4                                              *
*  OUTPUT                                                             *
*     SE2PRINT                                                        *
***********************************************************************
GDES200  GDESUBST
         MVC   R4HEX,R2HEX
         CLI   R2NEWPAG,C'1'                     DO SPECIAL CHECKS
         BE    GDES201                           DO SPECIAL CHECKS
         CLI   R2NEWPAG,C'3'                     DO SPECIAL CHECKS
         BE    GDES201                           DO SPECIAL CHECKS
GDES201A ZAP   R4LNCNT,R2LN@PAG                  DO SPECIAL CHECKS
         AP    R4LNCNT,=P'1'                     DO SPECIAL CHECKS
GDES201  CLI   R2RESPAG,C'1'                     DO SPECIAL CHECKS
         BE    GDES202                           DO SPECIAL CHECKS
         ZAP   R4PGCNT,=PL4'0'                   DO SPECIAL CHECKS
         SPACE 3
GDES202  CLI   R4HEX,C'1'
         BE    GDES210
         CLI   R4HEX,C'T'
         BE    GDES280
         SPACE 3
         MVC   SE2PRINT,SE2LN1              CHECK FOR 0 LENGTH PRINT
         XR    R9,R9                        CHECK FOR 0 LENGTH PRINT
         STCM  R9,B'0011',SE2LEN1           CHECK FOR 0 LENGTH PRINT
         STCM  R9,B'0011',SE2LEN3           CHECK FOR 0 LENGTH PRINT
         ICM   R9,B'0011',R2DATALN          CHECK FOR 0 LENGTH PRINT
         BNZ   GDES203                      CHECK FOR 0 LENGTH PRINT
         MVC   SE2PRINT,SE2LN2              CHECK FOR 0 LENGTH PRINT
         GDEGOSUB GDES700                   CHECK FOR 0 LENGTH PRINT
         B     GDES200X                     CHECK FOR 0 LENGTH PRINT
GDES203  CLC   R2SUBLEN,R2DATALN       ESTABLISH BLK/SUBBLK RELATION
         BNH   GDES204                 ESTABLISH BLK/SUBBLK RELATION
         ICM   R9,B'0011',R2DATALN     ESTABLISH BLK/SUBBLK RELATION
         B     GDES205                 ESTABLISH BLK/SUBBLK RELATION
GDES204  ICM   R9,B'0011',R2SUBLEN     ESTABLISH BLK/SUBBLK RELATION
         BNZ   GDES205                 ESTABLISH BLK/SUBBLK RELATION
         ICM   R9,B'0011',R2DATALN     ESTABLISH BLK/SUBBLK RELATION
GDES205  STH   R9,SE2LEN4              ESTABLISH BLK/SUBBLK RELATION
         SPACE 3
         CLI   R4HEX,C'2'
         BE    GDES220
         CLI   R4HEX,C'3'
         BE    GDES240
         CLI   R4HEX,C'4'
         BE    GDES230
         CLI   R4HEX,C'5'
         BE    GDES240
         CLI   R4HEX,C'6'
         BE    GDES250
         CLI   R4HEX,C'7'
         BE    GDES260
         CLI   R4HEX,C'8'
         BE    GDES270
         CLI   R4HEX,C'9'
         BE    GDES260
         GDEGOSUB GDES600
         B     GDES200X
         SPACE 3
         LTORG
         DS   0H
***********************************************************************
*  PROCESS CODE 1                                                     *
***********************************************************************
GDES210  MVC   SE2PRINT,R3DATA                   PROCESS HEX CODE 1
         GDEGOSUB GDES700                        PROCESS HEX CODE 1
         B     GDES200X                          PROCESS HEX CODE 1
         EJECT
***********************************************************************
*  PROCESS CODES 2                                                    *
***********************************************************************
GDES220  LR    R10,R3                            PROCESS HEX CODE 2
GDES221  ZAP   SE2LN3CT,=PL2'-10'                PROCESS HEX CODE 2
GDES222  CH    R9,=H'0'                          PROCESS HEX CODE 2
         BNH   GDES225                           PROCESS HEX CODE 2
         MVC   SE2LEN2,=H'99'                    PROCESS HEX CODE 2
         CH    R9,=H'100'                        PROCESS HEX CODE 2
         BH    GDES223                           PROCESS HEX CODE 2
         BCTR  R9,R0                             PROCESS HEX CODE 2
         STH   R9,SE2LEN2                        PROCESS HEX CODE 2
         LA    R9,1(R9)                          PROCESS HEX CODE 2
GDES223  ZAP   SE2WK3CT,R4LNCNT                  PROCESS HEX CODE 2
         AP    SE2WK3CT,=P'5'                    PROCESS HEX CODE 2
         CP    SE2WK3CT,R2LN@PAG                 PROCESS HEX CODE 2
         BNH   GDES224                           PROCESS HEX CODE 2
         ZAP   R4LNCNT,SE2WK3CT                  PROCESS HEX CODE 2
GDES224  LH    R11,SE2LEN2                       PROCESS HEX CODE 2
         MVC   SE2PRINT,SE2LN1                   PROCESS HEX CODE 2
         EX    R11,GDES20EX                      PROCESS HEX CODE 2
         EX    R11,GDES23EX                      PROCESS HEX CODE 2
         MVI   SE2PRINT,C'0'                     PROCESS HEX CODE 2
         GDEGOSUB GDES700                        PROCESS HEX CODE 2
         LH    R11,SE2LEN2                       PROCESS HEX CODE 2
         MVC   SE2PRINT,SE2LN1                   PROCESS HEX CODE 2
         EX    R11,GDES20EX                      PROCESS HEX CODE 2
         EX    R11,GDES24EX                      PROCESS HEX CODE 2
         GDEGOSUB GDES700                        PROCESS HEX CODE 2
         LH    R11,SE2LEN2                       PROCESS HEX CODE 2
         MVC   SE2PRINT,SE2LN1                   PROCESS HEX CODE 2
         EX    R11,GDES20EX                      PROCESS HEX CODE 2
         EX    R11,GDES25EX                      PROCESS HEX CODE 2
         GDEGOSUB GDES700                        PROCESS HEX CODE 2
         LH    R11,SE2LEN2                       PROCESS HEX CODE 2
         AH    R11,=H'30'                        PROCESS HEX CODE 2
         EX    R11,GDES21EX                      PROCESS HEX CODE 2
         MVC   SE2LN3(22),SE2LN1                 PROCESS HEX CODE 4
         MVC   SE2WORK3(20),SE2LN1          PROCESS HEX CODE 3 & 5
         AP    SE2LN3CT,=P'10'                   PROCESS HEX CODE 2
         ED    SE2PRINT+22(8),SE2LN3CT           PROCESS HEX CODE 2
         GDEGOSUB GDES700                        PROCESS HEX CODE 2
         LH    R11,SE2LEN2                       PROCESS HEX CODE 2
         LA    R11,1(R11)                        PROCESS HEX CODE 2
         AR    R10,R11                           PROCESS HEX CODE 2
         SR    R9,R11                            PROCESS HEX CODE 2
         AH    R11,SE2LEN3                       PROCESS HEX CODE 2
         STH   R11,SE2LEN3                       PROCESS HEX CODE 2
         B     GDES222                           PROCESS HEX CODE 2
GDES225  LH    R11,SE2LEN3                       PROCESS HEX CODE 2
         XC    SE2LEN3,SE2LEN3                   PROCESS HEX CODE 2
         AH    R11,SE2LEN1                       PROCESS HEX CODE 2
         STH   R11,SE2LEN1                       PROCESS HEX CODE 2
         XR    R9,R9                             PROCESS HEX CODE 2
         ICM   R9,B'0011',R2DATALN               PROCESS HEX CODE 2
         SR    R9,R11                            PROCESS HEX CODE 2
         BNH   GDES200X                          PROCESS HEX CODE 2
         CLM   R9,B'0011',SE2LEN4                PROCESS HEX CODE 2
         BNH   GDES221                           PROCESS HEX CODE 2
         XR    R9,R9                             PROCESS HEX CODE 2
         ICM   R9,B'0011',SE2LEN4                PROCESS HEX CODE 2
         B     GDES221                           PROCESS HEX CODE 2
         EJECT
***********************************************************************
*  PROCESS CODE4.                                                     *
***********************************************************************
GDES230  LR    R10,R3                            PROCESS HEX CODE 4
         MVC   SE2PRINT,SE2LN3                   PROCESS HEX CODE 4
         MVC   SE2PRINT+22(8),SE2LN1             PROCESS HEX CODE 4
         MVC   SE2LN3(22),SE2LN1                 PROCESS HEX CODE 4
         MVC   SE2WORK3(20),SE2LN1          PROCESS HEX CODE 3 & 5
         MVI   SE2PRINT,C'0'                     PROCESS HEX CODE 4
         MVI   SE2HX4ON,C'Y'                     PROCESS HEX CODE 4
         GDEGOSUB GDES700                        PROCESS HEX CODE 4
         MVI   SE2HX4ON,C'N'                     PROCESS HEX CODE 4
GDES231  ZAP   SE2LN3CT,=PL2'-100'               PROCESS HEX CODE 4
GDES232  CH    R9,=H'0'                          PROCESS HEX CODE 4
         BNH   GDES235                           PROCESS HEX CODE 4
         MVC   SE2LEN2,=H'99'                    PROCESS HEX CODE 4
         CH    R9,=H'100'                        PROCESS HEX CODE 4
         BH    GDES233                           PROCESS HEX CODE 4
         BCTR  R9,R0                             PROCESS HEX CODE 4
         STH   R9,SE2LEN2                        PROCESS HEX CODE 4
         LA    R9,1(R9)                          PROCESS HEX CODE 4
GDES233  LH    R11,SE2LEN2                       PROCESS HEX CODE 4
         MVC   SE2PRINT,SE2LN1                   PROCESS HEX CODE 4
         EX    R11,GDES20EX                      PROCESS HEX CODE 4
         EX    R11,GDES23EX                      PROCESS HEX CODE 4
         MVC   SE2PRINT+00(29),SE2LN5            PROCESS HEX CODE 4
         AP    SE2LN3CT,=P'100'                  PROCESS HEX CODE 4
         ED    SE2PRINT+20(8),SE2LN3CT           PROCESS HEX CODE 4
         CP    SE2LN3CT,=P'0'                    PROCESS HEX CODE 4
         BNE   GDES234                           PROCESS HEX CODE 4
         MVI   SE2PRINT+19,C' '                  PROCESS HEX CODE 4
GDES234  GDEGOSUB GDES700                        PROCESS HEX CODE 4
         LH    R11,SE2LEN2                       PROCESS HEX CODE 4
         LA    R11,1(R11)                        PROCESS HEX CODE 4
         AR    R10,R11                           PROCESS HEX CODE 4
         SR    R9,R11                            PROCESS HEX CODE 4
         AH    R11,SE2LEN3                       PROCESS HEX CODE 4
         STH   R11,SE2LEN3                       PROCESS HEX CODE 4
         B     GDES232                           PROCESS HEX CODE 4
GDES235  LH    R11,SE2LEN3                       PROCESS HEX CODE 4
         XC    SE2LEN3,SE2LEN3                   PROCESS HEX CODE 4
         AH    R11,SE2LEN1                       PROCESS HEX CODE 4
         STH   R11,SE2LEN1                       PROCESS HEX CODE 4
         XR    R9,R9                             PROCESS HEX CODE 4
         ICM   R9,B'0011',R2DATALN               PROCESS HEX CODE 4
         SR    R9,R11                            PROCESS HEX CODE 4
         BNH   GDES200X                          PROCESS HEX CODE 4
         CLM   R9,B'0011',SE2LEN4                PROCESS HEX CODE 4
         BNH   GDES231                           PROCESS HEX CODE 4
         XR    R9,R9                             PROCESS HEX CODE 4
         ICM   R9,B'0011',SE2LEN4                PROCESS HEX CODE 4
         B     GDES231                           PROCESS HEX CODE 4
         EJECT
***********************************************************************
*  PROCESS CODE 3 AND 5.                                              *
***********************************************************************
GDES240  LR    R10,R3                       PROCESS HEX CODE 3 & 5
GDES241  ZAP   SE2WK3CT,=PL2'-32'           PROCESS HEX CODE 3 & 5
GDES242  CH    R9,=H'0'                     PROCESS HEX CODE 3 & 5
         BNH   GDES248                      PROCESS HEX CODE 3 & 5
         MVC   SE2LEN2,=H'32'               PROCESS HEX CODE 3 & 5
         MVC   SE2LEN5,=H'64'               PROCESS HEX CODE 3 & 5
         MVC   SE2WORK4,SE2LN1              PROCESS HEX CODE 3 & 5
         LA    R1,SE2WORK4                  PROCESS HEX CODE 3 & 5
         CH    R9,=H'32'                    PROCESS HEX CODE 3 & 5
         BH    GDES243                      PROCESS HEX CODE 3 & 5
         LR    R8,R9                        PROCESS HEX CODE 3 & 5
         STH   R8,SE2LEN2                   PROCESS HEX CODE 3 & 5
         SLL   R8,1(R0)                     PROCESS HEX CODE 3 & 5
         STCM  R8,B'0011',SE2LEN5           PROCESS HEX CODE 3 & 5
GDES243  MVC   SE2WORK2,SE2WORK1            PROCESS HEX CODE 3 & 5
         LH    R8,SE2LEN2                   PROCESS HEX CODE 3 & 5
         LA    R11,SE2WORK2+1               PROCESS HEX CODE 3 & 5
GDES244  ICM   R7,B'1000',0(R10)            PROCESS HEX CODE 3 & 5
         STCM  R7,B'1000',0(R1)             PROCESS HEX CODE 3 & 5
         LA    R1,1(R1)                     PROCESS HEX CODE 3 & 5
         LA    R5,2(R0)                     PROCESS HEX CODE 3 & 5
GDES245  XR    R6,R6                        PROCESS HEX CODE 3 & 5
         SLDL  R6,4(R0)                     PROCESS HEX CODE 3 & 5
         STCM  R6,B'0001',0(R11)            PROCESS HEX CODE 3 & 5
         LA    R11,1(R11)                   PROCESS HEX CODE 3 & 5
         BCT   R5,GDES245                   PROCESS HEX CODE 3 & 5
         LA    R10,1(R10)                   PROCESS HEX CODE 3 & 5
         BCT   R8,GDES244                   PROCESS HEX CODE 3 & 5
         ICM   R8,B'0011',SE2LEN5           PROCESS HEX CODE 3 & 5
         BCTR  R8,R0                        PROCESS HEX CODE 3 & 5
         EX    R8,GDES27EX                  PROCESS HEX CODE 3 & 5
         MVC   SE2PRINT,SE2LN4              PROCESS HEX CODE 3 & 5
         TR    SE2PRINT,SE2WORK2            PROCESS HEX CODE 3 & 5
         MVC   SE2PRINT(28),SE2WORK3        PROCESS HEX CODE 3 & 5
         MVC   SE2LN3(22),SE2LN1                 PROCESS HEX CODE 4
         MVC   SE2WORK3(20),SE2LN1          PROCESS HEX CODE 3 & 5
         AP    SE2WK3CT,=PL2'32'            PROCESS HEX CODE 3 & 5
         CP    SE2WK3CT,=P'0'               PROCESS HEX CODE 3 & 5
         BNE   GDES246                      PROCESS HEX CODE 3 & 5
         MVI   SE2PRINT+20,C' '             PROCESS HEX CODE 3 & 5
         MVI   SE2PRINT,C'0'                PROCESS HEX CODE 3 & 5
GDES246  ED    SE2PRINT+21(6),SE2WK3CT      PROCESS HEX CODE 3 & 5
         CLI   R4HEX,C'5'                   PROCESS HEX CODE 3 & 5
         BE    GDES247                      PROCESS HEX CODE 3 & 5
         MVC   SE2PRINT+101(32),SE2WORK4    PROCESS HEX CODE 3 & 5
         TR    SE2PRINT+101(32),SE2TRAN1    PROCESS HEX CODE 3 & 5
*        MVI   SE2PRINT+099,C'*'            PROCESS HEX CODE 3 & 5
*        MVI   SE2PRINT+132,C'*'            PROCESS HEX CODE 3 & 5
GDES247  GDEGOSUB GDES700                   PROCESS HEX CODE 3 & 5
         LH    R11,SE2LEN2                  PROCESS HEX CODE 3 & 5
         SR    R9,R11                       PROCESS HEX CODE 3 & 5
         AH    R11,SE2LEN3                  PROCESS HEX CODE 3 & 5
         STH   R11,SE2LEN3                  PROCESS HEX CODE 3 & 5
         B     GDES242                      PROCESS HEX CODE 3 & 5
GDES248  LH    R11,SE2LEN3                  PROCESS HEX CODE 3 & 5
         XC    SE2LEN3,SE2LEN3              PROCESS HEX CODE 3 & 5
         AH    R11,SE2LEN1                  PROCESS HEX CODE 3 & 5
         STH   R11,SE2LEN1                  PROCESS HEX CODE 3 & 5
         XR    R9,R9                        PROCESS HEX CODE 3 & 5
         ICM   R9,B'0011',R2DATALN          PROCESS HEX CODE 3 & 5
         SR    R9,R11                       PROCESS HEX CODE 3 & 5
         BNH   GDES200X                     PROCESS HEX CODE 3 & 5
         CLM   R9,B'0011',SE2LEN4           PROCESS HEX CODE 3 & 5
         BNH   GDES241                      PROCESS HEX CODE 3 & 5
         XR    R9,R9                        PROCESS HEX CODE 3 & 5
         ICM   R9,B'0011',SE2LEN4           PROCESS HEX CODE 3 & 5
         B     GDES241                      PROCESS HEX CODE 3 & 5
         EJECT
***********************************************************************
*  PROCESS FUNCTION 6.                                                *
***********************************************************************
GDES250  STM   R14,R12,SE2SAVE
         LR    R10,R3
         XR    R9,R9                             PROCESS HEX CODE 6
         ICM   R9,B'0011',R2DATALN               PROCESS HEX CODE 6
GDES251  CH    R9,=H'0'                          PROCESS HEX CODE 6
         BNH   GDES253                           PROCESS HEX CODE 6
         MVC   SE2LEN2,=H'255'                   PROCESS HEX CODE 6
         CH    R9,=H'256'                        PROCESS HEX CODE 6
         BH    GDES252                           PROCESS HEX CODE 6
         BCTR  R9,R0                             PROCESS HEX CODE 6
         STH   R9,SE2LEN2                        PROCESS HEX CODE 6
         LA    R9,1(R9)                          PROCESS HEX CODE 6
GDES252  LH    R11,SE2LEN2                       PROCESS HEX CODE 6
         L     R8,=A(SE2TRAN5)
         EX    R11,GDES26EX                      PROCESS HEX CODE 6
         BNZ   GDES254                           PROCESS HEX CODE 6
         LH    R11,SE2LEN2                       PROCESS HEX CODE 6
         LA    R11,1(R11)                        PROCESS HEX CODE 6
         SR    R9,R11                            PROCESS HEX CODE 6
         AR    R10,R11                           PROCESS HEX CODE 6
         B     GDES251                           PROCESS HEX CODE 6
GDES253  LM    R14,R12,SE2SAVE                   PROCESS HEX CODE 6
         MVI   R4HEX,C'4'
         B     GDES230                           PROCESS HEX CODE 6
GDES254  LM    R14,R12,SE2SAVE                   PROCESS HEX CODE 6
         MVI   R4HEX,C'3'
         B     GDES240                           PROCESS HEX CODE 6
         EJECT
***********************************************************************
*  PROCESS CODE 7.                                                    *
***********************************************************************
GDES260  LR    R10,R3                       PROCESS HEX CODE 7
         MVC   SE2WORK5,=CL20' '            PROCESS HEX CODE 7
         MVI   SE2WORK5,C'0'                PROCESS HEX CODE 7
         CLI   R4HEX,C'9'                   PROCESS HEX CODE 9
         BNE   GDES261                      PROCESS HEX CODE 9
         LA    R6,SE2TIME
         XC    SE2TIME,SE2TIME
         TIME  DEC,(R6),LINKAGE=SYSTEM,DATETYPE=YYYYMMDD
         OI    SE2TIME+3,X'0F'                   PROCESS HEX CODE 9
         MVI   SE2TIME+12,X'0F'                  PROCESS HEX CODE 9
         UNPK  SE2SEC(7),SE2TIME(4)              PROCESS HEX CODE 9
         MVC   SE2DATE+06(2),SE2SEC+00           PROCESS HEX CODE 9
         MVC   SE2DATE+08(2),SE2SEC+02           PROCESS HEX CODE 9
         MVC   SE2DATE+10(2),SE2SEC+04           PROCESS HEX CODE 9
         UNPK  SE2SEC(7),SE2TIME+9(4)            PROCESS HEX CODE 9
         MVC   SE2DATE+00(2),SE2SEC+00           PROCESS HEX CODE 9
         MVC   SE2DATE+02(2),SE2SEC+02           PROCESS HEX CODE 9
         MVC   SE2DATE+04(2),SE2SEC+04           PROCESS HEX CODE 9
         MVC   SE2WORK5+01(2),SE2DATE+2          PROCESS HEX CODE 9
         MVC   SE2WORK5+03(2),SE2DATE+4          PROCESS HEX CODE 9
         MVC   SE2WORK5+06(2),SE2DATE+6          PROCESS HEX CODE 9
         MVC   SE2WORK5+08(2),SE2DATE+8          PROCESS HEX CODE 9
         MVC   SE2WORK5+10(2),SE2DATE+10         PROCESS HEX CODE 9
GDES261  CH    R9,=H'0'                     PROCESS HEX CODE 7
         BNH   GDES268                      PROCESS HEX CODE 7
         MVC   SE2LEN2,=H'32'               PROCESS HEX CODE 7
         MVC   SE2LEN5,=H'64'               PROCESS HEX CODE 7
         MVC   SE2WORK4,SE2LN1              PROCESS HEX CODE 7
         LR    R1,R10                       PROCESS HEX CODE 7
         SLL   R1,8(R0)                     PROCESS HEX CODE 7
         LA    R11,SE2WORK5+13              PROCESS HEX CODE 7
         LA    R8,6(R0)                     PROCESS HEX CODE 7
GDES262  XR    R0,R0                        PROCESS HEX CODE 7
         SLDL  R0,4(R0)                     PROCESS HEX CODE 7
         STCM  R0,B'0001',0(R11)            PROCESS HEX CODE 7
         LA    R11,1(R11)                   PROCESS HEX CODE 7
         BCT   R8,GDES262                   PROCESS HEX CODE 7
         TR    SE2WORK5+13(6),SE2TRAN4      PROCESS HEX CODE 7
         LA    R1,SE2WORK4                  PROCESS HEX CODE 7
         CH    R9,=H'32'                    PROCESS HEX CODE 7
         BH    GDES263                      PROCESS HEX CODE 7
         LR    R8,R9                        PROCESS HEX CODE 7
         STH   R8,SE2LEN2                   PROCESS HEX CODE 7
         SLL   R8,1(R0)                     PROCESS HEX CODE 7
         STCM  R8,B'0011',SE2LEN5           PROCESS HEX CODE 7
GDES263  MVC   SE2WORK2,SE2WORK1            PROCESS HEX CODE 7
         LH    R8,SE2LEN2                   PROCESS HEX CODE 7
         LA    R11,SE2WORK2+1               PROCESS HEX CODE 7
GDES264  ICM   R7,B'1000',0(R10)            PROCESS HEX CODE 7
         STCM  R7,B'1000',0(R1)             PROCESS HEX CODE 7
         LA    R1,1(R1)                     PROCESS HEX CODE 7
         LA    R5,2(R0)                     PROCESS HEX CODE 7
GDES265  XR    R6,R6                        PROCESS HEX CODE 7
         SLDL  R6,4(R0)                     PROCESS HEX CODE 7
         STCM  R6,B'0001',0(R11)            PROCESS HEX CODE 7
         LA    R11,1(R11)                   PROCESS HEX CODE 7
         BCT   R5,GDES265                   PROCESS HEX CODE 7
         LA    R10,1(R10)                   PROCESS HEX CODE 7
         BCT   R8,GDES264                   PROCESS HEX CODE 7
         ICM   R8,B'0011',SE2LEN5           PROCESS HEX CODE 7
         BCTR  R8,R0                        PROCESS HEX CODE 7
         EX    R8,GDES27EX                  PROCESS HEX CODE 7
         MVC   SE2PRINT,SE2LN4              PROCESS HEX CODE 7
         TR    SE2PRINT,SE2WORK2            PROCESS HEX CODE 7
         MVC   SE2PRINT(20),SE2WORK5        PROCESS HEX CODE 7
         MVC   SE2WORK5,=CL20' '            PROCESS HEX CODE 7
         MVC   SE2PRINT+101(32),SE2WORK4    PROCESS HEX CODE 7
         TR    SE2PRINT+101(32),SE2TRAN1    PROCESS HEX CODE 7
*        MVI   SE2PRINT+096,C'*'            PROCESS HEX CODE 7
*        MVI   SE2PRINT+129,C'*'            PROCESS HEX CODE 7
         GDEGOSUB GDES700                   PROCESS HEX CODE 7
         LH    R11,SE2LEN2                  PROCESS HEX CODE 7
         SR    R9,R11                       PROCESS HEX CODE 7
         AH    R11,SE2LEN3                  PROCESS HEX CODE 7
         STH   R11,SE2LEN3                  PROCESS HEX CODE 7
         B     GDES261                      PROCESS HEX CODE 7
GDES268  LH    R11,SE2LEN3                  PROCESS HEX CODE 7
         XC    SE2LEN3,SE2LEN3              PROCESS HEX CODE 7
         AH    R11,SE2LEN1                  PROCESS HEX CODE 7
         STH   R11,SE2LEN1                  PROCESS HEX CODE 7
         XR    R9,R9                        PROCESS HEX CODE 7
         ICM   R9,B'0011',R2DATALN          PROCESS HEX CODE 7
         SR    R9,R11                       PROCESS HEX CODE 7
         BNH   GDES200X                     PROCESS HEX CODE 7
         CLM   R9,B'0011',SE2LEN4           PROCESS HEX CODE 7
         BNH   GDES261                      PROCESS HEX CODE 7
         XR    R9,R9                        PROCESS HEX CODE 7
         ICM   R9,B'0011',SE2LEN4           PROCESS HEX CODE 7
         B     GDES261                      PROCESS HEX CODE 7
         EJECT
***********************************************************************
*  PROCESS FUNCTION 8.                                                *
***********************************************************************
GDES270  STM   R14,R12,SE2SAVE
         LA    R6,SE2TIME
         XC    SE2TIME,SE2TIME
         TIME  DEC,(R6),LINKAGE=SYSTEM,DATETYPE=YYYYMMDD
         OI    SE2TIME+3,X'0F'                   PROCESS HEX CODE 8
         MVI   SE2TIME+12,X'0F'                  PROCESS HEX CODE 8
         UNPK  SE2SEC(7),SE2TIME(4)              PROCESS HEX CODE 8
         MVC   SE2DATE+06(2),SE2SEC+00           PROCESS HEX CODE 8
         MVC   SE2DATE+08(2),SE2SEC+02           PROCESS HEX CODE 8
         MVC   SE2DATE+10(2),SE2SEC+04           PROCESS HEX CODE 8
         UNPK  SE2SEC(7),SE2TIME+9(4)            PROCESS HEX CODE 8
         MVC   SE2DATE+00(2),SE2SEC+00           PROCESS HEX CODE 8
         MVC   SE2DATE+02(2),SE2SEC+02           PROCESS HEX CODE 8
         MVC   SE2DATE+04(2),SE2SEC+04           PROCESS HEX CODE 8
         MVC   SE2PRINT,SE2LN6                   PROCESS HEX CODE 8
         MVC   SE2PL1A,SE2DATE                    PROCESS HEX CODE 8
         MVC   SE2PL2A,SE2DATE+2                  PROCESS HEX CODE 8
         MVC   SE2PL3A,SE2DATE+4                  PROCESS HEX CODE 8
         MVC   SE2PL4A,SE2DATE+6                  PROCESS HEX CODE 8
         MVC   SE2PL5A,SE2DATE+8                  PROCESS HEX CODE 8
         MVC   SE2PL6A,SE2DATE+10                 PROCESS HEX CODE 8
         MVI   SE2PL1AX,C'/'       PROCESS HEX CODE 8
         MVI   SE2PL2AX,C'/'       PROCESS HEX CODE 8
         MVI   SE2PL4AY,C':'       PROCESS HEX CODE 8
         MVI   SE2PL5AY,C':'       PROCESS HEX CODE 8
         MVC   SE2PL1B,SE2DATE                    PROCESS HEX CODE 8
         MVC   SE2PL2B,SE2DATE+2                  PROCESS HEX CODE 8
         MVC   SE2PL3B,SE2DATE+4                  PROCESS HEX CODE 8
         MVC   SE2PL4B,SE2DATE+6                  PROCESS HEX CODE 8
         MVC   SE2PL5B,SE2DATE+8                  PROCESS HEX CODE 8
         MVC   SE2PL6B,SE2DATE+10                 PROCESS HEX CODE 8
         MVI   SE2PL1BX,C'/'       PROCESS HEX CODE 8
         MVI   SE2PL2BX,C'/'       PROCESS HEX CODE 8
         MVI   SE2PL4BY,C':'       PROCESS HEX CODE 8
         MVI   SE2PL5BY,C':'       PROCESS HEX CODE 8
         LM    R14,R12,SE2SAVE                   PROCESS HEX CODE 8
         B     GDES250                           PROCESS HEX CODE 8
         EJECT
GDES280  L     R3,=A(SE9TRACE)          PUT TRACE PRINT LINE
         B     GDES210
***********************************************************************
*  EXIT FROM PRINTING                                                 *
***********************************************************************
GDES200X GDESUBEN
         SPACE 3
GDES20EX MVC   SE2PRINT+30(*-*),0(R10)
GDES21EX MVC   SE2PRINT(*-*),SE2LN3
GDES22EX TR    SE2PRINT+30(*-*),0(R11)
GDES23EX TR    SE2PRINT+30(*-*),SE2TRAN1
GDES24EX TR    SE2PRINT+30(*-*),SE2TRAN2
GDES25EX TR    SE2PRINT+30(*-*),SE2TRAN3
GDES26EX TRT   0(*-*,R10),0(R8) SE2TRAN5
GDES27EX TR    SE2WORK2+1(*-*),SE2TRAN4
SE2SAVE  DC    15F'-1'
SE2TIME  DC   2D'-1'
SE2SEC   DC    CL7' '
SE2RET   DC    CL2'  '
SE2DATE  DC    CL12'  '
SE2HX4ON DC    CL1'N'
SE2PRINT DC    CL133' '
SE2LN1   DC    CL133' '
SE2LN2   DC    CL133'0  NULL LENGTH OF DATA REQUESTED TO BE PRINTED'
SE2LN3CT DC    PL4'0'
SE2LEN1  DC    H'0'
SE2LEN2  DC    H'0'
SE2LEN3  DC    H'0'
SE2LEN4  DC    H'0'
SE2LEN5  DC    H'0'
SE2LN3   DC    CL22' ',XL8'4020202020202020'
SE2PL1B  EQU   SE2LN3+1,2
SE2PL1BX EQU   SE2LN3+3,1
SE2PL2B  EQU   SE2LN3+4,2
SE2PL2BX EQU   SE2LN3+6,1
SE2PL3B  EQU   SE2LN3+7,2
SE2PL4B  EQU   SE2LN3+10,2
SE2PL4BY EQU   SE2LN3+12,1
SE2PL5B  EQU   SE2LN3+13,2
SE2PL5BY EQU   SE2LN3+15,1
SE2PL6B  EQU   SE2LN3+16,2
         DC    CL28'1...5...10...15...20...25...'
         DC    CL50'30...35...40...45...50...55...60...65...70...75...'
         DC    CL22'80...85...90...95...99',CL3' '
SE2LN4   DC    XL28'00'
         DC    XL18'010203040506070800090A0B0C0D0E0F1000'
         DC    XL19'111213141516171800191A1B1C1D1E1F200000'
         DC    XL18'212223242526272800292A2B2C2D2E2F3000'
         DC    XL18'313233343536373800393A3B3C3D3E3F4000'
         DC    XL32'00'
SE2LN5   DC    CL19' ',CL1'+',XL8'4020202020202020',CL2'  '
SE2LN6   DC    CL133'0   XX/XX/XX XX:XX:XX      SYSTEM TIME'
SE2TRAN1 DC    CL16'................' 1
         DC    CL16'................' 2
         DC    CL16'................' 3
         DC    CL16'................' 4
         DC    CL16' .........[.<(+]' 5
         DC    CL16'&&.........!$*);^' 6
         DC    CL16'-/........ª,%_>?' 7
         DC    CL16'..........:#@''="' 8
         DC    CL16'...........{....' 9
         DC    CL16'...........}....' 10
         DC    CL16'................' 11
         DC    CL16'................' 12
         DC    CL16'.ABCDEFGHI......' 13
         DC    CL16'.JKLMNOPQR......' 14
         DC    CL16'..STUVWXYZ......' 15
         DC    CL16'0123456789......' 16
SE2TRAN2 DC  16C'0',16C'1',16C'2',16C'3',16C'4',16C'5',16C'6',16C'7'
         DC  16C'8',16C'9',16C'A',16C'B',16C'C',16C'D',16C'E',16C'F'
SE2TRAN3 DC  16C'0123456789ABCDEF'
SE2TRAN4 DC  C'0123456789ABCDEF'
*                  0 1 2 3 4 5 6 7 8 9 A B C D E F
SE2WORK1 DC  65XL1'40'
SE2WORK2 DC  XL65'00'
SE2WORK3 DC    CL20' ',CL1'+',XL6'402020202120',CL1' '
SE2PL1A  EQU   SE2WORK3+1,2
SE2PL1AX EQU   SE2WORK3+3,1
SE2PL2A  EQU   SE2WORK3+4,2
SE2PL2AX EQU   SE2WORK3+6,1
SE2PL3A  EQU   SE2WORK3+7,2
SE2PL4A  EQU   SE2WORK3+10,2
SE2PL4AY EQU   SE2WORK3+12,1
SE2PL5A  EQU   SE2WORK3+13,2
SE2PL5AY EQU   SE2WORK3+15,1
SE2PL6A  EQU   SE2WORK3+16,2
SE2WORK4 DC  CL32' '
SE2WORK5 DC  CL20' '
SE2WK3CT DC  PL3'0'
***********************************************************************
*  GDES300 -  CLOSE FILE AND FREE STORAGE                             *
*  INPUT REGS                                                         *
* OUTPUT CLOSED FILE                                                  *
*        FREED STORAGE                                                *
***********************************************************************
GDES300  GDESUBST
         LA    R9,R4DCB
         CLOSE ((R9),)
         LR    R9,R4
         L     R10,R4NEXT
         L     R4,=A(GP1FIRST)
GDES310  DS    0H
         C     R9,R4NEXT
         BE    GDES320
         L     R4,R4NEXT
         B     GDES310
GDES320  DS    0H
         ST    R10,R4NEXT
         SR    R4,R4
         L     R0,SE3GETLG
         LR    R1,R9
         FREEMAIN R,LV=(0),A=(1)
GDES300X GDESUBEN
         DS   0F
SE3GETLG DC    AL4(R4LEN)
SE3GETMN DS    F
SE3CXFUN DC    CL2'00'
SE3CXRET DC    CL2'00'
         EJECT
***********************************************************************
* GDES400 - DO NOTHING FUNCTION IS ACCOMPLISHED                       *
***********************************************************************
GDES400  GDESUBST
GDES400X GDESUBEN
         EJECT
***********************************************************************
* GDES500 - DOES OPEN THEN OUTPUT                                     *
***********************************************************************
GDES500  GDESUBST
         GDEGOSUB GDES100
         GDEGOSUB GDEP200
         L     R4,=A(GP1R4SAV)
         L     R4,0(R4)
         GDEGOSUB GDES200
GDES500X GDESUBEN
         EJECT
***********************************************************************
* GDES600 - ABENDS INVALID FUNCTION / UNKNOWN PROGRAM ERROR           *
***********************************************************************
GDES600  GDESUBST
         MVC   R2RETCOD,=CL2'16'
GDES600X GDESUBEN
         EJECT
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDES700 DOES OUTPUT TO DDNAME                                       *
*    INPUT: SE2PRINT                                                  *
*    OUTPUT: PRINT LINE AND HEADINGS TO DDNAME IF LINE COUNT DICATES. *
*    CALLES: GDE001CC                                                 *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
GDES700  GDESUBST
         L     R11,=A(SE2PRINT)         MOVE PRINT LINE
         MVC   SE7PRINT,0(R11)          MOVE PRINT LINE
         CLI   R2PAGBRK,C'2'            DO BREAKS?
         BE    GDES750                  NO-BRANCH
         GDEGOSUB GDES780
         CP    R4LNCNT,R2LN@PAG
         BNH   GDES760
         CLI   R2NEWPAG,C'3'            SUBHEADING NEEDED THIS CALL
         BNE   GDES701
         MVI   R2NEWPAG,C'1'            HEADING WILL OCCUR - DON'T DO
GDES701  CLI   R2PAGBRK,C'3'            NON - STANDARD HEADINGS?
         BE    GDES745                  YES-BRANCH
         LA    R6,SE7DATE
         XC    SE7DATE,SE7DATE
         TIME  DEC,(R6),LINKAGE=SYSTEM,DATETYPE=YYYYMMDD
         OI    SE7DATE+3,X'0F'
         MVI   SE7DATE+12,X'0F'
         UNPK  SE7SEC(7),SE7DATE(4)
         MVC   SE7DATA+06(2),SE7SEC+00
         MVC   SE7DATA+08(2),SE7SEC+02
         MVC   SE7DATA+10(2),SE7SEC+04
         UNPK  SE7SEC(7),SE7DATE+9(4)
         MVC   SE7DATA+00(2),SE7SEC+00
         MVC   SE7DATA+02(2),SE7SEC+02
         MVC   SE7DATA+04(2),SE7SEC+04
         MVC   SE7PRINT,SE7HD1          PUT HEAD 1
         MVC   SE7PRINT+08(10),=CL10'RUN DATE: '
         MVC   SE7PRINT+18(02),SE7DATA+2
         MVC   SE7PRINT+21(02),SE7DATA+4
         MVC   SE7PRINT+24(02),SE7DATA+0
         MVI   SE7PRINT+20,C'/'
         MVI   SE7PRINT+23,C'/'
         MVC   SE7PRINT+116(10),R2REPTID
         GDEGOSUB GDES780
         GDEGOSUB GDES790               PUT HEAD 1
         MVC   SE7PRINT,SE7HD2          PUT HEAD 2
         MVC   SE7PRINT+8(10),=CL10'RUN TIME: '
         MVC   SE7PRINT+18(02),SE7DATA+6
         MVC   SE7PRINT+21(02),SE7DATA+8
         MVC   SE7PRINT+24(02),SE7DATA+10
         MVI   SE7PRINT+20,C':'
         MVI   SE7PRINT+23,C':'
         AP    R4PGCNT,=PL1'1'          PUT HEAD 2
         ED    SE7PRINT+122(7),R4PGCNT  PUT HEAD 2
GDES702  L     R5,=A(GP1R1SAV)
         L     R5,0(R5)
         LA    R5,4(R5)
         L     R6,0(R5)
         LTR   R6,R6
         BL    GDES705
         LA    R5,4(R5)
         L     R6,0(R5)
         CLI   R2PAGBRK,C'3'            NON - STANDARD HEADINGS?
         BE    GDES703                  YES-BRANCH
         CLI   R2NEWPAG,C'3'            SUBHEADING BREAK?
         BE    GDES710                  YES-BRANCH
         MVC   SE7PRINT+26(90),26(R6)
         B     GDES705
GDES703  MVC   SE7PRINT+1(132),1(R6)
GDES705  GDEGOSUB GDES780
         GDEGOSUB GDES790               PUT HEAD 2
GDES710  LTR   R6,R6
         BL    GDES730
         LA    R5,4(R5)
         L     R6,0(R5)
         MVC   SE7PRINT,0(R6)
         GDEGOSUB GDES780
         GDEGOSUB GDES790               PUT NEXT HEADING
         B     GDES710
GDES730  CLI   R2NEWPAG,C'3'            DO SUBHEADING BREAK?
         BNE   GDES735                  NO-BRANCH
         MVI   R2NEWPAG,C'1'            DONE SUBHEADING
GDES735  CLI   R4HEX,C'4'
         BNE   GDES740
         L     R11,=A(SE2HX4ON)
         CLI   0(R11),C'Y'
         BE    GDES740
         MVC   SE7PRINT,SE7LN1
         GDEGOSUB GDES780
         GDEGOSUB GDES790
GDES740  L     R11,=A(SE2PRINT)         MOVE PRINT LINE
         MVC   SE7PRINT,0(R11)          MOVE PRINT LINE
         GDEGOSUB GDES780
         GDEGOSUB GDES790               PRINT LINE
         B     GDES700X
GDES745  MVI   SE7PRINT+1,C' '          PUT HEAD 3
         MVC   SE7PRINT+2(L'SE7PRINT-2),SE7PRINT+1
         MVI   SE7PRINT,C'1'            PUT HEAD 3
         B     GDES702
GDES750  CLI   SE7PRINT,C'1'
         BE    GDES760
         CLI   SE7PRINT,C' '
         BE    GDES760
         CLI   SE7PRINT,C'-'
         BE    GDES760
         CLI   SE7PRINT,C'0'
         BE    GDES760
         CLI   SE7PRINT,C'+'
         BE    GDES760
         MVI   SE7PRINT,C' '
         B     GDES760
GDES760  CLI   R2NEWPAG,C'3'            DO SUBHEADING BREAK?
         BNE   GDES765                  NO-BRANCH
         MVI   SE7PRINT+1,C' '          PUT HEAD 3
         MVC   SE7PRINT+2(L'SE7PRINT-2),SE7PRINT+1
         B     GDES702                  BRANCH - DO IT
GDES765  GDEGOSUB GDES790               PRINT LINE
         B     GDES700X
GDES700X GDESUBEN
         SPACE 3
GDES780  GDESUBST
         CLI   SE7PRINT,C'1'            DO LINE CNT
         BNE   GDES781                  DO LINE CNT
         ZAP   R4LNCNT,=P'0'            DO LINE CNT
         B     GDES786
GDES781  CLI   SE7PRINT,C' '            DO LINE CNT
         BNE   GDES782                  DO LINE CNT
         AP    R4LNCNT,=P'1'            DO LINE CNT
         B     GDES786
GDES782  CLI   SE7PRINT,C'-'            DO LINE CNT
         BNE   GDES783                  DO LINE CNT
         AP    R4LNCNT,=P'3'            DO LINE CNT
         B     GDES786
GDES783  CLI   SE7PRINT,C'0'            DO LINE CNT
         BNE   GDES784                  DO LINE CNT
         AP    R4LNCNT,=P'2'            DO LINE CNT
         B     GDES786
GDES784  CLI   SE7PRINT,C'+'            DO LINE CNT
         BNE   GDES785                  DO LINE CNT
         AP    R4LNCNT,=P'0'            DO LINE CNT
         B     GDES786
GDES785  MVI   SE7PRINT,C' '            SET TO A SPACE AND COUNT
         AP    R4LNCNT,=P'1'            DO LINE CNT
GDES786  GDESUBEN
         SPACE 3
GDES790  GDESUBST
         LA    R1,R4DCB                 PUT PRINT LINE
         PUT   (R1),SE7PRINT            PUT PRINT LINE
         GDESUBEN
         SPACE 3
SE7DATE  DC   2D'0'
SE7SEC   DS    PL7'0'
SE7DATA  DS    CL12' '
SE7PRINT DS    CL133
SE7LN1   DC    CL30'0'
         DC    CL28'1...5...10...15...20...25...'
         DC    CL50'30...35...40...45...50...55...60...65...70...75...'
         DC    CL22'80...85...90...95...99',CL3' '
SE7HD1   DC    CL52'1',CL81'INFORMATION MANAGEMENT SERVICES'
SE7HD2   DC    CL116'0',CL6'PAGE :',XL7'4020206B202120',CL4' '
SE7HD3   DC    CL133'1'
         EJECT
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
* GDES900 PLACES LAST CALL INFORMATION IN STORAGE IN CASE ABEND       *
*        REQUESTED                                                    *
*    INPUT:                                                           *
*    OUTPUT: ABEND MESSAGE TO PRINT FILE                              *
*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
GDES900  GDESUBST
         MVC   SE9FUN+7(1),R2FUNCTN
         MVC   SE9HEX+7(1),R2HEX
         MVC   SE9DDN+7(8),R2DDNAME
         XR    R6,R6
         ICM   R6,B'0011',R2DATALN
         CVD   R6,SE9DOUB
         ED    SE9BLK+10(6),SE9DOUB+5
         XR    R6,R6
         ICM   R6,B'0011',R2SUBLEN
         CVD   R6,SE9DOUB
         ED    SE9LRC+8(6),SE9DOUB+5
         MVC   SE9ID+6(10),R2REPTID
         ED    SE9LP+6(4),R2LN@PAG
         MVC   SE9NP+5(1),R2NEWPAG
         MVC   SE9PB+5(1),R2PAGBRK
         MVC   SE9RP+5(1),R2RESPAG
         GDESUBEN
SE9DOUB  DC    D'-1'
SE9DATAR DC    CL133' '
         ORG   *-133
SE9TRACE DC CL12' GDEPRINT - '
SE9FUN   DC CL08' FUN = X'
SE9HEX   DC CL08' HEX = X'
SE9DDN   DC CL15' DDN = XXXXXXXX'
SE9BLK   DC CL10' BLKSIZE =',XL6'402120202020'
SE9LRC   DC CL08' LRECL =',XL6'402120202020'
SE9ID    DC CL16' ID = XXXXXXXXXX'
SE9LP    DC CL06' L/P =',XL4'40212020'
SE9NP    DC CL06' N = X'
SE9PB    DC CL06' P = X'
SE9RP    DC CL06' R = X'
         ORG   SE9DATAR+133
         EJECT
***********************************************************************
*  GDESA00 - SET UP TO CAUSE PAGE BREAK IF REQUIRED.                  *
*  INPUT - R2 THROUGH R4                                              *
*  OUTPUT                                                             *
*     SE2PRINT                                                        *
***********************************************************************
GDESA00  GDESUBST
         ZAP   SEAWK1CT,R4LNCNT
         AP    SEAWK1CT,R3DATA(2)
         CP    SEAWK1CT,R2LN@PAG
         BNH   GDESA00X
         ZAP   R4LNCNT,SEAWK1CT
         ZAP   R3DATA(2),=PL1'0'
GDESA00X GDESUBEN
SEAWK1CT DC  PL3'0'
SE2TRAN5 DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 1
         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 2
         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 3
         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 4
         DC  XL16'00FFFFFFFFFFFFFFFFFF0000000000FF' 5
         DC  XL16'00FFFFFFFFFFFFFFFFFF000000000000' 6
         DC  XL16'0000FFFFFFFFFFFFFFFFFF0000000000' 7
         DC  XL16'FFFFFFFFFFFFFFFFFFFF000000000000' 8
         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 9
         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 10
         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 11
         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 12
         DC  XL16'FF000000000000000000FFFFFFFFFFFF' 13
         DC  XL16'FF000000000000000000FFFFFFFFFFFF' 14
         DC  XL16'FFFF0000000000000000FFFFFFFFFFFF' 15
         DC  XL16'00000000000000000000FFFFFFFFFFFF' 16
         END
//*********************************************************************
//*                                                                   *
//*  STEP030   PGM=IEWL                                               *
//*                                                                   *
//*********************************************************************
//STEP030 EXEC PGM=IEWL,
//             PARM='MAP,XREF,AMODE(24),RMODE(24)',
//             COND=(5,LT,STEP020)
//SYSLIB   DD  DISP=SHR,
//             DSN=SYS1.CSSLIB
//SYSLMOD  DD  DSN=&&LOAD(GDEBWOBT),
//             SPACE=(CYL,(1,1,5)),
//             DISP=(NEW,PASS,DELETE),
//             UNIT=3390,
//             RECFM=U,
//             LRECL=0,
//             BLKSIZE=27998
//SYSUT1   DD  UNIT=SYSDA,
//             DCB=BLKSIZE=1024,
//             SPACE=(1024,(200,20))
//SYSLIN   DD  DSN=&&OBJ(GDEBWOBT),
//             DISP=OLD
//         DD  DSN=&&OBJ(GDEPRINT),
//             DISP=OLD
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 ORDER GDEBWOBT,GDEPRINT
 ENTRY GDEBWOBT
 NAME GDEBWOBT(R)
//*********************************************************************
//*                                                                   *
//*  STEP030   PGM=IEWL                                               *
//*                                                                   *
//*********************************************************************
//STEP030 EXEC PGM=IEWL,
//             PARM='MAP,XREF,AMODE(24),RMODE(24)',
//             COND=(5,LT,STEP020)
//SYSLIB   DD  DISP=SHR,
//             DSN=SYS1.CSSLIB
//SYSLMOD  DD  DSN=&&LOAD(GDERLSBT),
//             SPACE=(CYL,(1,1,5)),
//             DISP=(NEW,PASS,DELETE),
//             UNIT=3390,
//             RECFM=U,
//             LRECL=0,
//             BLKSIZE=27998
//SYSUT1   DD  UNIT=SYSDA,
//             DCB=BLKSIZE=1024,
//             SPACE=(1024,(200,20))
//SYSLIN   DD  DSN=&&OBJ(GDERLSBT),
//             DISP=OLD
//         DD  DSN=&&OBJ(GDEPRINT),
//             DISP=OLD
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 ORDER GDERLSBT,GDEPRINT
 ENTRY GDERLSBT
 NAME GDERLSBT(R)
//*********************************************************************
//*                                                                   *
//*  STEP040   PGM=GDEBWTBT                                           *
//*                                                                   *
//*********************************************************************
//STEP040 EXEC PGM=GDEBWOBT
//STEPLIB  DD  DSN=&&LOAD,
//             DISP=SHR
//SYSUDUMP DD  SYSOUT=*
//GDEBWO01 DD  SYSOUT=*
//*DEBWO02 DD  SYSOUT=*  OPTIONAL TRACE OF INTERNAL CALLS LOTS OF STUFF
//GDEBWO03 DD  SYSOUT=*  OPTIONAL
//GDEBWO04 DD  SYSOUT=*  OPTIONAL
//GDEBWOA  DD  *
SHOW=<DATASET>
TEST=000
RESET
SHOW=<DATASET>
TEST=011
SET=000
RESET
SHOW=<DATASET>
SET=000
//*********************************************************************
//*                                                                   *
//*  STEP040   PGM=GDEBWTBT                                           *
//*                                                                   *
//*********************************************************************
//STEP014 EXEC PGM=GDERLSBT
//STEPLIB  DD  DSN=&&LOAD,
//             DISP=SHR
//SYSUDUMP DD  SYSOUT=*
//GDERLS01 DD  SYSOUT=*  OPTIONAL
//GDERLS02 DD  SYSOUT=*  OPTIONAL
//*DERLS03 DD  SYSOUT=*  OPTIONAL TRACE OF INTERNAL CALLS LOTS OF STUFF
//GDERLS04 DD  SYSOUT=*  OPTIONAL
//GDERLS05 DD  SYSOUT=*  OPTIONAL
//GDERLSA  DD  *
SHOW=<DSNAME>
LEVEL=<CATALOG FILTER>
